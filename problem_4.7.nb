(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    450786,       8258]
NotebookOptionsPosition[    445046,       8164]
NotebookOutlinePosition[    445439,       8180]
CellTagsIndexPosition[    445396,       8177]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Original Jack\[CloseCurlyQuote]s car rental problem", "Section",
 CellChangeTimes->{{3.792730561175968*^9, 3.7927305725603247`*^9}, {
  3.7964081980536757`*^9, 3.7964082112297697`*^9}, {3.796408808827015*^9, 
  3.796408810306715*^9}},ExpressionUUID->"d9d67a5d-b378-461f-bbd7-\
e6da45faba8a"],

Cell[TextData[{
 "Random variables:\nReturns at location A: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["X", "A"], "~", 
    RowBox[{"PoissonDistribution", "[", "3", "]"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "56298fc1-6ff1-4b09-a90e-05eda4336f43"],
 "\nReturns at location B: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["X", "B"], "~", 
    RowBox[{"PoissonDistribution", "[", "2", "]"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "518785aa-206c-4d5f-8372-1e2dcef69fce"],
 "\nRental requests at location A: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["Y", "A"], "~", 
    RowBox[{"PoissonDistribution", "[", "3", "]"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "59db2fb8-2c26-4092-955b-f10fdef4f9f8"],
 "\nRental requests at location B: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["Y", "B"], "~", 
    RowBox[{"PoissonDistribution", "[", "4", "]"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "b744fd87-9b06-431f-81fb-c3e7ec3f6d60"]
}], "Text",
 CellChangeTimes->{{3.796625113691657*^9, 
  3.796625219764695*^9}},ExpressionUUID->"0f70538c-a276-4c48-ac91-\
91804d1067ca"],

Cell[TextData[{
 "End of day ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "0d138aed-940c-4cda-be9e-68a74f4b1573"],
 ": state is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"s", "=", 
    RowBox[{"(", 
     RowBox[{"i", ",", "j"}], ")"}]}], TraditionalForm]],ExpressionUUID->
  "0f5b9d0f-b664-4ee9-b40e-d6c72bab74ab"],
 "\nAction a is taken: state is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"i", "-", "a"}], ",", 
     RowBox[{"j", "+", "a"}]}], ")"}], TraditionalForm]],ExpressionUUID->
  "aceec6b5-3388-4e1e-bc7c-a4a57a2bd033"],
 ", where ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Min", "[", 
      RowBox[{"j", ",", "5"}], "]"}]}], "\[LessEqual]", "a", "\[LessEqual]", 
    RowBox[{"Min", "[", 
     RowBox[{"i", ",", "5"}], "]"}]}], TraditionalForm]],ExpressionUUID->
  "0ea23958-d2b9-4049-84cc-ea268b3897c5"],
 "\nCars are rented during the day: state is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"i", "-", "a", "-", 
      RowBox[{"Min", "[", 
       RowBox[{
        RowBox[{"i", "-", "a"}], ",", 
        SubscriptBox["Y", "A"]}], "]"}]}], ",", 
     RowBox[{"j", "+", "a", "-", 
      RowBox[{"Min", "[", 
       RowBox[{
        RowBox[{"j", "+", "a"}], ",", 
        SubscriptBox["Y", "B"]}], "]"}]}]}], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "e321c4d9-3f1e-483c-a85b-abd6e941be93"],
 "\nCars are returned at the end of the day and excess cars are shipped away: \
state is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Min", "[", 
      RowBox[{
       RowBox[{"i", "-", "a", "-", 
        RowBox[{"Min", "[", 
         RowBox[{
          RowBox[{"i", "-", "a"}], ",", 
          SubscriptBox["Y", "A"]}], "]"}], "+", 
        SubscriptBox["X", "A"]}], ",", "20"}], "]"}], ",", 
     RowBox[{"Min", "[", 
      RowBox[{
       RowBox[{"j", "+", "a", "-", 
        RowBox[{"Min", "[", 
         RowBox[{
          RowBox[{"j", "+", "a"}], ",", 
          SubscriptBox["Y", "B"]}], "]"}], "+", 
        SubscriptBox["X", "B"]}], ",", "20"}], "]"}]}], ")"}], 
   TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "d6469e2a-9e70-4ba7-8fc2-9b89b45f3948"],
 "\nEnd of day ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "+", "1"}], TraditionalForm]],ExpressionUUID->
  "8ecb76f8-99cd-4058-80ba-ec6823945e70"],
 ": state is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"s", "'"}], "=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"i", "'"}], ",", 
      RowBox[{"j", "'"}]}], ")"}]}], TraditionalForm]],ExpressionUUID->
  "cb0e9c40-186c-46c8-87f7-a665d01c4de2"]
}], "Text",
 CellChangeTimes->{{3.7964746042742987`*^9, 3.7964747924038677`*^9}, {
  3.796474866476758*^9, 3.7964749544621973`*^9}, {3.796475000925256*^9, 
  3.796475039399259*^9}, {3.796538704912202*^9, 3.796538705351665*^9}, {
  3.796625251332738*^9, 
  3.796625370222579*^9}},ExpressionUUID->"9dde203c-5605-4284-95a6-\
bd86327301aa"],

Cell[CellGroupData[{

Cell[TextData[{
 "Joint distribution ",
 Cell[BoxData[
  FormBox[
   RowBox[{"p", "(", 
    RowBox[{
     RowBox[{"s", "'"}], ",", 
     RowBox[{"r", "|", "s"}], ",", "a"}], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "f597715c-4cbf-465c-8a07-1fdc6a299e54"]
}], "Subsection",
 CellChangeTimes->{{3.796543897082107*^9, 
  3.796543912877664*^9}},ExpressionUUID->"03886362-3040-4731-81f4-\
cf2c76b21de0"],

Cell["This computes the joint distribution numerically.", "Text",
 CellChangeTimes->{{3.79654392161092*^9, 
  3.796543936531322*^9}},ExpressionUUID->"1e0528a1-9917-4bd6-bc8b-\
e555c1aacba4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"xa", ",", "xb", ",", "ya", ",", "yb"}], "}"}], ",", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{"-", "12."}], "]"}], 
      FractionBox[
       SuperscriptBox["3.", "xa"], 
       RowBox[{"Gamma", "[", 
        RowBox[{"xa", "+", "1"}], "]"}]], 
      FractionBox[
       SuperscriptBox["2.", "xb"], 
       RowBox[{"Gamma", "[", 
        RowBox[{"xb", "+", "1"}], "]"}]], 
      FractionBox[
       SuperscriptBox["3.", "ya"], 
       RowBox[{"Gamma", "[", 
        RowBox[{"ya", "+", "1"}], "]"}]], 
      FractionBox[
       SuperscriptBox["4.", "yb"], 
       RowBox[{"Gamma", "[", 
        RowBox[{"yb", "+", "1"}], "]"}]]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NextState", "=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "xa", ",", "xb", ",", "ya", ",", "yb", ",", "i", ",", "j", ",", "a"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Min", "[", 
        RowBox[{
         RowBox[{"i", "-", "a", "-", 
          RowBox[{"Min", "[", 
           RowBox[{
            RowBox[{"i", "-", "a"}], ",", "ya"}], "]"}], "+", "xa"}], ",", 
         "20"}], "]"}], ",", 
       RowBox[{"Min", "[", 
        RowBox[{
         RowBox[{"j", "+", "a", "-", 
          RowBox[{"Min", "[", 
           RowBox[{
            RowBox[{"j", "+", "a"}], ",", "yb"}], "]"}], "+", "xb"}], ",", 
         "20"}], "]"}], ",", 
       RowBox[{
        RowBox[{"Min", "[", 
         RowBox[{
          RowBox[{"i", "-", "a"}], ",", "ya", ",", "20"}], "]"}], "+", 
        RowBox[{"Min", "[", 
         RowBox[{
          RowBox[{"j", "+", "a"}], ",", "yb", ",", "20"}], "]"}]}]}], "}"}]}],
     "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cJoint", "=", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", "_Integer"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "_Integer"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"a", ",", "_Integer"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"joint", "=", 
          RowBox[{"Table", "[", 
           RowBox[{"0.0", ",", 
            RowBox[{"{", "21", "}"}], ",", 
            RowBox[{"{", "21", "}"}], ",", 
            RowBox[{"{", "41", "}"}]}], "]"}]}], ",", "ip", ",", "jp", ",", 
         "r"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"a", ">", 
            RowBox[{"Min", "[", 
             RowBox[{"i", ",", "5"}], "]"}]}], "\[Or]", 
           RowBox[{"a", "<", 
            RowBox[{"-", 
             RowBox[{"Min", "[", 
              RowBox[{"j", ",", "5"}], "]"}]}]}]}], ",", 
          RowBox[{"Return", "[", "joint", "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"ip", ",", "jp", ",", "r"}], "}"}], "=", 
            RowBox[{"NextState", "[", 
             RowBox[{
             "xa", ",", "xb", ",", "ya", ",", "yb", ",", "i", ",", "j", ",", 
              "a"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"joint", "\[LeftDoubleBracket]", 
             RowBox[{
              RowBox[{"ip", "+", "1"}], ",", 
              RowBox[{"jp", "+", "1"}], ",", 
              RowBox[{"r", "+", "1"}]}], "\[RightDoubleBracket]"}], "+=", 
            RowBox[{"P", "[", 
             RowBox[{"xa", ",", "xb", ",", "ya", ",", "yb"}], "]"}]}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"xa", ",", "0", ",", "20"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"xb", ",", "0", ",", "20"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"ya", ",", "0", ",", "20"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"yb", ",", "0", ",", "20"}], "}"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        "joint"}]}], "\[IndentingNewLine]", "]"}], ",", 
     RowBox[{"CompilationOptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<InlineExternalDefinitions\>\"", "\[Rule]", "True"}], 
       "}"}]}], ",", 
     RowBox[{"CompilationTarget", "\[Rule]", "\"\<C\>\""}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.796548700666926*^9, 3.796548807173098*^9}, {
   3.796548848071961*^9, 3.796548892234785*^9}, {3.7965489771430187`*^9, 
   3.796548981231721*^9}, {3.796549073107232*^9, 3.796549078997549*^9}, {
   3.796549114519184*^9, 3.796549136098373*^9}, {3.796549243599058*^9, 
   3.796549287169594*^9}, {3.796549378876812*^9, 3.796549422256586*^9}, {
   3.796549506771668*^9, 3.796549551748192*^9}, {3.796549585978669*^9, 
   3.7965495866726418`*^9}, {3.796549621326611*^9, 3.796549639084812*^9}, 
   3.796549709625465*^9, {3.796549822595194*^9, 3.796549854616311*^9}, {
   3.7965572650467157`*^9, 3.796557315658103*^9}, {3.796581774597083*^9, 
   3.79658178490524*^9}, {3.796585620670207*^9, 3.7965856435882263`*^9}, {
   3.796622216239402*^9, 3.7966222415085897`*^9}, {3.796624510595086*^9, 
   3.7966246133113737`*^9}, {3.796624739438547*^9, 3.796624748880253*^9}, {
   3.796624870325028*^9, 3.796624878948393*^9}, {3.796625022698197*^9, 
   3.796625023151547*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"2df464f6-d63f-4e48-acfd-a39d3834c489"],

Cell["We precompute the whole distribution. This takes ~1min.", "Text",
 CellChangeTimes->{{3.79662505293099*^9, 
  3.796625075778803*^9}},ExpressionUUID->"6686ccb5-b0f5-4f27-9777-\
167fd359ff98"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SetSharedFunction", "[", "Joint", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LaunchKernels", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ParallelDo", "[", 
   RowBox[{
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Joint", "[", 
        RowBox[{"i", ",", "j", ",", "a"}], "]"}], "=", 
       RowBox[{"cJoint", "[", 
        RowBox[{"i", ",", "j", ",", "a"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"a", ",", 
        RowBox[{"-", 
         RowBox[{"Min", "[", 
          RowBox[{"j", ",", "5"}], "]"}]}], ",", 
        RowBox[{"Min", "[", 
         RowBox[{"i", ",", "5"}], "]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", "20"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "20"}], "}"}], ",", 
    RowBox[{"Method", "\[Rule]", "\"\<CoarsestGrained\>\""}]}], "]"}], "//", 
  "AbsoluteTiming"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CloseKernels", "[", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.79662225014933*^9, 3.7966222634514847`*^9}, 
   3.796625046437787*^9, {3.796643673219742*^9, 3.796643688913803*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"898a44f6-291c-46b5-a6a2-8b62c1a2c1d9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"79.35432`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.796622432179619*^9, 3.796624636785553*^9, 
  3.7966249586079073`*^9, 3.796634651297317*^9, 3.796636475030566*^9, 
  3.7966437882904367`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"1db4cbcb-1028-4b7e-b2a0-b39baa35fb4b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Policy evaluation", "Subsection",
 CellChangeTimes->{{3.796543897082107*^9, 3.796543912877664*^9}, {
  3.796549873459723*^9, 
  3.796549890364771*^9}},ExpressionUUID->"10d09eab-51f5-43ee-b171-\
1f6e0c7b2b4b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"EvaluatePolicy", "[", 
   RowBox[{"V0_", ",", "\[CapitalPi]_", ",", "\[Theta]_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"V", "=", "V0"}], ",", "v", ",", 
      RowBox[{"\[CapitalDelta]", "=", 
       RowBox[{"1.0", "+", "\[Theta]"}]}], ",", 
      RowBox[{"\[Gamma]", "=", "0.9"}], ",", "a", ",", "p", ",", "weight"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"\[CapitalDelta]", ">", "\[Theta]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[CapitalDelta]", "=", "0.0"}], ";", "\[IndentingNewLine]", 
        RowBox[{"weight", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"10", "r"}], "+", 
            RowBox[{"\[Gamma]", " ", 
             RowBox[{"V", "\[LeftDoubleBracket]", 
              RowBox[{
               RowBox[{"ip", "+", "1"}], ",", 
               RowBox[{"jp", "+", "1"}]}], "\[RightDoubleBracket]"}]}]}], ",", 
           RowBox[{"{", 
            RowBox[{"ip", ",", "0", ",", "20"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"jp", ",", "0", ",", "20"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"r", ",", "0", ",", "40"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"v", "=", 
            RowBox[{"V", "\[LeftDoubleBracket]", 
             RowBox[{
              RowBox[{"i", "+", "1"}], ",", 
              RowBox[{"j", "+", "1"}]}], "\[RightDoubleBracket]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"a", "=", 
            RowBox[{"\[CapitalPi]", "\[LeftDoubleBracket]", 
             RowBox[{
              RowBox[{"i", "+", "1"}], ",", 
              RowBox[{"j", "+", "1"}]}], "\[RightDoubleBracket]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"V", "\[LeftDoubleBracket]", 
             RowBox[{
              RowBox[{"i", "+", "1"}], ",", 
              RowBox[{"j", "+", "1"}]}], "\[RightDoubleBracket]"}], "=", 
            RowBox[{"Total", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Joint", "[", 
                RowBox[{"i", ",", "j", ",", "a"}], "]"}], 
               RowBox[{"(", 
                RowBox[{"weight", "-", 
                 RowBox[{"2", 
                  RowBox[{"Abs", "[", "a", "]"}]}]}], ")"}]}], ",", "3"}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"weight", "\[LeftDoubleBracket]", 
             RowBox[{
              RowBox[{"i", "+", "1"}], ",", 
              RowBox[{"j", "+", "1"}]}], "\[RightDoubleBracket]"}], "+=", 
            RowBox[{"\[Gamma]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"V", "\[LeftDoubleBracket]", 
                RowBox[{
                 RowBox[{"i", "+", "1"}], ",", 
                 RowBox[{"j", "+", "1"}]}], "\[RightDoubleBracket]"}], "-", 
               "v"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"\[CapitalDelta]", "=", 
            RowBox[{"Max", "[", 
             RowBox[{"\[CapitalDelta]", ",", 
              RowBox[{"Abs", "[", 
               RowBox[{"v", "-", 
                RowBox[{"V", "\[LeftDoubleBracket]", 
                 RowBox[{
                  RowBox[{"i", "+", "1"}], ",", 
                  RowBox[{"j", "+", "1"}]}], "\[RightDoubleBracket]"}]}], 
               "]"}]}], "]"}]}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "20"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "0", ",", "20"}], "}"}]}], "\[IndentingNewLine]",
          "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]",
      "V"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.796550314841609*^9, 3.796550553049486*^9}, {
   3.796550589668076*^9, 3.796550597412046*^9}, {3.796550654644329*^9, 
   3.79655077724086*^9}, {3.796550889618314*^9, 3.796550930892747*^9}, {
   3.796551034548215*^9, 3.796551035623632*^9}, {3.796551088091647*^9, 
   3.796551110142379*^9}, {3.796551195781826*^9, 3.796551267064527*^9}, {
   3.796551378223322*^9, 3.796551414907325*^9}, {3.79655145789526*^9, 
   3.7965514848837643`*^9}, {3.79655181619845*^9, 3.796551844158956*^9}, {
   3.7965518952631283`*^9, 3.796552159730587*^9}, {3.796552301100987*^9, 
   3.796552517139677*^9}, {3.796552844145993*^9, 3.796552886061144*^9}, {
   3.796553006544663*^9, 3.796553006647587*^9}, {3.796553082089387*^9, 
   3.796553127977417*^9}, {3.796553390539603*^9, 3.796553390931314*^9}, {
   3.796553465424679*^9, 3.7965534692502403`*^9}, {3.7965535429038773`*^9, 
   3.796553675837072*^9}, {3.796553853042069*^9, 3.796553874861964*^9}, {
   3.796553914535933*^9, 3.796553957480921*^9}, {3.7965541604561462`*^9, 
   3.7965542277448683`*^9}, {3.7965542590268173`*^9, 
   3.7965542634951572`*^9}, {3.79655430829021*^9, 3.796554309566215*^9}, {
   3.7965543686777678`*^9, 3.796554472307501*^9}, 3.796554606914845*^9, {
   3.796557088918418*^9, 3.7965570916665993`*^9}, {3.796557920845022*^9, 
   3.7965579245395947`*^9}, {3.796558235476179*^9, 3.7965582451014214`*^9}, {
   3.79655827682953*^9, 3.7965583621967297`*^9}, {3.796558395033017*^9, 
   3.796558396358165*^9}, 3.796558537866926*^9, {3.796558577459218*^9, 
   3.7965585933689537`*^9}, {3.796558625739359*^9, 3.7965586276395073`*^9}, {
   3.796558730348814*^9, 3.796558731210566*^9}, {3.7965593861968517`*^9, 
   3.796559391403982*^9}, 3.796559519194927*^9, {3.7965603314579687`*^9, 
   3.7965603588666973`*^9}, {3.79656084231812*^9, 3.796560878491631*^9}, {
   3.796560986391603*^9, 3.796560992101762*^9}, 3.7965610955282373`*^9, {
   3.7965611417311087`*^9, 3.796561153198398*^9}, {3.796561188406272*^9, 
   3.7965611915477533`*^9}, {3.796564719325663*^9, 3.796564722619308*^9}, {
   3.79656929289152*^9, 3.796569308192479*^9}, {3.796618334529592*^9, 
   3.796618401242745*^9}, {3.796618433678203*^9, 3.7966184407299137`*^9}, {
   3.796618785534285*^9, 3.796618789653857*^9}, {3.796622484881819*^9, 
   3.796622598796071*^9}, {3.796622679204959*^9, 3.796622727591523*^9}, {
   3.7966229898320436`*^9, 3.796622998436878*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"d0ae15af-fb0a-4bc9-a7b6-f227bc10464a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EvaluatePolicy", "[", 
    RowBox[{
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0.0", ",", 
       RowBox[{"{", 
        RowBox[{"21", ",", "21"}], "}"}]}], "]"}], ",", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"21", ",", "21"}], "}"}]}], "]"}], ",", "0.01"}], "]"}], "//",
    "MatrixPlot"}], "//", "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.796554570047151*^9, 3.796554571467176*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"c3b287d5-ff20-4005-808f-eb4a37f84de1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.037346`", ",", 
   GraphicsBox[RasterBox[CompressedData["
1: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
UrcYxgG/CzsT/K9j/yCxw24N2VdebfmZSRMoDsn8cYZ7ANMrNddZc7GQzxKY
GDeYAJ/5uMbdhj6wfPaZhpL9HOCjZf/p1zhiaI76o5a9kBY4yl7eRvqa+B7P
hsBxfNO4sZ0Z140CsUTjl6QvN8RuTb7Uy4Dt8kYie7YDP11kXzwNIvBA1kiz
7AADra8DrTsftkG/xH9dILlnz3Dv3p4dPYY9jiFbqzY145Ll6WG6GtmHcwI7
gn/RsaZozZtfu+rgyHf9juJ6khOy7vJ9MaAjSfym3ostlXjZkbx7coqJ3T5l
15NzaKj8ndl7SbkYlPMPPM06mHhimb3GYzcNcl2CEhJHPuJmkv1k+XsmWnVZ
DLe4USRKafJW+6Zjd7J5DjfJCbYVbCWvxSQ/OLB9/qqGgefCKN9Psq8+Cmhv
jYym4iS39UOXNG+YJr4/Jk7m1dqiW2ozulQoBD1obn7picJxQbmCGwT4jQ/J
DC5QIHI+vZ9W644tx0N+/yQ56pPtqy7lJAqCeVoj/vi6wtkgCN9WsXA9QzC6
9BIF3tYPcwNyndGYEiczbsjCK4UoYTUhChptd2UIsx1hvsaI8j2KBc9ATfV9
70bACqR03qxywFv9lJDAdhZejz66MrB/BF0P2kSsyuxgwzMcmUTyiUl5Rp/n
4ASed1WuTiG9f0b9wKuNK1nYIaiSIBM5AdXm3pUatf3YYpLA//kPgSdZ2/Md
MYHIxFWNi3364FGutl5snOTen+aCRmPjYA8efpwp3At7MVH/gAYCC2qOw5E3
xkHfl6mTfbAbxq8T/QJfE2Cr+Z5aVc6Ao5fA/sUJHTh2y+Ai7S6BJc4lnCv7
GPh93jWszr4Ngyzv27kWBHDpz7vo1DF4H1ISVAxuxmB5uNYtEPAkorZqLR2D
EGV6Q2p6HfR9fHdJiRKQXyr6RsiZjmMv9kheFKiCSs7SX3lzTCy/WvlndQ8N
3jLY//doKU41nqwNHGRimVbAYydD0iOSajZu/FqIIzkn3x38wsRE4YDDZNUo
NKfWuslEZWPW+uuZoy+YEC5btLtJkbyuu5CjWBSLdwpb1D+lMqG94q3Ow3Iq
3mZI6qR89IFeW8KSfSSvDq/XHn3qRkVAaovit1ov3N0dzJeuR2Aw9qR05jby
esEUd3KWB1abhSv6RxL4cz4p9kI3BW8nPvAbNbiB/vTH6fwOAirq/30IeU6B
hNlS4QgVV3xvez6VvI4F5c4wQuACBb0d5jCNdMbFNdNNN46xcOp8yfP4beR9
uhN/z+s4Yfnxy2X2cizkRN+PthP6BlsrLY3c0kGU5H79fkWUhZjSHXxP2ieg
/rNON69oAMvnC+94LWfB4Fdz+6nACWjacx8ffdCPBzvWdnbMESgLUnYRV56A
yELvL6NLfbCQkh+JJvPtxjUd1fThcfxZ4Z5o8bcHYUsSD/Q3E0geLF67z2cc
H1/96ZH36MaFAzGdhzIIzE9vf/BshAH6+QPvJNZ2IkKzaVMomZ9ntcv6Dhsx
YOb102iQpx16MuGbT9qR/uj6yrmvZgwhs/SU2pAWOI9JTPgcIffL+FZz5Z1j
+FtjvzmjqB5uFaZTC1JknsgJD299SfZDgqDQlGk17Nb/LWnmJ3Azc97utigd
vzuPXvjrUo5zebyV3JNMrNNLpNg/oeFxj5nYBpOvuKq2Xe9pDRNzooylA39G
8fUO/5s9m/Oww0tP7kwWE4l9+9nXQkZh3SHd3pX0FopKUdbWT5g4LE/8vriW
9M3vifx8h58iLGHMs76IiX8HjXYkZlDB2Cz9/LWEDz5RTXu7uUmutjy3f4k1
FQKSH/Lmnbxgkfb4Wbw+AdU3+eurNlKRxMzznvLxgLqXybPfAQTUy84EFI9T
IPo9uJtHzZ30Dl63igKSu3gV5U7nkfkQ4fIgcdIVYYPfz19RYeG/0rdWSXrf
0FjIF7MylOTBsy/e1cmyEPst85GGwDf02Zyme5IeEPRo6mHvZhZ6fleXMBom
oNQkYOSZPABKoZL0DgEWEmJ4ilIeTUB7efLJ0tR+UJ1pzy8tkDlAT7kUqjsB
/uXqkdzP+/Bw6Mj+8G8E3lmfuc4zNY7pw8PXY7V7cdHWmnmY7Gd9PoFNwaHj
MForPq9U0Y2IzFTHu+T5txgFPRVfN47XBzQkSsY6Edy22En7GQEdWqbsx7sM
qAu5rqtJa8fBQwMmTBfy/zp7vHvAGoNBz/elYsatmN6QaWlvQMAkPnaHs+kY
wgzE5wMvNsIu6JFBoTKBmL1VekcYdHBRorPNE2oRvFLakLmBgEVo5BdFYzoU
xEQGbhpVQkNWzWuE9EF1l8cNbDoN9cIWgssKSlGloXdQYpSJkKvTGxc70vB2
kbBOtsZn0o86VHUrmLiZmv57+bdRzMSllB357z2UvFmrM94w8fJ1ld1ZR3KP
+Pvk/LcyBT2PVnW1hJP+suGl6pUVo+CqY/s2hUSgZNw1+l4+E5eaY/U786ko
efHzb/YVH9iamdtmspmY2rhEbLUPFe7z7xXFCC8Ic2/cjJ0ESvbWyo9pUBGu
yajYbOuJ/wE36uKX
     "], {{0, 0}, {21, 21}}, {0, 1}],
    Frame->True,
    FrameLabel->{None, None},
    FrameTicks->{{{{20.5, 
         FormBox["1", TraditionalForm]}, {16.5, 
         FormBox["5", TraditionalForm]}, {11.5, 
         FormBox["10", TraditionalForm]}, {6.5, 
         FormBox["15", TraditionalForm]}, {0.5, 
         FormBox["21", TraditionalForm]}}, {{20.5, 
         FormBox["1", TraditionalForm]}, {16.5, 
         FormBox["5", TraditionalForm]}, {11.5, 
         FormBox["10", TraditionalForm]}, {6.5, 
         FormBox["15", TraditionalForm]}, {0.5, 
         FormBox["21", TraditionalForm]}}}, {{{0.5, 
         FormBox["1", TraditionalForm]}, {4.5, 
         FormBox["5", TraditionalForm]}, {9.5, 
         FormBox["10", TraditionalForm]}, {14.5, 
         FormBox["15", TraditionalForm]}, {20.5, 
         FormBox["21", TraditionalForm]}}, {{0.5, 
         FormBox["1", TraditionalForm]}, {4.5, 
         FormBox["5", TraditionalForm]}, {9.5, 
         FormBox["10", TraditionalForm]}, {14.5, 
         FormBox["15", TraditionalForm]}, {20.5, 
         FormBox["21", TraditionalForm]}}}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
      "RangePadding" -> Scaled[0.05]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7966187807466793`*^9, 3.796618813175805*^9, 3.796622654067276*^9, 
   3.79662274096835*^9, {3.796623003594349*^9, 3.796623008436874*^9}, 
   3.7966249739811163`*^9, {3.796634742073193*^9, 3.796634750671339*^9}, 
   3.796636505384604*^9, 3.79664380094131*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"731e3b59-2241-4008-b9b0-7f3281c0e5a4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Policy improvement", "Subsection",
 CellChangeTimes->{{3.796543897082107*^9, 3.796543912877664*^9}, {
  3.796549873459723*^9, 3.796549890364771*^9}, {3.796561224011042*^9, 
  3.796561225226378*^9}},ExpressionUUID->"f93e7dc0-d3e8-4cab-b7a0-\
7068d7dc627a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ImprovePolicy", "[", 
   RowBox[{"V_", ",", "\[CapitalPi]0_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[CapitalPi]", "=", "\[CapitalPi]0"}], ",", 
      RowBox[{"\[Gamma]", "=", "0.9"}], ",", "stable", ",", "\[Pi]old", ",", 
      "A", ",", "joint", ",", "weight"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"stable", "=", "True"}], ";", "\[IndentingNewLine]", 
     RowBox[{"weight", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"10", "r"}], "+", 
         RowBox[{"\[Gamma]", " ", 
          RowBox[{"V", "\[LeftDoubleBracket]", 
           RowBox[{
            RowBox[{"ip", "+", "1"}], ",", 
            RowBox[{"jp", "+", "1"}]}], "\[RightDoubleBracket]"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"ip", ",", "0", ",", "20"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"jp", ",", "0", ",", "20"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", "0", ",", "40"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Pi]old", "=", 
         RowBox[{"\[CapitalPi]", "\[LeftDoubleBracket]", 
          RowBox[{
           RowBox[{"i", "+", "1"}], ",", 
           RowBox[{"j", "+", "1"}]}], "\[RightDoubleBracket]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"A", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"a", ",", 
             RowBox[{"Total", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Joint", "[", 
                 RowBox[{"i", ",", "j", ",", "a"}], "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{"weight", "-", 
                  RowBox[{"2", 
                   RowBox[{"Abs", "[", "a", "]"}]}]}], ")"}]}], ",", "3"}], 
              "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"a", ",", 
             RowBox[{"-", 
              RowBox[{"Min", "[", 
               RowBox[{"j", ",", "5"}], "]"}]}], ",", 
             RowBox[{"Min", "[", 
              RowBox[{"i", ",", "5"}], "]"}]}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\[CapitalPi]", "\[LeftDoubleBracket]", 
          RowBox[{
           RowBox[{"i", "+", "1"}], ",", 
           RowBox[{"j", "+", "1"}]}], "\[RightDoubleBracket]"}], "=", 
         RowBox[{"First", "@", 
          RowBox[{"First", "@", 
           RowBox[{
            RowBox[{"MaximalBy", "[", "Last", "]"}], "@", "A"}]}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"\[CapitalPi]", "\[LeftDoubleBracket]", 
            RowBox[{
             RowBox[{"i", "+", "1"}], ",", 
             RowBox[{"j", "+", "1"}]}], "\[RightDoubleBracket]"}], 
           "\[NotEqual]", "\[Pi]old"}], ",", 
          RowBox[{"stable", "=", "False"}]}], "]"}], ";"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "20"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "20"}], "}"}]}], "\[IndentingNewLine]", 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"stable", ",", "\[CapitalPi]"}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.796564597819805*^9, 3.796564603238359*^9}, {
   3.7965647341760406`*^9, 3.796564776738172*^9}, {3.7965648233936653`*^9, 
   3.796564857969907*^9}, {3.796565068170816*^9, 3.7965650687787857`*^9}, {
   3.796565112723021*^9, 3.796565128460554*^9}, {3.796565263693656*^9, 
   3.796565345063962*^9}, {3.796565415924*^9, 3.796565582601273*^9}, 
   3.796565619337111*^9, {3.796583955300211*^9, 3.796583963091762*^9}, 
   3.796584127326687*^9, 3.7966227565795527`*^9},
 CellLabel->"In[10]:=",ExpressionUUID->"cb886de6-1d9f-4814-ace3-b48a027195ca"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ImprovePolicy", "[", 
     RowBox[{
      RowBox[{"ConstantArray", "[", 
       RowBox[{"0.0", ",", 
        RowBox[{"{", 
         RowBox[{"21", ",", "21"}], "}"}]}], "]"}], ",", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"21", ",", "21"}], "}"}]}], "]"}]}], "]"}], "//", "Last"}], "//",
    "MatrixPlot"}], "//", "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.796554570047151*^9, 3.796554571467176*^9}, {
   3.796565364014597*^9, 3.7965653869984503`*^9}, 3.796584512080585*^9, {
   3.796585918665122*^9, 3.796585923756042*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"98020535-5a89-46d6-a33f-41d5a124505c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.348206`", ",", 
   GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGAQhWIQGwI+2D+sElnn/vCWPQMKwBSfk2waKRj41l6I7XMA
q/QDe77DOheXSxbaVz29evzr3df2ho/jLPfHPrZPqfvv6CK/037hW9tzTY/e
2PcvDdfSvvjc/nvxxUK/k9ftHY33r7lz8q196JTXqxjzX9u/E3J+ez36iT3M
3lGaPvRovI9MejTeRyY9Gu8jkx6N95FJj8b7yKRH431k0qPxPjLp0XgfmTSx
8Tsa78OLpjRfj8b70KJpna9H431w0gOVr0fjfWDp0Xw9MunRfD0yaVLz72i+
Hh40tfLvaLwPLXqoxKNtqsCfoEeP7Rcca1x7x+Klfc5xb+Mvv1+PipMpPtTj
UUyrTHMG53X72UH3n6YJPLGf/q3m//4bL0fFCYgPtvillr8inLMDBM9fsNea
eLjkLvNDe+Hg4vaSi69GxaHiAxXvAxWPO77slVZiOW9fUKm457n/HfvtGfce
N256PeLEAXG8TXA=
     "], {{0, 0}, {21, 21}}, {0, 1}],
    Frame->True,
    FrameLabel->{None, None},
    FrameTicks->{{{{20.5, 
         FormBox["1", TraditionalForm]}, {16.5, 
         FormBox["5", TraditionalForm]}, {11.5, 
         FormBox["10", TraditionalForm]}, {6.5, 
         FormBox["15", TraditionalForm]}, {0.5, 
         FormBox["21", TraditionalForm]}}, {{20.5, 
         FormBox["1", TraditionalForm]}, {16.5, 
         FormBox["5", TraditionalForm]}, {11.5, 
         FormBox["10", TraditionalForm]}, {6.5, 
         FormBox["15", TraditionalForm]}, {0.5, 
         FormBox["21", TraditionalForm]}}}, {{{0.5, 
         FormBox["1", TraditionalForm]}, {4.5, 
         FormBox["5", TraditionalForm]}, {9.5, 
         FormBox["10", TraditionalForm]}, {14.5, 
         FormBox["15", TraditionalForm]}, {20.5, 
         FormBox["21", TraditionalForm]}}, {{0.5, 
         FormBox["1", TraditionalForm]}, {4.5, 
         FormBox["5", TraditionalForm]}, {9.5, 
         FormBox["10", TraditionalForm]}, {14.5, 
         FormBox["15", TraditionalForm]}, {20.5, 
         FormBox["21", TraditionalForm]}}}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
      "RangePadding" -> Scaled[0.05]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.796584982711605*^9, 3.796585119027671*^9, 3.7965859264137783`*^9, 
   3.796586158092082*^9, 3.7965862583394823`*^9, {3.796622753120604*^9, 
   3.7966227621058283`*^9}, {3.7966230160169373`*^9, 3.7966230185186787`*^9}, 
   3.7966249787805233`*^9, 3.796634759956905*^9, 3.7966365108269033`*^9, 
   3.796643808095456*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"ad89829c-04e1-4354-91e8-a52dfd25396b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Policy iteration", "Subsection",
 CellChangeTimes->{{3.796543897082107*^9, 3.796543912877664*^9}, {
  3.796549873459723*^9, 3.796549890364771*^9}, {3.796561224011042*^9, 
  3.796561225226378*^9}, {3.79656793601147*^9, 
  3.7965679369554367`*^9}},ExpressionUUID->"1c62f864-4497-483e-a004-\
1adecafc10e0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"EstimatePolicy", "[", "\[Theta]_Real", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "V", ",", "\[CapitalPi]", ",", "policyStable", ",", "\[CapitalDelta]t", 
      ",", 
      RowBox[{"step", "=", "1"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"V", "=", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"500.", ",", 
        RowBox[{"{", 
         RowBox[{"21", ",", "21"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[CapitalPi]", "=", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"21", ",", "21"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"policyStable", "=", "False"}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"\[Not]", "policyStable"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[CapitalDelta]t", ",", "V"}], "}"}], "=", 
         RowBox[{"AbsoluteTiming", "@", 
          RowBox[{"EvaluatePolicy", "[", 
           RowBox[{"V", ",", "\[CapitalPi]", ",", "\[Theta]"}], "]"}]}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<Policy evaluation \>\"", ",", "step", ",", "\"\< took \>\"", 
          ",", "\[CapitalDelta]t", ",", "\"\< sec.\>\""}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[CapitalDelta]t", ",", 
           RowBox[{"{", 
            RowBox[{"policyStable", ",", "\[CapitalPi]"}], "}"}]}], "}"}], 
         "=", 
         RowBox[{"AbsoluteTiming", "@", 
          RowBox[{"ImprovePolicy", "[", 
           RowBox[{"V", ",", "\[CapitalPi]"}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<Policy improvement \>\"", ",", "step", ",", "\"\< took \>\"", 
          ",", "\[CapitalDelta]t", ",", "\"\< sec.\>\""}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"step", "+=", "1"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"policyPlot", "=", 
      RowBox[{"ListContourPlot", "[", 
       RowBox[{"\[CapitalPi]", ",", 
        RowBox[{"Contours", "\[Rule]", 
         RowBox[{"Range", "[", 
          RowBox[{
           RowBox[{"-", "5"}], ",", "5"}], "]"}]}], ",", 
        RowBox[{"ContourLabels", "\[Rule]", "All"}], ",", 
        RowBox[{"InterpolationOrder", "\[Rule]", "0"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<Cars at 2nd location\>\"", ",", 
           "\"\<Cars at 1st location\>\""}], "}"}]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"valuePlot", "=", 
      RowBox[{"ListPlot3D", "[", 
       RowBox[{"V", ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"DataRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "20"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "20"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<Cars at 1st location\>\"", ",", 
           "\"\<Cars at 2nd location\>\""}], "}"}]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"V", ",", "\[CapitalPi]"}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.796569206202099*^9, 3.79656927167028*^9}, {
  3.7965694525208807`*^9, 3.7965696121789722`*^9}, {3.7965698301246157`*^9, 
  3.796569898916793*^9}, {3.7965700566197443`*^9, 3.796570057845752*^9}, {
  3.796570099603156*^9, 3.7965701012949266`*^9}, {3.7965711012972527`*^9, 
  3.796571101374669*^9}, {3.796571152156583*^9, 3.796571215919601*^9}, {
  3.796587083330812*^9, 3.796587118130467*^9}, {3.796622777455852*^9, 
  3.796622777976626*^9}, {3.79662303235011*^9, 3.796623134602825*^9}, {
  3.796623772229892*^9, 3.796623774155054*^9}, {3.796623840132914*^9, 
  3.79662384393134*^9}, {3.79662394850982*^9, 3.796624008338398*^9}, {
  3.7966240996095037`*^9, 3.796624105228634*^9}, {3.796624143147711*^9, 
  3.796624156712956*^9}, {3.7966242333445168`*^9, 3.796624244212686*^9}, {
  3.796630175681733*^9, 3.796630177970182*^9}, {3.7966347897192783`*^9, 
  3.796634791648768*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"912fa32e-56b2-4d96-8d04-4cfea672a8b7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"V", ",", "\[CapitalPi]"}], "}"}], "=", 
   RowBox[{"EstimatePolicy", "[", "0.001", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"GraphicsRow", "[", 
  RowBox[{"{", 
   RowBox[{"policyPlot", ",", "valuePlot"}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.796569916985026*^9, 3.796569944124928*^9}, {
   3.796570004320414*^9, 3.796570004752674*^9}, 3.7965700624894*^9, 
   3.796570130731044*^9, 3.796586283084485*^9, 3.796586433971416*^9, {
   3.796587091332095*^9, 3.79658709747822*^9}, {3.7966231792380877`*^9, 
   3.796623183651553*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"f19d6adc-0c12-461e-8c9d-06d0cf14c15f"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Policy evaluation \"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\" took \"\>", "\[InvisibleSpace]", "1.590093`", 
   "\[InvisibleSpace]", "\<\" sec.\"\>"}],
  SequenceForm["Policy evaluation ", 1, " took ", 1.590093, " sec."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7966231857318697`*^9, 3.796623303762533*^9, 3.796623776267552*^9, 
   3.7966238461507263`*^9, {3.7966239958062563`*^9, 3.796624010607192*^9}, 
   3.796624159255691*^9, 3.796624246212912*^9, 3.796624985053187*^9, 
   3.796634841593918*^9, 3.796636528998818*^9, 3.7966438162620792`*^9},
 CellLabel->
  "During evaluation of \
In[13]:=",ExpressionUUID->"99296f15-29c7-467f-a0f5-540e0d52ada6"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Policy improvement \"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\" took \"\>", "\[InvisibleSpace]", "0.365234`", 
   "\[InvisibleSpace]", "\<\" sec.\"\>"}],
  SequenceForm["Policy improvement ", 1, " took ", 0.365234, " sec."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7966231857318697`*^9, 3.796623303762533*^9, 3.796623776267552*^9, 
   3.7966238461507263`*^9, {3.7966239958062563`*^9, 3.796624010607192*^9}, 
   3.796624159255691*^9, 3.796624246212912*^9, 3.796624985053187*^9, 
   3.796634841593918*^9, 3.796636528998818*^9, 3.796643816628631*^9},
 CellLabel->
  "During evaluation of \
In[13]:=",ExpressionUUID->"95198ae1-6e44-48c5-9c6b-f1cc1fafbb60"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Policy evaluation \"\>", "\[InvisibleSpace]", "2", 
   "\[InvisibleSpace]", "\<\" took \"\>", "\[InvisibleSpace]", "2.369083`", 
   "\[InvisibleSpace]", "\<\" sec.\"\>"}],
  SequenceForm["Policy evaluation ", 2, " took ", 2.369083, " sec."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7966231857318697`*^9, 3.796623303762533*^9, 3.796623776267552*^9, 
   3.7966238461507263`*^9, {3.7966239958062563`*^9, 3.796624010607192*^9}, 
   3.796624159255691*^9, 3.796624246212912*^9, 3.796624985053187*^9, 
   3.796634841593918*^9, 3.796636528998818*^9, 3.796643819000105*^9},
 CellLabel->
  "During evaluation of \
In[13]:=",ExpressionUUID->"30303c0f-c2e7-4e98-be69-00a8052f961a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Policy improvement \"\>", "\[InvisibleSpace]", "2", 
   "\[InvisibleSpace]", "\<\" took \"\>", "\[InvisibleSpace]", "0.802488`", 
   "\[InvisibleSpace]", "\<\" sec.\"\>"}],
  SequenceForm["Policy improvement ", 2, " took ", 0.802488, " sec."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7966231857318697`*^9, 3.796623303762533*^9, 3.796623776267552*^9, 
   3.7966238461507263`*^9, {3.7966239958062563`*^9, 3.796624010607192*^9}, 
   3.796624159255691*^9, 3.796624246212912*^9, 3.796624985053187*^9, 
   3.796634841593918*^9, 3.796636528998818*^9, 3.796643819808999*^9},
 CellLabel->
  "During evaluation of \
In[13]:=",ExpressionUUID->"84cc526a-9a4d-413e-ac0f-60681993d10e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Policy evaluation \"\>", "\[InvisibleSpace]", "3", 
   "\[InvisibleSpace]", "\<\" took \"\>", "\[InvisibleSpace]", "2.003689`", 
   "\[InvisibleSpace]", "\<\" sec.\"\>"}],
  SequenceForm["Policy evaluation ", 3, " took ", 2.003689, " sec."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7966231857318697`*^9, 3.796623303762533*^9, 3.796623776267552*^9, 
   3.7966238461507263`*^9, {3.7966239958062563`*^9, 3.796624010607192*^9}, 
   3.796624159255691*^9, 3.796624246212912*^9, 3.796624985053187*^9, 
   3.796634841593918*^9, 3.796636528998818*^9, 3.796643821812792*^9},
 CellLabel->
  "During evaluation of \
In[13]:=",ExpressionUUID->"7b2f6ab8-4118-4ef2-ae9b-4d07b584ed78"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Policy improvement \"\>", "\[InvisibleSpace]", "3", 
   "\[InvisibleSpace]", "\<\" took \"\>", "\[InvisibleSpace]", "0.3756`", 
   "\[InvisibleSpace]", "\<\" sec.\"\>"}],
  SequenceForm["Policy improvement ", 3, " took ", 0.3756, " sec."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7966231857318697`*^9, 3.796623303762533*^9, 3.796623776267552*^9, 
   3.7966238461507263`*^9, {3.7966239958062563`*^9, 3.796624010607192*^9}, 
   3.796624159255691*^9, 3.796624246212912*^9, 3.796624985053187*^9, 
   3.796634841593918*^9, 3.796636528998818*^9, 3.796643822191296*^9},
 CellLabel->
  "During evaluation of \
In[13]:=",ExpressionUUID->"159e9aa6-8929-4c31-b429-d1f7a9974067"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Policy evaluation \"\>", "\[InvisibleSpace]", "4", 
   "\[InvisibleSpace]", "\<\" took \"\>", "\[InvisibleSpace]", "0.609396`", 
   "\[InvisibleSpace]", "\<\" sec.\"\>"}],
  SequenceForm["Policy evaluation ", 4, " took ", 0.609396, " sec."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7966231857318697`*^9, 3.796623303762533*^9, 3.796623776267552*^9, 
   3.7966238461507263`*^9, {3.7966239958062563`*^9, 3.796624010607192*^9}, 
   3.796624159255691*^9, 3.796624246212912*^9, 3.796624985053187*^9, 
   3.796634841593918*^9, 3.796636528998818*^9, 3.7966438228019543`*^9},
 CellLabel->
  "During evaluation of \
In[13]:=",ExpressionUUID->"658ea885-0095-442d-b192-f67df45b41eb"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Policy improvement \"\>", "\[InvisibleSpace]", "4", 
   "\[InvisibleSpace]", "\<\" took \"\>", "\[InvisibleSpace]", "0.362702`", 
   "\[InvisibleSpace]", "\<\" sec.\"\>"}],
  SequenceForm["Policy improvement ", 4, " took ", 0.362702, " sec."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7966231857318697`*^9, 3.796623303762533*^9, 3.796623776267552*^9, 
   3.7966238461507263`*^9, {3.7966239958062563`*^9, 3.796624010607192*^9}, 
   3.796624159255691*^9, 3.796624246212912*^9, 3.796624985053187*^9, 
   3.796634841593918*^9, 3.796636528998818*^9, 3.796643823165703*^9},
 CellLabel->
  "During evaluation of \
In[13]:=",ExpressionUUID->"461d5d6a-503c-47dc-a09f-376d1f5cfea3"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Policy evaluation \"\>", "\[InvisibleSpace]", "5", 
   "\[InvisibleSpace]", "\<\" took \"\>", "\[InvisibleSpace]", "0.226694`", 
   "\[InvisibleSpace]", "\<\" sec.\"\>"}],
  SequenceForm["Policy evaluation ", 5, " took ", 0.226694, " sec."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7966231857318697`*^9, 3.796623303762533*^9, 3.796623776267552*^9, 
   3.7966238461507263`*^9, {3.7966239958062563`*^9, 3.796624010607192*^9}, 
   3.796624159255691*^9, 3.796624246212912*^9, 3.796624985053187*^9, 
   3.796634841593918*^9, 3.796636528998818*^9, 3.7966438233936996`*^9},
 CellLabel->
  "During evaluation of \
In[13]:=",ExpressionUUID->"868a7856-30fa-42ce-8df6-fda1b48004ae"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Policy improvement \"\>", "\[InvisibleSpace]", "5", 
   "\[InvisibleSpace]", "\<\" took \"\>", "\[InvisibleSpace]", "0.389463`", 
   "\[InvisibleSpace]", "\<\" sec.\"\>"}],
  SequenceForm["Policy improvement ", 5, " took ", 0.389463, " sec."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7966231857318697`*^9, 3.796623303762533*^9, 3.796623776267552*^9, 
   3.7966238461507263`*^9, {3.7966239958062563`*^9, 3.796624010607192*^9}, 
   3.796624159255691*^9, 3.796624246212912*^9, 3.796624985053187*^9, 
   3.796634841593918*^9, 3.796636528998818*^9, 3.79664382379383*^9},
 CellLabel->
  "During evaluation of \
In[13]:=",ExpressionUUID->"ed8e267c-8eb2-4962-9e94-8bd4d7499a15"]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     TemplateBox[{
       GraphicsBox[
        GraphicsComplexBox[CompressedData["
1:eJyNnD2K7FYYBZsXmA4nmGCCDvqJRjRCCP3GfmvwEgyOvXUvwTzMCXzs4pxJ
RE1XXNx79V19//3P3/74drvdfvxyu/18/vP316//ft5+/D/T/8nz5918YvfF
H+YTuy/+NJ/YffGX+cTuix/mE7svfppP7L54MJ/YffHLfGL3xaP5xO6L3+YT
uy+ezCd2XzybT+y+eDGf2H3xaj6x++LNfGL3xbv5xO6LD/OJ3Ref5hO7L77M
v+z3tktt55xT39zzZ+rbB/ji1LdP8MWpb1/gi1PfHuCLU9+e4IsH84ndF6e+
vcAXp76N4ItT397gi1PfJvDFqW8z+OLUtwV8cerbCr449W0DX5z6toMvTn07
wBenvp3gi713l/3erqvadRp1qe2cc+qbe/5MffsEX5z69gW+OPXtAb449e0J
vngwn9h9cerbC3xx6tsIvjj17Q2+OPVtAl+c+jaDL059W8AXp76t4ItT3zbw
xalvO/ji1LcDfHHq2wm+2Ht32e/tvrDdZ9K6ql2nUZfazjmnvrnnz9S3L/DF
qW8P8MWpb0/wxYP5xO6LU99e4ItT30bwxalvb/DFqW8T+OLUtxl8cerbAr44
9W0FX5z6toEvTn3bwRenvh3gi1PfTvDF3rvLfm/PtdpzMtoXtvtMWle16zTq
Uts559Q39/yZ+vYAX5z69gRfPJhP7L449e0Fvjj1bQRfnPr2Bl+c+jaBL059
m8EXp74t4ItT31bwxalvG/ji1LcdfHHq2wG+OPXtBF/svbvs9/Zcvj3np3Ot
9pyM9oXtPpPWVe06jbrUds459c09f6a+PcEXD+YTuy9OfXuBL059G8EXp769
wRenvk3gi1PfZvDFqW8L+OLUtxV8cerbBr449W0HX5z6doAvTn07wRd77y77
vX2v2L6npHP59pyfzrXaczLaF7b7TFpXtes06lLbOefUN/f8OZhP7L449e0F
vjj1bQRfnPr2Bl+c+jaBL059m8EXp74t4ItT31bwxalvG/ji1LcdfHHq2wG+
OPXtBF/svbvs93YuIr2HdF+c+taey7fn/HSu1Z6T0b6w3WfSuqpdp1GX2s45
0//J82fq2wt8cerbCL449e0Nvjj1bQJfnPo2gy9OfVvAF6e+reCLU9828MWp
bzv44tS3A3xx6tsJvth7d9nv7VzXEDjNRQyB03vFIXA6lx8Cp3OtIXDaFw6B
07pqCJy6lJ7UsdQ39/yZ+jaCL059e4MvTn2bwBenvs3gi1PfFvDFqW8r+OLU
tw18cerbDr449e0AX5z6doIv9t5d9ns7l9rOuTqnvrVzEe2cBb1XbN9T0rl8
e85P51rtORntC9t9Jq2r2nWac+obdWsM/yfPn6lvb/DFqW8T+OLUtxl8cerb
Ar449W0FX5z6toEvTn3bwRenvh3gi1PfTvDF3rvLfm/n6ts5fefUt3auq50T
o7mIds6C3iu27ynpXL4956dzrfacjPaF7T7TOXWr7VLbOefUN/f8mfo2gS9O
fZvBF6e+LeCLU99W8MWpbxv44tS3HXxx6tsBvjj17QRf7L277Pf2XhD1TZzm
6qlv7VxqmgNLc13tnBjNRbRzFvResX1PSefy7Tk/nWu152TOqW/tuqpdp1GX
2s45p76558/Utxl8cerbAr449W0FX5z6toEvTn3bwRenvh3gi1PfTvDF3rvL
fm/vNbb3JJ1T3+7g+5xpO6dPc6ntnCvNdbVzYjQX0c5Z0HvF9j0lncu35/zO
qW/tvrDdZ9K6ql2nUZfazjmnvrnnz9S3BXxx6tsKvjj1bQNfnPq2gy9OfTvA
F6e+neCLvXeX/d7ey27veTunvt3B9zn59p4RzdW3c/o0l9rOudJcVzsnRnMR
7ZwFvVds31M6p76151rtORntC9t9Jq2r2nUadantnHPqm3v+TH1bwRenvm3g
i1PfdvDFqW8H+OLUtxN8sffust/b70q036lwTn27g+/3fNp7knQvqL1nRHP1
7Zw+zaW2c64019XOidFcRDtn4Zz61p7Lt+f8dK7VnpPRvrDdZ9K6ql2nUZfa
zjmnvrnnz9S3DXxx6tsOvjj17QBfnPp2gi/23l32e/tdHOqbOH1Xgvp2B9/v
KVLfPsD3ez7Ut/ZeEPWtnatPc6xpLrWdc6W5rnZOzDn1rX2v2L6npHP59pyf
zrXaczLaF7b7TFpXtes06lLbOefUN/f8mfq2gy9OfTvAF6e+neCLvXeX/d5+
16v9Tphz6tsdfL9n3X6nwjn1rb3X2N6TpHtB7T0jmqtv5/RpLrWdc3VOfWvn
Ito5C3qv2L6npHP59pyfzrXaczLaF7b7TFpXtes06lLbOefUN/f8mfp2gC9O
fTvBF3vvLvu9/S5h+51D59S3O/j+nYj2OzvOqW/tvez2njfda2zvSdK9oPae
Ec3Vt3P6zqlv7VxXOydGcxHtnAW9V2zfU9K5fHvOT+da7TkZ7QvbfSatq9p1
GnWp7Zxz6pt7/kx9O8EXe+8u+739rmr7nVbn1Lc7+OLUtw/w/TsR7Xd26LsS
7Xcq6F52e8+b7jW29yTpXlB7z8g59a2dS23nXGmuq50To7mIds6C3iu27ynp
XL4956dzrfacjPaF7T6T1lXtOo261HbOOfXNPX967y773b8LTd+Jpr6J03dW
qW938P27XdS3D/D9uzfUt0/w/bsR1Df/rgR9Z4L65vey6Z429c3vNdI9R+qb
ON0Tor75XD3N2VPffC6V5lTTHFia82rnxGhOop2zoPeM7XtKOqdvz/npnKs9
J6N9YrvPpHVWu06jTrWdc/7v//8GKBQYvw==
         "], {{{}, {}, {
            EdgeForm[], 
            RGBColor[
            0.21800000000000003`, 0.36888888888888893`, 0.6055555555555556], 
            GraphicsGroupBox[{
              
              PolygonBox[{{1441, 1442, 1443, 1444}, {1521, 1522, 1523, 
               1524}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.3783333333333333, 0.43666666666666665`, 0.5966666666666667], 
            GraphicsGroupBox[{
              
              PolygonBox[{{1525, 1526, 1527, 1528}, {1361, 1362, 1363, 
               1364}, {1445, 1446, 1447, 1448}, {1041, 1042, 1043, 1044}, {
               1281, 1282, 1283, 1284}, {1201, 1202, 1203, 1204}, {1121, 1122,
                1123, 1124}, {1365, 1366, 1367, 1368}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.5522222222222222, 0.49777777777777776`, 0.49444444444444446`], 
            GraphicsGroupBox[{
              PolygonBox[{{881, 882, 883, 884}, {1205, 1206, 1207, 1208}, {
               1045, 1046, 1047, 1048}, {1369, 1370, 1371, 1372}, {801, 802, 
               803, 804}, {1529, 1530, 1531, 1532}, {961, 962, 963, 964}, {
               1449, 1450, 1451, 1452}, {1125, 1126, 1127, 1128}, {965, 966, 
               967, 968}, {1289, 1290, 1291, 1292}, {1285, 1286, 1287, 
               1288}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.7261111111111112, 0.5588888888888889, 0.39222222222222225`], 
            GraphicsGroupBox[{
              
              PolygonBox[{{969, 970, 971, 972}, {1537, 1538, 1539, 1540}, {
               721, 722, 723, 724}, {1213, 1214, 1215, 1216}, {1209, 1210, 
               1211, 1212}, {1373, 1374, 1375, 1376}, {885, 886, 887, 888}, {
               641, 642, 643, 644}, {1129, 1130, 1131, 1132}, {1453, 1454, 
               1455, 1456}, {1293, 1294, 1295, 1296}, {805, 806, 807, 808}, {
               1049, 1050, 1051, 1052}, {889, 890, 891, 892}, {725, 726, 727, 
               728}, {1533, 1534, 1535, 1536}}]}]}, {
            EdgeForm[], 
            RGBColor[0.9, 0.62, 0.29], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1: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
gvwt3iQmM4V/AB73Ats=
               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.9277777777777778, 0.6894444444444444, 0.37611111111111106`], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwV0MVSA0EABNDFDkgEiYdAgC/iThKCS0Hh/BROXC84v4S8HN6lt6e3ZvLl
49Wj4SAIcowSGgqCMBGivPj4yhvvfPDJF9+kRoIgTYYsF7JLrrjmwcYjTzwz
L8uxwCIx4iRI0tBp0qLNns19DjgkpBMmQpSOTpcefdZcokCREic6p5xxTkgW
JkKUhs0mLdqs2yizwSY/Or/8DR5nzL6sQJESFXGVGnVu9G65455p/5xhljnG
nZlgkilSsjQZsuRZYpmVwXvYbNKiTYw4CZJUbFSpUafjDl169NnS2WaHXf4B
3C009A==
               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.9555555555555556, 0.758888888888889, 0.4622222222222222], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwVz0dSQlEQBdBn2IBiQMXAQEVxNS6BKgPhB9CJCd2YIsksYHY5Hgdncut2
V3e+lOzG4yGELJNExCSk9MdCuOOeByJiElIeeeKZF14ZMGTEluXbFNnhgiaX
XFHXaXDEMW06dOn979MZMGTEm+ydDz754psfflnX2WCTAmU/VKhSY0pnmgwz
XMtuaHHLAosskaNNhy49Zs3MMU+WMhWq1NhjnwMOWZ4IYYVV1jhx0ylnnBPJ
YhJS/gCvIzFB
               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.9833333333333333, 0.8283333333333333, 0.5483333333333332], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwVz8lRQlEUBNCnRQasUPjwGcSNYCyEQABQyqwiDqhMaYEDJAA4heJxcRZ9
q6urblxv1hqHIYQkCTp06dFnehDCjDkLBlxxzQ33PPDImCG3jLijxAllTnm3
+cGaDUtWvPJGrJOnQJHYLU+BIhkisuT+s05ElhwpjjgmzRff/PDLlh17Pjnz
fIUq51zYvKRFmyedZ16Y0KFLjz5/O0ciog==
               "]]}]}, {
            EdgeForm[], 
            RGBColor[1., 0.9055555555555554, 0.6666666666666666], 
            GraphicsGroupBox[{
              
              PolygonBox[{{217, 218, 219, 220}, {205, 206, 207, 208}, {305, 
               306, 307, 308}, {309, 310, 311, 312}, {125, 126, 127, 128}, {
               313, 314, 315, 316}, {121, 122, 123, 124}, {209, 210, 211, 
               212}, {213, 214, 215, 216}, {317, 318, 319, 320}, {297, 298, 
               299, 300}, {37, 38, 39, 40}, {397, 398, 399, 400}, {41, 42, 43,
                44}, {301, 302, 303, 304}}]}]}, {
            EdgeForm[], 
            RGBColor[1., 0.95, 0.75], 
            GraphicsGroupBox[{
              
              PolygonBox[{{53, 54, 55, 56}, {129, 130, 131, 132}, {221, 222, 
               223, 224}, {73, 74, 75, 76}, {77, 78, 79, 80}, {237, 238, 239, 
               240}, {133, 134, 135, 136}, {225, 226, 227, 228}, {229, 230, 
               231, 232}, {153, 154, 155, 156}, {157, 158, 159, 160}, {149, 
               150, 151, 152}, {49, 50, 51, 52}, {45, 46, 47, 48}, {57, 58, 
               59, 60}, {65, 66, 67, 68}, {61, 62, 63, 64}, {69, 70, 71, 
               72}, {233, 234, 235, 236}, {137, 138, 139, 140}, {145, 146, 
               147, 148}, {141, 142, 143, 144}}]}]}}}], {
        DisplayFunction -> Identity, AspectRatio -> 1, 
         AxesOrigin -> {Automatic, Automatic}, DisplayFunction :> Identity, 
         Frame -> True, FrameLabel -> {{
            FormBox["\"Cars at 1st location\"", TraditionalForm], None}, {
            FormBox["\"Cars at 2nd location\"", TraditionalForm], None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "GridLinesInFront" -> True}, PlotRange -> {{1., 21.}, {1., 21.}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
           FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               GraphicsBox[{
                 
                 RasterBox[{{{0.21800000000000003`, 0.36888888888888893`, 
                  0.6055555555555556}}, {{0.3783333333333333, 
                  0.43666666666666665`, 0.5966666666666667}}, {{
                  0.5522222222222222, 0.49777777777777776`, 
                  0.49444444444444446`}}, {{0.7261111111111112, 
                  0.5588888888888889, 0.39222222222222225`}}, {{0.9, 0.62, 
                  0.29}}, {{0.9277777777777778, 0.6894444444444444, 
                  0.37611111111111106`}}, {{0.9555555555555556, 
                  0.758888888888889, 0.4622222222222222}}, {{
                  0.9833333333333333, 0.8283333333333333, 
                  0.5483333333333332}}, {{1., 0.9055555555555554, 
                  0.6666666666666666}}}, {{
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}}], {Antialiasing -> False, 
                  AbsoluteThickness[0.1], 
                  Directive[
                   Opacity[0.3], 
                   GrayLevel[0]], 
                  LineBox[
                   NCache[{{
                    Rational[15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[-225, 2]}}, {{
                    7.5, -112.5}, {-7.5, -112.5}, {-7.5, 112.5}, {7.5, 
                    112.5}, {7.5, -112.5}}]]}, {
                  CapForm[None], {{
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], -112.5}, {
                    Rational[15, 2], -112.5}}, {{-7.5, -112.5}, {
                    7.5, -112.5}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], -87.5}, {
                    Rational[15, 2], -87.5}}, {{-7.5, -87.5}, {
                    7.5, -87.5}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], -62.5}, {
                    Rational[15, 2], -62.5}}, {{-7.5, -62.5}, {
                    7.5, -62.5}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], -37.5}, {
                    Rational[15, 2], -37.5}}, {{-7.5, -37.5}, {
                    7.5, -37.5}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], -12.5}, {
                    Rational[15, 2], -12.5}}, {{-7.5, -12.5}, {
                    7.5, -12.5}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], 12.5}, {
                    Rational[15, 2], 12.5}}, {{-7.5, 12.5}, {7.5, 12.5}}]]}, {
                   
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], 37.5}, {
                    Rational[15, 2], 37.5}}, {{-7.5, 37.5}, {7.5, 37.5}}]]}, {
                   
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], 62.5}, {
                    Rational[15, 2], 62.5}}, {{-7.5, 62.5}, {7.5, 62.5}}]]}, {
                   
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], 87.5}, {
                    Rational[15, 2], 87.5}}, {{-7.5, 87.5}, {7.5, 87.5}}]]}, {
                   
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], 112.5}, {
                    Rational[15, 2], 112.5}}, {{-7.5, 112.5}, {7.5, 
                    112.5}}]]}}}, 
                 StyleBox[{Antialiasing -> False, 
                   StyleBox[
                    LineBox[{{7.5, -112.5}, {7.5, 112.5}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]]}, StripOnInput -> False], 
                   StyleBox[
                    StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -87.5}, 
                    Offset[{4., 0}, {7.5, -87.5}]}, {{7.5, -62.5}, 
                    Offset[{4., 0}, {7.5, -62.5}]}, {{7.5, -37.5}, 
                    Offset[{4., 0}, {7.5, -37.5}]}, {{7.5, -12.5}, 
                    Offset[{4., 0}, {7.5, -12.5}]}, {{7.5, 12.5}, 
                    Offset[{4., 0}, {7.5, 12.5}]}, {{7.5, 37.5}, 
                    Offset[{4., 0}, {7.5, 37.5}]}, {{7.5, 62.5}, 
                    Offset[{4., 0}, {7.5, 62.5}]}, {{7.5, 87.5}, 
                    Offset[{4., 0}, {7.5, 87.5}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]]}, StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "3"}], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -87.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "2"}], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -62.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "1"}], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -37.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -12.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 12.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 37.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 62.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 87.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False]}, {}}, {{
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False], {"GraphicsLabel"}, 
                    StripOnInput -> False]}, {"GraphicsTicks"}, StripOnInput -> 
                    False], {{
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]]}}, StripOnInput -> False]}, {
                  "GraphicsAxes"}, StripOnInput -> False]}, PlotRangePadding -> 
                Scaled[0.02], PlotRange -> All, Frame -> True, 
                FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
                Opacity[0], FrameTicksStyle -> Opacity[0], 
                ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
               Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]}, "BarLegend", DisplayFunction -> (#& ),
           InterpretationFunction :> (RowBox[{"BarLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{
                    RowBox[{"Blend", "[", 
                    RowBox[{"\"M10DefaultDensityGradient\"", ",", "#1"}], 
                    "]"}], "&"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "4.`"}], ",", "5.`"}], "}"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "5"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "4"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "3"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"2", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"3", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"4", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"5", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}]}], "}"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkerSize", "\[Rule]", "225"}], ",", 
               RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
               RowBox[{"ScalingFunctions", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
               RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
               RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], 
             "]"}]& )], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {221.45, -190.05}, {
     Center, Center}, {417., 362.}], InsetBox[
     Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJxlnXk8VO/7/yVKmyRkb4wxxhjMQhs1VyVZ2hPaS5uKFqVFKrRqj/aF0kJK
KyWVN21oIe8kbdImlexJkn7n8/i6r3n8rvf8M4/zbDoz83y5Zs657vvcY+G/
cMwsdTU1tSxNNbW2av+9HdkREXrQJxT+b6tayfi2ocYp1g2Mq7F7NaMhorji
mFWt21rInfJ92m+2C2vd1kEunjrwxMAsxvWQP1jSXlE5fHXrtiHyTIcDYr+n
jJsiD7vQqJ03ek3rNg/5Kwdffmw+43zk2bbj9bYPXdu6LUB+2Tde3SqDcSHy
lnVrtL71CG/dFiE/X+Wg2zSccTHyJr+0uOxIxiXI43321VamMm6P/GForxWJ
ZYxLkcv25NaZ6ke0bsuQT7qbfmXBQMblyK99P7PrWSDjCuTfI6JGrd3HuCNy
mw38PH5GBG7/361aOXRd+8A99TT3auVwvnImfw/LVw3/PWrwgJYCGctRC/m7
9u1+rX5Ic69WXl32Z4FsKstRD/myQRNcn32juVcrZ3913OS4mOVoirzszMch
sVU092pl0IebvbfPYTnykduNirSyKqG5Vys1J74w+mbN/AuRr5y3zLJpMs29
Wvmv4EtydjTNvVq5aeA1tap7NPdqpfsO942JDTT3auUC27w2ZlbMvxT54x1X
shaMprlXK1er2x16FkZzr1bmSdtNWHua5l6t7Djh0HN+Hs29WvnrjlNBch3N
XQ3kwzX6i7atwscxnjpL0JBiy3LEeocvy9ZPnJJLc1eDv2+eBzb5sxyx3sHt
xubo3Q00dzXolW+1qcs6liPWO4x5vSnERYvlhfUOc9Z3C1i0kXGsd/DuvMLP
qoXmrgYvXJwU33oz/1jvINC/6tIURHNXg59tk+5mx/+n3sGj2b9H1bP/1Dss
Ur4/ktiO+cR6h+Hv/QzNnBjHeoe0AfLiBdNp7mogLlx59tm2/9Q7LHgxYv7a
q/+pd1h27H05v+Q/9Q4unSPeJ7eNbN3Geoeq+3a8F0LG2U0LNr+e18vbiOXI
ctcC4dTrWW/SaO5aEDTpzLzlPqtxm92Ptglz+1ZFc9eCa+oyS2fMVw95nUv9
sLFdWV6GyJeEJx7tuIfmrgVP1DvVvtFi/nnIZ7+4/WWJK+N85Or8Qc81VtPc
tcBl0fc32Zdp7lrQXBgtrfpEc9cCr9XqVxMNmGcx8mVJQTKzITR3LehlBjUL
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
MrRg08CwZOqnWTltnD/4V1A/6jDjxJCYWcto/1kDzEapFZycRPvP7SDq+qEf
YmfaX1WH07NtRx/xpP1nDXj8+JN2UVvaH2sHnQ+HD9s8mfpRh2F8tTaZ/1A/
GjBtbIBgYxfa/2kHd0+JJt3yoX7U4etwPzWbU9SPBlyU/Lxk8In6aQdJx5rj
z/IiiZ+OcExnlukBNdpf7QwBFccarnygfrRBL+CYfU4G9dMRZvXiVf38l/rp
DHmbhB+/D6F+tCHz2wyToKPUT0eYZuj2CPD6FBvcj/to+cd3XtSPNlRnjTj/
OZr66QjLrB4LHr6hfjrDg/e/rNYYRxI/2rBHWjjgJusjoZ9usGCKp7R+LfWj
C44Pa2pWTaX95+5wKWTxfH5v2l/tBleLh5/zsqb9MV24NLBhf2QE9dMdGvqe
KE0qon66AS9NMiXIhfrRhV2a12uj1lM/3cFgeuqBqhzqpxtMkF7dUc+uW0c/
urC+19Hoa2y+AfrpDtfEs7t3xfkkzI8+7HByTzn+m/oxgLf6/hXdnlE/PUDu
t/+84DT1ow++VVHvZkylfgzg5IQc48nXqJ8ecK10yR1ZR9rf0AfvtyXxXxZR
PwaweKVWl/ir1E8PuN9y83B0I/WjDx5jfk+75kr9cO/r/b3P71ZRPz0g3mnX
2IPnqR8jSNkWP6/NEtp/Ngbn2LGiNW60v2oC87Y8nXRMi/Y3jKCXVrH8VTT1
Ywzm2jPC95VTPyYgrnu+smdf6scIXDf+OPsijvoxhvO3Tr31+UD9mMCeD9cf
arLzO/RjBOP37l23YyH1Ywwphnf2Bp2kfkzAbZtb4utC6scMHD07xz0vo37M
YdfsXS1lV6ifnrAsfWV6sjP1YwYTtpTOvXSb+jGHqJaFl61xnMIC99O5/+Pb
s2ZSP2awYXq7zb4PqB9zkE7ee/BaJ/Z+bXE//YJNa7w8qB8zmJIesDCJXc+C
fsxBV/HhWhibP4l+esLVO1WBX/C4vdVPOA8CysIHbPeh/WcLEFxXy9XXJv0f
7v09m/fG2yuQ+OH2E7/g3cW4KurHAtyqljy8D8QPd198NPpi6jbih9vPME2b
fwfWUD8WsC9VS20fu46e+eH2I5jq6CZi/TTmh9vPx25PvlaycQr0YwGG3Qwu
l7Lr8pgfbj/BKa7+Yfrk+DCcD0Z54qTfmdSPJRR94F1tUFI/lvCm/Cev92Hq
hw8D+p/SMzOm/Q1LuL1xfMT3AOrHEhz33fm2+TL1w4dfF4u8nfUjiR9L0Bpz
t24r+35BP5bQsXuOsXgb9cOHjisOurZ5Tv1YgmubeX8d2pHj5//tp22nJhMZ
9SOARUMc9eK70/6PFeTH/00rW0j9WEH9JXHzoWzqRwDztm0OCh5E/VjBYBvt
zl93UD9WYKe/coa0iPoRAP9XYsw1vB7fBvejNTrlWXvsh9jifravjOVdZ/MV
0Y8Akg5O4E2so36s4Ef+kvMveNSPFfz9UdJW4kn9CCE19vXwfa7UjzXonQyY
OvQo9WMN2293CGiuoX6EECThqXWaS/1Yw1zf6Xu+X6Z+rOGYdMmftz+pHyFc
2PWmUzs8z7XB/ay4bsr3YeO/6McaXBYeWGfGzuPQjxD2d3pzYFwXev5lDeMe
6S9x6Ev9WMOENUunNEyjfkQg/1J+qy6Y+rGBotGX1j3LoX5swMpz+rRQrCPm
RwS7rs8YWLid+rGBfkcXu+o/o35soHKoekNqD/Z+hbif6zblv8bjvEcbvJ/W
vXdBQhL1YwPCJXrdNrBxT/QjglWe04vtragfG/i2Xzxo3kjqxwYu1BevOR9C
/YjBLPfwofNx1I8tfMp2eu5VS/3YQqdeXTW6DaR+xPC+y/BTty5SP7YQ7/Ko
JugH9WML/bZ8rr7F5lGgHzEc+Z3nlr+D+rGF/nHTQwzuUj+2sGbuh4R27HsH
/YihJd0wuIsz9WMLifO2aiXPoH5s4bNvyKYlm6kfCZT3euJp9oD6sQPnZYef
ZbHzPvRjB15O+SvzZ1E/EhBv2HOuoID6sQOn9M96tXgca4H7cdrXaFQ1mvqR
wHmbAfcDE6kfOxD5bB10mq3XgX7sIPG3tuHJTqS/we3Hc0u7V+ojqR87OG3R
Pa/dMurHDkIMBpqNOUj92EPjm5cngmupHwdwm5U0LkhJ/TjApC9fz93cTP3Y
Q/nFmz3ENdSPA3Q+v3tcBH4vW+B+FnQX7xCw72X0Yw9+l35aWuJ6Jja4H4Mt
SyOH1FA/DlC49aiBZ0/qxx7Sct85dJlO/TjAy1Ub1i/dSP04wB33/IFuicQP
tz/t0w/7PDIk/bFwKSSFj9jlPoP4yZRCwOTp7YrOED/cfh7EjW13GNcPMcf9
5M1/XDzYi/jh9tNPNFlXdz3xw+2nqwPPIwevS7XB/fRzW5Ocq0H6Y9x+2mov
KM6TEj/cvfe54EWGi4kfbj8ufS+pfdhD/HD76dvRo65/KvUjAz2bH4mu/akf
GYR7bKzy2ED9yEDX6PP97rnUjwyiy8bzZoipHxn4usSIhDOpHxlE1MwxssK+
ohD38/Ra5GRdXDfDBvczoO+W59/1qR8ZTLJR969TUj8y8O6dkqy2lvqRwdUj
/A6K49SPDE4bWmebZ1I/cph6o5Prl6nUjxxKw5ufBp+ifuTQFDJ1cnoZ9SOH
mNtxzv1cqR85BJfMPmrMzgfRjxzi1sTMncvOB9GPHG4NmWym30T9yGHBN/vQ
TwLqRw7lipzEN8OoHzksmug38OAW6kcOLiX7+w0+S/3IYfRR0dOCHOpHAWdM
azukhVM/Cggryx9Te4f6UYC/s7R2Dq7jwfwooMeXk2Y6uB6LOe7Hb/yRG0N2
UT8KGDUixu0X+5xBPwr4mvXc6G4H0n/m9uNV+/fWEjn1o4BzT/ofd/ejfhTQ
RfOPxZ0Y6kcBwWmLc9SvUD8KSB9h99Mnnz1vNfZXrZekabVPx3VW1Ri/neo2
baUxXX+1Xjn9yU79VF+6Dme9MmB1k/7kGrr+ar3y5dDS5R020HU465WnrbqM
O9GNrsNZr3x3OjeyYR9df7VeubF0Yd4YfboOZ70yIfmbUrGdrsNZrxxqV5Lu
juu/CZBvj9r1fgHOV1H1dYtH3dlqh+cLIuQXDw3dvPsE42LkbdrcnmOG6wtJ
kHuceJQ0BMfl7ZGDdM5yGY4zqvrAAp5VmDvOe5Eh77siRBu2Mi5HnjbsVv+A
FMYVyPe18z604RXjjsiv3q07uYLNA8HcNWDB+8qJHsG43qYa42/2XOub8S/N
XQPOfjH48LUrXY9RAxLbJr0IPkPX4dSAlpLXE8pc6DqcGqDXrss8aS7NXQP8
7Q9EWY6g63BqgMa97kKDRzR3DchZ+NfzjgXzz0e+4IKz5ooJNHcNuHh7dJfp
u2juGhAaGBs68S7NXQMe3Lxc5tVAc9eAunrrz+9xHV0J8ttrH2m4jaW5a4Bb
6vNh/LU0dw040iFgX9IZmrsGDPe0cBr9L81dAxx1shaVN9LcNSCsKGjbYLPI
1m1H5CbzRrYbrmSc5a4NA06ULKsywnUX1Rg/cMvFb14oXX9VG8qCG52XXKO5
a0PsnN2KC7hOow7yBbGPrY58oLlrw8ffNbPFC+k6nNrQXln7tH8dzV0bHkQ8
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
aIY8MjKqIyjY9aSqeUot3IuPO8O4an5R6PyEL/+w9QzDVfOLrp+J25jOfgcH
VPOCmue+/I7rj4FqXtCZz4LmB9hX79x6rwETF2nkGNex12mB3EDvn6xOA9jn
hi3ysfbdsjvhcaxq/snBY7Fd13SMJH6MYNqxE+HP27HjqI7II2qWdti+j3Ez
5HnzJfO35LH3qxrf39mu781O7dnzqsblNQPrF95l/ahw1bj8jCVVb+ewdYZB
NZ4+cvRS/1PsOAdU4+m+zaL7Una9PPoxh5/6Ven65syDBfKjBy111gxjPm2R
hwVmOl3CeemqcdsTXTOPDPlM/HDHFVonV6fV4e/GdkRenH5623kcBzdDXhig
/+9pNp+E+fnfuFVd2JY5+cQPx6+b7nu0h/0uSbhqPOtPuEM7y1PMg2ocynKI
e5GArQMAqnGorGxDYZw7+/tnfmxg9a1x+V64/r8FcquKM22Ga7D3a4s866jJ
KS9cd0s13jF54LIPTvNIfXHfC+u+/51fOJztvyPyLMsHD27h+YUZ8mk/+ned
webDMD8cf/5rtkG/mYyr+sBPozsM1mDHq+GqPvCT04Okcez3dEDVvz0y/5DT
lK3ED8cT1vY9euUE8fO/vuLR8kfBqcQPx3dmDNhijL8rYYt8b1JeYIYj+xxT
9QkH+87srP2f9Tc04J934vsXDrLPH3Y9oAac36l4tTOIXr+vAdt9ml5FPWGf
G6q+xImA/JCYK+x11mOfYWKMaO+IgfT6Vm3YFavzub0GvQ5aG65PGJvSG383
2Rw5/7LezPPj6PW82tCh492vD3qy51X1AQ4mRZlrTmT1qzqvH/LhTeURVtfh
qvN6m3kdvpZaR5LXbw7vzR7188PffWavkzuvbPEaaZtHX485JFZ3kHoX0uc1
h3i9QdPXYP+5Hs8TLxTdnPYC+0ts/rAFXPcwueBgQq+TsoCJ32R9xmpG4H4Z
b1om9x+K13er5id0H6gdmIrjJqrzuPqzvDFb2PqZoDove/FvN/XK7Mj/3w/H
C8bX+J6ppn5sYFwv+xNBa+j1pDbg7JF7OOc/6+/ZwI8PjkPmhpLn/d84b90x
k0Ix+fv833HprXsW/qnk+g6Oz8k01DhI1zHjeM2MN/1uZVE/tlD7br1b6B/q
hzt+1qnc3hbH5VXH4YGD/Esns3lQoDquPjtrj/4Mtv5YuOq4mvduXfHhAPr6
ZeAz7qQ+3429HiP8f6636o0M2PlXuGrcYbPYUbqG/X4TqI7rXO4mvTGKJPvn
jiuGxT1KTsfrtVv9cHz2Dk2btcnkeTn+vfTWh704bmKOfFKv1w+L2e/2hqv6
4eV79dzcse+hOo7qY/Ej66SIzBvnuL3H0bE7dxI/HD820W/ALhynYJ8D9UqX
w/sMN52k62zUK60C/Q+ZTmOfG+bIP+76e995NF1Po1455a9n6LePrI5skJ+u
nZARdZPVqS1yo1EBHj1YfyBcdfyzK/XJ5Bh2fXem6vhnaHNl+hG8foq9Tg1I
Tli0W82Qrn+iAbenr/4wcBh9Xg3o+LzyU+JQun8N2OLcLq+UXYeFfowg5cIt
Az+2Djk+rxGsPlNh8uI1XS/CCNZO7jD8G+un4esxgsuavEWj+PRz0gjAcba4
pJjVhS3ywsau2ZHsep9w1fFPxaqahxpsPlKm6vhn3aBTXZfiOBp7neawOUEa
6+BAX485eE09eOP1ePq85mBtMntZeza/MVN1/PO03587l3G9ffY5IIQc96LD
QXhdvzbytGEjtf3fkO8RjoevnRE/Pok9rwVyq1rbqUs/Ez8cl/+9OG0unr/b
Il+4R8uqgF5/zfG7o2aKVynI9REcf7szv3c1O29FPzbQuWzprwM65PVw/JHc
2uNHV/K8/5snM2EmfxL2zVTHP4bHa3slLyL1xdVlYp+x93ImkL9bjitSl0y6
dZB8TnJ8+IjvbQ2GsOe1QG4fXJi6F8dVbZDf3181w4fNK2Ovk+PTMzRTlonI
5wDHU2s3LD+xm/jh+LLgUT2MLxA/3P/bUJvWc20WzUsGyrTxV4rZuqPhquOf
9Avjfvq7UP8y0CiC8zG31sH/A1GqDC4=
        "], {{
          {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
            GrayLevel[1], 3], 
           StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFmgf41tP7x5/nc86JSBRpIEW2SFSoSGWVEEKiNJCRbAlJCWWv7JmEMpKS
XfbIlj1+9t57/19v79v1v67Odb+e0+d5vp/n85xzj/d92g4bvcuhVa1W+1+q
1fhXa86oMzR3EROn8eJSXlwInwpfAk+FT4cvg8+BT4QvgE+HD4fPhCfDR8Bn
wWfDJ8DnwxfAE+GL4XPhcfCF8PnwBHgq/DSjG3//TV4/B/eC34Wfh3vrXuFT
uX4UdgpzDZhbmbES4wzmj2H+HObPg0+GL4LnM1rx/w/yehHcHX5L98o1x2LP
Ze4S+Ez4Cvga+HL4evh2fde6X09n/jrsTczfpmcT/3cp82dhr2T+Mvg8+Cr4
Bn123a/r8XxXZMzj/1pg72XyLrglfD88l3E14xrGnfqMeH0dn3kl9gaunZb8
/zPga+ErdF9wiWeg73k3c9N0/xpccy32Rq65HD5fnwk/w9iCa9/m9Uvw9vAH
8CPwhvDL8MPwBvBL8CTeewh2MnMPMdoz/yKvH4c3gV+Fn4C7wK/Bj8Id4cXw
nrx3FezezA2EW8P7wHvAreBB8FbY9RjrM4Ywvw52OPN7wavCg+Hd4Gb6PHhX
eAV4D/gxxsb8rVd4vTvzLbF7MTcAbgEPhF9kbMc17/N6Bey6jHUYSzHaMFbV
c+OaVbALueYpeDP4DXg57JqMNfQ3mN8R+zHzr8G7wJ/Cr+ue4M/gxXA/+CN4
2XhfO60/5tfCPsP8k/Cm8OvwvZX//qPwPXBr+GF4aWzbuL/7mF8N+zjz98Or
w0/CCyt/jxfgBfDa8HPwA5X/5tNwz3iu7bW+eSYXaI3x/1fDl2itVH5vU65/
tu77bAIvis9fHn6+7memZ9es5jXQPNawvp++53/PSVbvfy32svba7/Cx8N/w
N/B+8A/wV/BQ+Dv4a3gY/D18HHY4Y4T+j/kDsD8x/xk8CP4qvmNj+Cl4bFyr
z/2W+f2xPzL/Jbyv5uK5LQM/EftOPu++utdGx1g/L8Abxbp9Fe4avuhluHOs
7edi/WtfPAuvH3thcax//aZtYm3pN9Tv2xD7SN2/p+YahR+Qr72n7r2rPfyf
P5NdItak7IJYG0vq2dft0zL8QOy1lWPdap3osx+Db5Z/lQ9kfMH8Psx/Ax+N
HVLzc/lE+xD7BfMfw7vDn8OfwnvCX8LvwTvEen5DexV+B34T7hn++X9wX/hD
+GDsgJo/66PYI9oX78e+0N65mId/hvwqc1fBF8vPwTPjfqfKnybba5nvAf/A
e3vDb0VcUCz4EO4fe/ADeGd9J/go7OD4nqMZAxl7yd9xzTbY97jm18rP4k94
Ss3v0evfmD8G+xfzv8BHwH/A47EH1fz9xjFGMg7Ueq0897P8I/bI+KyfmT8c
+zvzP8CHwL/A78Db1uyLDov70pr+nPm9sV/L38Z96/9PYRwar98NPyZf/VPl
//8N/hEeBf8KD03e6/tp7cPrwiPgwfDa8DD95iyeleDCotsc/kvfA9uF8Yf2
HHYnRlOu+Ru7C2NFuM71u8LN4QreAV4O/gu7NuNLrSXsGoxP9Z2wqzHu0xrA
bsD4Xt8R257xnfYydmPGL9qn2I6Mn7VWseswvtI6xG7HaMTf+gO7CuMurS9s
a8Z8rSvsnoyVuaYB97YtvLR8D7Y7o67nhH032VcszM595DMegt9IXi/3wz/C
0+Cn4aUYd8OvYpdlPAi/gW0Yf/cV7JvJ++kB+MPkdfEo/BF8kfYj3JPRQGsK
24uxhNYgdirjFHgd7vkLrr9MPoq5z+FL4cfhLRiVfnPst8xfLb8HfwNfBT8J
N2bcL/+DPZkxWn6FzzwGHgE3g49grMh73mTuSLg5/BZ8OLw8/Bp8LLwK/CF8
DLwy/AF8FNwSfhc+uNgvLIAPg5djfjE8qnhPPgIfCi/F/HP6fvAgeGnsxOI8
YEnsycUxO2PHMrbRPuf64+A28Kfw0XAr+H/6TvAy8IvwGHhV+BN4gu6D77gy
cyvAD2uv634Yg5hvyvzZ8PHwavD58Hh4Tfg0/Q14Vfg8+CTFNPgE+CC4BXyi
vjPcEj5VzwJuDZ+he5Vfh4+D94dXhEfA/eHGeubwvso74MPhIfDy8Eh4d+UX
8AHwAOUL8N5wG7ghfAi8F9wEHqp9BS8D7wO3hZeCC3wn3/dlbGbMUWzC/saz
uRF+Bt6WazdidJRvZL4fdoz8JXZzRlf5C8ZOdc9N4JoDsKdyzUR4JHwafBI8
FJ4IHwhvBo+Sj8d2Y3RnHMn8DthjFefhjeED4RHJf3+kYgW2E6Nz3dfKdmEc
kGwP5poT4L3ld+GDkj9bBctIeFP4EMV5eBP4IPns5PsYK78O7wgfBw+HN9Rn
6z7h5eHdK6+1v3k+fRQb4XbynZX/zlp1+0qt2dWwQ+Sb4dXhfeW/4X94b1/F
IvhXeFvl0aqluKafPh/bIZ77MOY3wO6vWKq1r+cM99Hah3dUbIQbwv3h4+A9
4BPhneBl4F31e8GN4d0Uc+At4NGKLfCWiieV11SPunPqy/ntJ2Pbs06ugKfA
G8AXw5PgdeEbknOY65i7hnG27pn5V5Lj0j3MzUvOhW6EZyfnQjfAc+HN4Rnw
7XAneDr8O3wz/Cz8E3w9vAj+B74Vfl7JC+M2zAvYxclx8G746eQ4PgeeCXeA
p8GzknOz6+Gn4J3gO+Dnk3ONefBz8G7w3Oznp2eg/FfrSL+H9sHhXLMd9ujK
a7lvrEHt0T7xWj5j63jPYcnvO0q5ALw9fEzleqdtzTn5qOS/czhzo+He2geq
TZLzotu5n3uTc6eb4Xv0e8E3wQvgreFZ8MLk/OQW+U+4F59zhGqR5Li8Pfwo
3Ae+LbteVs6tmuJs7Jiac+c/KufE/9T9XA+L/EH5mPIW5dKfR26j/ER5hfIl
5YfK05R7Kw//MnIh5UhDIj9SbqN88sjIiwbHnF5/FjmPcpK/4alwY+yJ2AsY
59ecc46KXOjjyIuUOw2I3Eo5lmoBfRfVCwPj3pUDKS89NPKcZsl5xRqVc7kz
4CXjvpSHnV5zrXF8PAfF/LHxfPR5kyK3Gh5z+nvfxb3W4zkpz9Nr1RQnYJWw
K+86FSyVc7zT4AZxv/oNzqo5hzwT27ByDql7WaJyHaT/X6ry3zwn3vNX5Wez
TOVnOSW+g37Hc7FLY/9knAc3qvyMxjNOYqzAc7gX2475psl50Wrw/OR6cLPi
/at1ovUyJ7l+7ML8Xck16abw+8m5utbIa8l5ptbF28l5u9bFHcl1aOdiP6D1
r31wa3Ld2on5l5Lzc+Xpi5JrQNWCDyTrCZtzzf3JNZRqqVuS6+5Niv1/v4gd
NyVrIxsX733VOKp1msDz4LbV/8cP7dmGzM9gviXzBb4WbgZn+Bo9J3hZ+A54
VfgfxsXwstjWzC+CN4BbwA/Ba8MrwY/D68EN4OvgFeEEXwkvD1fwFXBTeEn4
BrgFvDQ8C14JbgzPhlvDjeBb4JXhJeDpcPPK8bBv+KA685cz34R5FaqXYJaL
ta81O7Hm2lk1teoU5f+ay9i1laPpN4U3gr+Bt5KfUN6n306+C/sO4+2av5/s
W4yOXPMttifXrJU81wVeA35Dv2/l3Op1/aY1PyfZV/XsuOZz7BaVn+X7jPcY
6ybbzZlfR3mc1iTcLvl9m8AbJ9cCveDV4MW6F3h1+BWtAbhDcn3Ro/J9qY7Q
e7pHDFXM1d9RHfFz/P1f43Xn5LltuKYL/FvN8fpj7J81+9ZNmf8dux3zXVPt
X9FO8V3P5of4e5sw/2PNdWgn+Cd4a3jL5Nx+p8q1asOI71vBS0VM75lcj+wC
L2BNT+H1vtgtsCVygM0jr1BO0i25Ztmh8nP6tw6K5/11vN6Qa77Abhm5hPQ0
aV99k+s7aWvbJddu0s2kuXWIXGj9iI3/aW9bRd4wNOKOYpnyHGlu0tmUn0iL
k3a3Y3KOKl1O9e/Jco2V69wJWrKKjVzzAryR9j72ZcZLNecw7SKPGhaxUjFO
+p7uQ7Vq/+RcV/mYatgekdsol9s6YutGEc8Vo3tFXqQcqX3y79pd3xH+CO4G
rwd/CHetfF+f1Hxdb+aXjZxK9/dZzbXrM4wPYh09k6wbd+f32jq55h1QWZ/s
FPmnctE+kRvsF3mCcowRkW8of+gQ96vvIJ1zy8jflH8qD1curdxTOajyadXs
yvGU904qzkEbYR9K1qykXT2crH92LY4RineKU4q/4+N3+SviVz380tTwe6rz
5oYvbRH+Sn5J/kfxUTFOcVsxULFQ9Zzq2cbhuxS/FJs6x77WHtceeSf8T6fw
RdrvulYxTzG4dfhwxSnVoDPDT8pXK/YpjqvuVF3TpvI6Xxx+QPWrcstW4Z9n
hz9Xf0GavPTMs5LzWGny0uelh0u3l+YvrV46v3oQ0sekhUobvxGeWVnDnwHf
XFm/l44/ve7ehzR56fCKbcpLpI+pJlYeu0rlWDw9/H/j8OGKC6pZLwt/rlpZ
9bvikera2yMuqP6+PmJBk4hZil+6R2l5N9Xty96LNfl9+Gz5J/nqx2qOU/Lz
j8rvVl6/WsfP1uzDH8GuU7lulqaxeuxT5Q/Ko1Rz31NzLqG98xzcIfbU87GX
tW+0f16s2Z8/hW0fcedJeP3Kv79izJPh/5+uObb+F2+eCH8gvyA9RXtT97hh
5e+2KO77h/h++jzFBV27ZuU9+lJ8xq/xPPRdFe8UmzqFn/8g9vvX4Tf1fx0j
lnWOuKOYqBgnf/pqXLdp+Ar5DcUXvV8xdLPwJ/It/8U/xUPFqQX6HSKuLaw5
f1BM1D12jPilWKZ493q8T7/Hn+GH9Fzl//XdFEO1ZtXLmV9370l2buWezl3w
nfCNyb2kjuz9KjsP2ba4Rlb9qxq/nr0OtR4bZK8rra9G2bnK9lz/V3IutE1x
ja++mPpo4+ExdffIxiXrHmfDpyVrVurlqR+nvp76dycn6yHnyQ8la1BnwGPh
Q+vu2S2dvUe0V05kHFl3r1D1vvqG6iFKc1B/UL3FJbJzue24t1+Sc+Ct4abZ
/kp+q3m2H5A/+D459+4l7Srbz8jfqM5Vz0K9i8eTtXpp9m2z17/2wXfJdUTP
4rpVPkt+7ufkPLw3858mx7gt4U+SY98WxVrf+Jr97hfhP+VHv0yuF3rIP4fv
lQ/+NnydfN5XyXXEVlxzSrIGpd6odAD1OtV3U76gWl69V/X+7oBnV+4PzoHv
qOyf1DvUa/Vh1atVD1dxSfWttCfVsLITKuebQ+P/1BuSj5lVue84Nz5L/dDZ
2Nsr9x/n6fMr6/a3wLdW1upnwbdU1u9nhs9Sj+lW7G2VdaFhdWtH6puqt/pf
H1VW16k2H4w9ubJONRw+pbIuJX1KOqa0DmllJ1TOC6R36LXqbmllJzE/Jlm7
O71yHT0QHldZM9kNPr5yzb5n3RqLcp894rOeSO7NdSvWnXatW1NSfJY2pns5
lvkD69bEpDtJH5NWJt1J9zipsm6wT936lWK+NAjpCtLN9BnSphTjpVn1j5xA
/6/vMKG4b7oEdmFxPBuKPb5YY/o5tE1pnk1C85Su8g62RXaN8540hOy+fNPQ
DFUvSVeUTq78Sfr/wGxdrkFo+8oLpfNLq5H+LH1mYvYZAOmrE0I7Wim0U2lK
0kKXya6/pD8fyxhbt+a8HHxTzZr58tm1j7TZI0J3lRZ6ZHbvXhrp6dm9Iemx
47L7+C1Dg5VmKz12t+weh3oQg7M1Q2mhKbsuk/45MjRbaaovJ8drxe1Xk/ss
92bXueqL3Qe/mNwLuyu7hlX/a352Xaz+ozTtO5P7qjNC+1LvU5rYB8l6gWrn
15M1EdXOfyfXbtK73kvuSz4Mv5OsO6imVh9hWs39hQOz++zShKXlStuXrrtk
du2pXsOwbL1WOvDwbJ1WOvNbyb3UB7Nr9mE16/P6W+pZq9+helz9sjvhu5N7
x9Kg1BORnqY+yGfJtaT6Dptka4/qy+yc3Zf/B9s3O4dXLr9Ndl2g+qB/dr9J
zczts7VT9WvUb1Luq/pDvSTl+cr3d8/WZqX/bwo3qbv31Cdba/0Tu1e2hqy9
sG+25two9HDtSeXOzbJjqdb/kGx9WL0G9U3Uq1LfZ8vs8wDqoWyWrQOr5zUo
W0NeMrR35fPK6wdka7aJ+X7wmnX3udSHkvauvpL6OOo3qaezbrb2q17Vhtka
r/pc6nmp16M+V7tszVl9MfW21NP5ItaPzg+oZ6S+j2p89YB2zNah1YP7OFnv
US/p62RNSX2fMdlnbNR3WD07L1Ov7Q+uubBmDVZ9IulJ6hn9kKxBqbfVO/ts
hvpQ6sGpv6a+m/pf0qWk2aq/plxMvbaW2bmbfEur7Pzuff3+2fmbenC/JmtZ
6jvcB69Xs+YpfbhNzbrxbclnHqbH8181nrn8lfykcoH9s331Hnyv/bL98O7w
wdn+fGDxfpHfVpwcX3zmQ7+X1lWrWG8HZfv5PWO/yN/KZ+8ba3ifiO/TI9Yr
X1JOrh7TSdnxVzmOYrfqFPWzlGvNjpxKudOsiOnyY4qnyqFGZ/v/vfi7h2XH
tUHFOcY1EfcnZ+daZ8beaRb7QutHua+0hPWzNZl+vLdHttahWn+rbN1gV9Wk
2ZqD9mDXbA1BtXu3XPtXx9iFay7LzgdUx1ydXQepNjo3O9dSPTQlO99TrNEe
bBx7/JTs3Gxy7HdpGrtxTadsLWVneKNsPWSnYv+gmnoA3CFbM9kRXi9bj9qh
eL8or1Z+vVa2jtG32Ocop1dNr/3yWeTFa2brS324pnO2VtMfnpSdQ0pLGZ+d
Zw4pzrsujxxMOqd0SOmf0h57wjOzNcleNeuQ6kFIh1e/QzH08cgnlVuqtlL/
Ufmkahn1RpWXzotceqXsOkh9UtXm6u/fCq+YXYupZ6qcU+coZmfX7NJXVb9L
/1QtL21TOoM0WOmlM5LPi6kvo5ykX+SryvnbRx57c/KZL/VHHkw+u6U+gnRa
5bfSZtVD0fkS9U0UB3vX3GfRmtFZrN+y4/JDkUs3ya5l1CN+MvkclPosynWn
Rn6rnoX6MupTqBejHtCc8A9zwieMzc6LlMsflZ377a0cJjt3GgwfnZ3j7VNc
m0iLUB9Zuf3CmnvT6neor6QeyiPJ583U+9AZgEWR26uWUQ6vmkL1hWpY9bLb
ZNew6hErz1cNq56yev3qoahf/2zyWTj1jF6Ae9TcS1Ic17k4nQfQGQbVvG1j
37WKPXhRdu0j7eGm4p6E6qkpxWcfV8feWqwDav1rr+n8VTt4erFmrVrm9mId
aufwdSPDR80rzjXl967MPvun/t0NxTqy6rXbirVF7bv5xbWWfN2I4nNLWm93
FefE8qWzQ8PS3jkn+0yg7vPu4ppNflV98AvDJ5xZfJ5yreLvqzNjaxf/vjr/
2VzzxWcBpf/PLNYutZfVc1Qtof7j3GJdTz7hlmLNVD7t0uxzjOsVn4W4NJ7n
rGJtdIdYM+NiLe1ffA5JeZr6+Ko31K8/q/gsqe7t7OJzq/rMU4v72bpP+Uad
G9QZg07h3+Rn9is+76W8aFqx1q/68fTis62rYK/NPlOp3mi38NXysRcUn5tU
n2J48Rky7f3zis+VdtB9FZ+nVJ0+rPjcmPzPhcXnF9X7mFx8hrVN+LGJEXcO
KD5rpVz0quzznBvqtys+p7t+cd92Wvhz9XyvCj9/Vvb5U515OLf43JXee31x
r6J3+GTFlO4RF3TGVfd8R7F2rNgxsvjslHLmDhFrFJsUU3Q2VfdwVMQyxb4z
is8Ha50fVHw+THmp+s6q/XTW5ZLsc7XqQSsO6vytvvulxedT1bdaM2KZ/P+B
xWenlKufWNwXV354ZfH5S2mzNxb3wKQVKO6PitxAcVPnQlU3nVDcg5ffO634
bGsr7Jxi3VzxdErER8Xle4u1D8XuccVnCJQD31+sd8h33VOsZSjWX1J8zlg9
NeUPOtuszz+k+Iya8v+rYfV1pCFcUXyuVPXmjOIelTScm4v7EIp31xX3tKRL
nFR8/lU59gPFeoF86cXF51bV17uquL8lXeLBYr1GMfHy4vO+0oovyD5fpzMw
U4vPpKqvd2H2eTzt9/uKNSD57UmRP0yOfEDnw7Uv7izuBygfuKz4rLZ6fGdy
zTl1n40ZHfmD8rpri/tn0jquKe6fSRv5Pxtzp5Y=
               "]], 
              Polygon3DBox[CompressedData["
1:eJw1mgn8V8P3xu+dO5OlsiSVlDYikUqRLJEtoSwVQhtl+ZE9JJIk2ZWULNkT
lWSJUMm+7yFbqez7li3+z7tn/r1e59U5d+be7/3MnXPOc54zzQadcsjQUOhf
VRRR/70v48uyKA6W/oqutZX9hvSVkm1kb5SK4iyNnyk5TTe8q/GV0g/Q+PMa
Hya7u+z+ktNln6M5x0m/SPoluvdN6Vtp7kaSpzR3veTxIZJjNfczXftZ+iCN
f6x72st+V/rXkjay62r+sNLvcLrmj5CMlH6xxuZr7GTN7yy7p+QEXXuW+6W3
0/0zZA/WnC9kHyT7ZdkbyD5J9v8kx+tZjWRfIn0M7yz7cslV0q/U3Kc01kBy
Yem/yd8+XvZ30o/U8xZrzqf6ez/IPpq1lD1V9gTZ90hulF1P80dIP09yru5f
P/lvnyg5TvYQ2V9L76P739D842R/I/sw2W/Jbix7rOzJeu6l0jeRjCr9Tufr
/oayL5I+UeNjpdeXnC97fPD6b5r82y6WjNL8Y2WvkL6/nv+cnn+b5k2SPUNy
s+zbZU+WPlNyi+wTNP976Udp/nuyb9H4eNnTJFNkH6PxZdL34fvKfkvjn8ne
V/Yi2XU0fprsUyUn6+9vLHs4ayEZJvsSyTjpl2nuwuR35F3Hyl4g+yM971vZ
h+t5b+vahsnPOkVykuaeKPtH6QM0/qHGb9X862RPl9wk+w7ZN0ifJZkq+yzZ
+0nvx36WPUb2MdJ7sMdkb6bnXVb6nXi3NyST9ewbJP9V/mZ8u3Okz+VdZJ/B
t5A9T/YDet4D/G3Jbbo2U/Z90q/P6ztH9hx0ye2yH5L9CHMld8p+W8+7WX/r
FkmU/k60PlWSpL8nuUP6nZJ1pT9R2o83kcwNXlPWdpSe9WSyz+K7F8h+XPY2
yX/7Ls29Wnrr5He9U/ZV0reVTOXbs3917/3Be2FyXr/HdK2v/tYRkndkzwre
O5Pyfumm+2/TWD1dv0f6Ys2/vfA7ryP90ehvyR5nr58l+xz2s+59QvbWkhvZ
WzxTY/vyfsQPPW8avqNrQzU2XPMfJb5Ef5spxDTpE6L941qNX6Hxe3Xf3dh5
v+6ja5M0dQOuS3+B/SZ7DO+k8edljy587WvZuxMfpNfQ/FulXxftb+M1dqXs
q6P97WrZl8u+L9g3xmf//1rj/+r+1ZItpH8smSl9lqSu9E+i9fslG0fvafb2
eay1nref5G6+r547Xfq8ck3oLhpIHtG1DzR/mvR7JOtJf1jX5rK3+Maa+KDs
h6XfKrlD9ozg2DQh+8dnuudB3fuQpKH0ZZI5ha9tIn2JZLr0eyXrSz9b9x9I
vJacofvbJD+bPXOTxmdrfHbpb3irxi8K9rX9cn4YLXsg+SPff4rsLtJ7EZNl
/6hn1JZeS7K99G8kQXpJHpH+rP7fjL0keVz3viq7pfQNJQtkvyy7BWshmS/7
RdnNpdeWPCn74uB35zecyffW/800VkvyhMa+199YW9fWkrRhr+nabtIPJWaT
34JjxTH5/gui88mYyvH3delb6ll1JAs190xJN/IDMZDfHx0PL60cz8/Q+N6y
+xLTdO1bjVelf3Mr5mp8T+If8VPjp8veS/oRkqGyv4t+1xqSbaW3Tf7292je
tdKflt5Y77K2ZJ6uPS67vvSQ98+o4HfrluPhucG59NgcD5vqGVfwPXV9nPSt
kmMBeYL9P0R/8wTZZ2vuI7JbJfsuMfd6jbWTfSd7j/0g+8rofHiV5l+mse2S
Y980Pe8a6c3wqdI5mFz8lP5vpHddS/KY5jRP9uVrmKPxzZP3MnkX/7s0Gi9c
Xvl9F5SOjcTIRzXnydK+U+V4+UP0XqspaS+9ie65vHQOGCt7C9kTS+eUa2Vv
mRzryJvEl1P1/+6ye0tO0kNbJsd67hmv+S2SYwF5k9/7P/3fKe+/4zS/s+yl
YBPJ1rJrac5OPEvXx0j/Wc/YSHYdSWfpn+IDmtuKvaXx5bJfAqsR+5P9+UXZ
L2T/XSp5jmdr/Kxk/2bseWKI9F8l9fXsepJdwXfEEI011fxTk30O39tF73Yf
WEr26xrfTuPnJOcrYgUxo5L+ueQ16a9KNpO+Ivq3bav5Zyfnr8f4FjkfvC+Z
J72Fxk/T+J+yN9PfO0r2CNlr6e/WD853v1XOJ9w7lz3N9+DDav7OGrs3OZ4+
o0tP5/hKvEVfRA6R/oukrub30TOHa/7K6Hd9RdJY+g66/qH0HyXt9cyVsn/j
W8n+TPZL0bmYnPxDZXxA/Cam/ys7kEM1fxtihsbeIibybD3nFI3V1JxNwQS6
9o/016P1hro2VOOvRsdyYvof+LuutdTYghx/z5C9peyFxDzWOjo2E6P/rpwP
78/5Bbxysub/qncZInuZ7D803hifkuzJt8l4ghz9i8ZfzHgDDPK97N9kNyi9
R3Yj1ul5v0gfrPGlGv8XTC+ZKHul7BKMFpyPyaf8Jn4b7/hX5Xw7JeMp8uvv
sjchnmnOecn5lzEw11cafyX62/OOv8ruqHlLWHtJO9kfESMKrwlrA156KOcv
8NMB+LCef7DmPoxvZX/7TdJR177iG0l/U9JceieNf8rfknTQ+D/4sO7vr+vn
6/7non/rdZLPqRFkHyv9GMknYNjoWuYn8pnm/y27OTmGGAuekTSV3gPsp/FF
0WvJMz7N8WCZ9N8lO4A3ZbctnSOOkb2z7BUa+1Oyo+xBsluVzlH9ZO8SXLv9
JekEPpe9dekc21/2sbJbl45ZA2QPkb1d6ZwySPbxsrfP+eBY2bvK/py9JdmJ
ekB2h5zPB1NfyW5TOkcNBLPr9wwsjMnB5vOjsXl/yRIwabTeT/KB7A66/z3p
30rasn+SfYd3PERzo67VDfa5Hwnayb+H3zVS+pfR9Sp167my/5W9FTlY0lP6
h9G+gg/hS+ClJ8n1YIKMb/Ct+ZINpP8XvZ6s6wWa/yz5TWPHS5ZXzlPkKzA7
eAocDZ4G04P3H4+ulagRqRXnRdeKYOZ3Nd5V9qYa2x9spvEnomtHaixqrT/B
CYXv+UrP3lHyEftJsr3ueSY6FuHT+Pb2Gl+MrxGTNb5a4y1L73n2/l/Re489
x957OjoW4MP4cpH9sXbl+PQHzy2M0b/Usxvo+lbBPlYn+n2Ij+SULSvHS/yR
nNRSdg09o72e0Q7Mkv3pk8I5aSuNdwmu7d/N75uS57LHD9P8PcBg7I3s3+to
fAeNdSQngM2S9x/7cDT1bc5XjSvnl67BsWFJjt8NczxoVDk/rpW8v9nnFyXz
De8U3gPNK68n78aeaUE+BpdIP494HbxfWW/WY/PKmJ14u0nlfEx84t3JQVvo
WpOc75pUzpdNc75rWnm/3h1caz1Yuh4kZhA78KGPZK8LzpB+Nj4NFgzOTR/m
/bCu5u9Yeo2O1rOnB2OtR0vjf2Iu8WrdHItf0Pj7zNe1ByrjRPAiNQP1Z81k
fAJOuTg55xC76+VclHL+26AyPlikeW+R73Tt7so1KfF6o8r5fBA5WeN76Nrj
1FPBe3Vx9vfXibca7yr7Sdkvs7/I57IfyfGHeIaPb1s5fhOfwTytZO8m+6vC
37BNjo/LC2OQ1jkeEi/BLPBZ9XI+blgZD8Xk+EccHCW9NrhZ4yMkq6XX1rWd
S3NMA6NzLvm6fuV8s6H+bxa8B2tEcyqs7TvBXAucE7/lvWAuam1woOyzJH9I
X0syVvrpklXSU3AtSgz4Tfo64Frpw4j5wXUo9ehp5AjpkX1c2Gd/BdQH71V8
/EfpFb9L+kn4vPT/9DuGF845P8j+t/TeImd9H4wBwYLd9N5z9L6rS/9t9uN3
PC853hP3L5S+qvSz4au+0LVV0diCGEes+7v0byPGfaPx39lbhfmuz2V3SX5/
fsfU5D0Pt7gsZF9gzXXPBpIdwWeS9clXmjc7GYPA7S0Pjmf/lF7bAeQUXSuD
vyUx8yfpgfcu/A4/B3NGcGFLg/NVOz1/Xfarrs9K5rTgEt8M5rqosai1uuj6
TNknBscmONAhlTk89vqSYG4PHA+ep2Y8PvsM2JqYhC/Bu8C/wBlRL8P54Qsf
BvMjxGSwIzGGWE2NQq3SVfPu19h6+n+z4D1dRvscWJqYgy8Sk6gViEfEqprS
ry68B/4O5vTg6j4Jzj+bym4dHN/rkz9K7zVy2tfBnCdc38fB+Q0forYg/uNb
dTW+eXCMqyl7G0kCn+j6jORvyLfcW/YDyTGB2PFacKwAo8JFrwjObzsm1/PU
9ZMy/hpZ+BuCN+Fz+5A7yAka65xjAjmmZTT/eCS5QzI0mn+lVuMe+N/DkrmH
EcF8Hvz0wWAPMAa5O5m/gMeAP+ubXC9TN8P39UnmBs4Lrn+pQbrkGEdtAv8L
1w3nDTcOf0mtzzvBhx6RXMuPDOZ7/srft1bGi6P1e8YG19jnReNJxuBI9ovm
qK8N5vyolw9NXu+ewfhiVd6vcATgffhj+Gc4C7gLajpiMviLWo/6gLlwIHtJ
PzyZe7ggmG/rlewfhwTj137J73ZpMB8/I+dgchTfHszdO/ibg0f2kv5LYUzQ
IWNgnlUz45N9grH50sL4Fz55sca2l/207BupIWV3IMdmDMVvrZHjzUG61is4
Ruwve3IyJ0MP4lGNHcj+Cv4N+0Tz+/C5rAl8Oj6/d34HYsHuld+ZeqAtWC2Z
+4E3hl+lP0LvY0Dp/gT8NtzJYOJqdP+CMTivM8CGyfwTPBR8JzGEnA6+I7bg
f02C62nq82aytwjGq9Qnu1bGSGCc1rI3k908uB6mfp1CDaTnbyd7gcZGSC4M
3rOnRNf71PPwS9RzvTR+eHDMB2/fGR3v2kru01hfSb9g/Aj+uiN6jOffq7H+
yXzs5cF8fY/ktWINWUt8BF/Bh+DKwXvkhkYZH4IX0alJj5B9d3T+7CiZXRnP
w33AgfSQflf0GN//fo0fJjky+JngR3wQX8Sn4aYeiM4n9DzIx3Nk95TdQ/Ii
+Cc6P3eWPCz7aMnAYPxMvicmEBuIGXD/52r8/GCfODHaJ/ANfBhuGh/Gl/Fx
uNzbo+Nba8m0yvU0aw/H1yV6zVg7OF96H5dozmXBa3phdP6j9vpH0kn6IWB2
fCk4P/dO3uv4GL52cHLtt19wfD0ouVbsFpwv8VF8lT1PPwu+dRVYhDWN5sOo
PbkG/9oz2RfwS/INfBRcNpz2TtF8B9wAHEGvaJ/AN/ABehGrc7wnhx8YjefZ
S9Qk4FXqPfYez4AvGafff2VwT2WM7N2S8Qs45hbpV2j8muCewWXRPaOrgnsc
9GtGVuaY8bEzo/Eb35KaaFB0DCeW47P0RvBBfBGfphcBHn1behv9zfl6VndJ
j+CYukf0GrKWrDFYBAxP7Qm+bJr9tV0wXm2W81H34PXaPLoGgDsDnzbJ/nxg
8H7YWvaesg8Nju98DzhGuEY4RXob7Hc4ATBrnxyfDgqO19vJ3hefCOa4do7m
mOkd0uOEe6ampbbdKvsTNTS1NDXvQdGcGNwY/sb3JV4eHczJ7R3NycHNNc75
gfXpG8zh7B7N4cDlNMj7G84E7qR5zldgbLA2GLJ3NIYES26b9w/xCI6CGv/g
HM8HBHMw3aPr0UbBfNtG2V+uD+7JjIzuedL7HJHzLfvh6mBOmPhLPAOzUUMe
GV1DUktSE/aNjpdXBHP0Q7O/jwvOl+CL62VPCe4P0h+bIHtScM8Svvsa2dcF
94vhi6lJ4T6pV6hVqamorajZ+kX3DOjdjsr5eEzGjNRg/WUP0/MuCcYP4BE4
ZLhkOPArs7/cENwjvjjjhQnBPanh+X3oicKRXxPNkcOVw0nTu7pB4zcH8+3w
89TE1MbtczzG324K7gGMi+bU6QXAkcO1Ey/pwYNxB0T3BOgNwJHTKwPTg+1H
F+bz4Aepcahhvs01BrGMnLRrXl9qYjiVKXk/7x8c83aJ7lGCmekvTY7uYcLB
gKFviK5H6XHA8d/D3kjuAYEhH2RtknsCDXP+Gp/cE6BHML1yDwKOh57WzdGY
E+y5ucYfypibWEiMbJ/Xj5qbGnpqdL96Kb5RuD+KP+8bHIM7Rp+f+EDjnWS/
wNrreR+Ti8HArLXsJfhezk+cz/iItZH9aq6P6XnRY5rLt08+Y9FK9mMZUxP7
yRlgbXpA1PhwVrdE1//0vJprfI7mT0zuqTXJ+ZTzE/Rc6BnNrHy+YTm+W5iv
47zG56XzJ3wn/PhXxO7C/Bh8MDUWMfsL2bcl17iXFuaT4fOogalpf6oc04nt
F8n+snKPlRqXmvg72bcn18BwID/LviOZE7myMF9Nf4CaBo7m98o9Z3rPtxfu
D1Cfbxzck14rul6qE9xTDtl/OSNAT2ui7OuSe2b0GGdV7hHTK4aPht+fHV0v
dpc8W5nPXz+4p7xa+l3JHML4wvw9PVt6t/D58I3URw2Ce7q1onva9Lbh2+mf
3JnMOcFBrALfRte3YJaXKvM95M7mOX4wDnYBw8A10K/ctXR8hw+emfEamI5a
dudkLA2GBksTY4itR1WOPTOisR33LKyMt9gbTTMeI7fBlcMJw8fwDVjrGvnb
PKNnrVv4HvqzC0v3HtlP9O86JOusMWt9fzSW65jXkxxE7jq0cm4Cr+2U8Rm/
f1q0L26R8Rr4DZ0eMHwRMYvcdHjlWAae5N2bFea7iPHksiMqx/4dkn2BGEGs
YE1Z2yMrx+pdkn0Vn8Q32YPspZT3Jv1ruHfyJ/x652TsAAYHi8/OeBVMCzd0
bzQWBBNS+/KN2QtrV/727DFyW6289/AJ9tZ/Gf+wR6gN1q+8d4ip7E0amsRa
+I7zC+8/+Cv4IPgP9hP8Jfwy9TzxF34JbndRYQ4ePhOu4NnC/Cn8Jbz5wsKc
KPwofZanCvN38KP4GLVHnex78EvwT/gj/AL80jmF/RX+8pFo7qe35E3ds31y
7CUmE5vx+TW+mWMBMWONb+RYQv1B7N60cH1CvYJOj5jzXu2TYz8xndgO/q5X
uOcNPwmfBd9FPIFPw0fxzXWy78J3wFcRf+DX4JPgv4hX8HXwWWcUjmfwdXAf
cCXwsfDfHZNjBzGV2NopOVZTg07OtQK1A/0S+vfUZnAT+5Y+HzC/XNPiWPMb
6VeDocCG+1XGVuQkcu+knKvAaGDLfSpjNzAZWPCAyljtwORanBqTWvOA5NqR
Gp1anfMV1P7fFT5vAEYDe/asjN3oD/Ltrircf9szee2Iwfh71+S1IUbjD3sk
rx0xn+9FTgabTKycq8nZYNHrKudy+o2s5bjC/VT6q+hwpPR79kreS8RE/IP+
KHt7At+vcn+Qd4PToj/M+Ql+Cz0E8DQ5D+wyuXIupF9K7w5OHG5872TfIGbz
/adH59KtJfPAHslcDhwJXEn3ZG4Jjgeuh/MScHvgH84fUnvCBxETOM9C7Ugt
Sv+N8wGc3+Dbg3/pt1FLwl11LX2+g/Me6OBh+mlgZLB1n8rYeadkLoOcT+7n
vMrPhTkV8D8YGuzduzK25nwCfxs8Tb9veDC3RY74//MsnEUAb8JPch6FXiD1
Bf3Gldm/6bnTz+c805eFOXfqmW4Z26wo3G+k9qUW5hmcZ6G/CndBz61FdM1B
bXFI5VqE8wI8e02PJPp8EWeDwMecjwDLUGutLNx/5DwNvgI+pT/J+VN6keB5
+FfO99G7BM/Tn9wmY296BvSf4CV+zTb9X84WcpZtaOF+Fzmf/PhccH56Q+N1
C+8Jzq+SH/cujO8W5PwKH8o18iXnPzibCZ6nXgNTkg+eDo5HnCehNmAO50PA
fGCnD4KxIJiU/PtMcDyEX4fbBx/B379W+iwte4DzRbOi+VvOYMJPv6T/1y+c
Izn/BKYjvz4fHI/AwOSzF4Pz3bSMH8ix4NsXSp+dalH4vBTnYzlvST1E/fhc
6bNU5EzOS3G+h9qBMzu3afyV0mefiHmcx2KNWKs3gvMhmBbsuDg4n9InhVsm
J9HvpPc1qHCMpt/AeRzO/lK/UW9wPgiukzOkV0SfnaX3QA+CfgLnN+ECuIfz
O/RJ4f7JgfRDBiRzC3AGcAf0QemVkLPoh3C+iLO61I/UV/Rl6V2QE+C/Od9E
rceZWs4nDkzmIuBg4WI510jvlG9GP4SzwfS6yRn0P6j9X8/+Qn+K85Zrzr+W
Pj/HeTp0YjyxnvOQ/C1iJrGTvvrAwjmJ/gZnU+hNk/Ppb3CW+pjCOZd+Dhwp
2P3tYLzHeWC4Jr4p5505Pwb3SAzhvBu1ClzQ8sLnC+ZGry/rTD9jXt7/7Hl6
AcTLLoXrl8cyvtmDeMn+kL1rcu1CjcP+fjh6Lve8Xvk86V7Zf+iPgw+4l2fQ
S6md48fGGUtTS3OeaGnh/h/P61XYh/ClYTnGEYMHa+yh6H4CZ8AHZ7wJdmdN
WBv40zb5mY2iex+cjaLnTn+bnjExhP41vWTmclZoWeHzWvdF92vocdK/4HwD
z+ZvcN4Bzpnf/0pw/uc8Ae/KO6+o3A9j744q3I/iPAn+Ad7nPAj9eGLT6ML9
PdaY9Xs1OP7js/juS8G16qLSZyPBIJz3m59/LzULvS7Om/Bsagp6Z/8H89Ln
6g==
               "]], Polygon3DBox[CompressedData["
1:eJwt1XlMl3UcB/CfgLd5oGDiAaZlm1ameRTeJ4EgoCAKCrbVOpa2jul0mpmG
F+KFeHX9UatZLrt02bV0WU07QAUVVNSCtvqj2mxtNno96/vHl8/zfn0/3+fh
9/y+z/Mb+NDS/CVxsViszGhrZPszMT4Wmw3btonFhiXEYg1Gb9aXvaMnUc7R
N5nlsY76hrPZbArLZ53YvawzK2albBArZblsGpvLurJRbCjbxfawcraXDWNV
bC/bwPaxWWwCy2EJbCi7k+1gu9mLrIoNYdtZFVvLdrE8Np0VsG5sNJvPVrLN
bAl7gg1mlWwnW822sSK2gm1iT7LHWRnbxPaF/289m8G6sH7hXv3ruAObry5k
qfqK9Q1ne9gBVsFeZQmskC1gKayQtWdFrIQNYAtYF1bCythgVsYeZEnsdnbM
dbuwRWwd2xU+x0p2D6tm+9kW9gqbybqxVHbY2jhWyJaxcvaovodZMVvNtrJn
2FOshK1h29gy9iwrZeWsOnwfa9hC9gLbzpaz59g8tpxtYI+xR9hiVsFeDvdl
E1vAVrEK9jRbyuJZAZvP+rAC1mrks0LWi+XK/fVtYFvC2nXsoPG9XCPf5fN+
Zv5GdA/V7LCvJsnTre3I+rA39f3t+DA/I9frGcNOsiPsArvEprAadpRdZJfZ
VFbLJjtfvNqTH2C/O57AWqP9aOxmzazF2jR1cPguB8p/RXuLZbJWli5/aNTJ
F11jHDtlfpLzxamJfD/7zfEgtlXdwVbprbRuHDsn/yJn6/vG/BWeog4I+6C3
3GykRudgn7A0eby15+Vfrc1np81PYx3UW/kb7Ibjf6LnVc0N74jpcrq+Wvma
nKHvuPkprK2axF9jfzi+Gb1P1DnhHZEpXzb6sP7sPX3J8iHjJ/msnhHsK/PX
WD81jX/E+spTXaMdS2avsz8dX4/2hzqQfcz6yceMRrnJ+WayOvP3Wfs1Oxeu
8S6r0XeL2iPc5zbyHH1ZrDg8v5PZXJbDFoVnfwa7n52WG+Xx1h41n8LWqxvD
++V5fWPZKbkhfL9Honcry1CLeFLk0V5hm1lleAY3skyWzrLCfrmDfWFcka/r
mcUaonehvjx1cXiXZOkZzb6Vz4c9/r75Mew7doGNZR+wL/U2sZ/DHmpkI/Qd
Z7Xh2XqLndB3nbWE/XKV9da3Vn0pvF9W6HmA/ShfCc/M5+Z/4J3UruH5uBn/
/w/VHHVeuAd5eiZGP16sO6t22BJ9djZOnRX9wOkbEj2TRnJ0v9lB3EOuN3pG
/1PYu53l48Y1uTk6P2syP8r5TrI6NpIdYp/qu8Suhv1cz86y7mqvsJ/bySOt
PSGf0Xc3e9t8BktUbwv7r72+/wApwdm4
               "]]}],
            Lighting->{{"Ambient", 
               RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
              "Directional", 
               RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
               ImageScaled[{0, 2, 2}]}, {"Directional", 
               RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
               ImageScaled[{2, 2, 2}]}, {"Directional", 
               RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
               ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
          {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0ckqhWEAx+HPPM/DXkJxA0JxAzLEDQjFgqVQZC8UN6BwjuGY55AkSTLe
gnALQnneLH495/8uvvMNFT3DnUNJURRNKVnhd7liKVFUxzO28JndHNSk3u0F
fnOVhalRdMFXfarK/mUDi120jTVsUod67X6OcpwznOOyVrTmZmJcZ5wbXA3n
4UwJe4ObTHCLm0Fth+wd7nCXu9zjvg60Zx+GzaNwxmOeaEmL7meW0xzjCPvY
rkb12NVsZRHr+eN5P/SiSvuc+Yzzy3ua54QG9GZ38ZHNPGUty1SqJ9cs4QOL
ec+i8J5VoDs7n7fM4w1zmaNsXdtZvGImL5nBdKXpwk4N35cp4f+T/r//H6DV
Qbw=
            "]]}, 
          {GrayLevel[0.2], 
           Line3DBox[{935, 1186, 934, 706, 936, 1330, 1426, 937, 1331, 1427, 
            938, 1187, 939, 1188, 940, 709, 941, 1332, 1428, 942, 1333, 1429, 
            943, 1189, 944, 1190, 945, 712, 946, 1334, 1430, 947, 1335, 1431, 
            948, 1191, 949, 1192, 950, 715, 951, 1336, 1432, 952, 1337, 1433, 
            953, 1193, 954}], 
           Line3DBox[{956, 1194, 955, 1378, 1195, 957, 719, 958, 1338, 1434, 
            959, 1196, 960, 1197, 961, 1379, 1198, 962, 722, 963, 1339, 1435, 
            964, 1199, 965, 1200, 966, 1380, 1201, 967, 725, 968, 1340, 1436, 
            969, 1202, 970, 1203, 971, 1381, 1204, 972, 728, 973, 1341, 1437, 
            974, 1205, 975}], 
           Line3DBox[{977, 1206, 976, 1382, 1207, 978, 1383, 1208, 979, 732, 
            980, 1209, 981, 1210, 982, 1384, 1211, 983, 1385, 1212, 984, 735, 
            985, 1213, 986, 1214, 987, 1386, 1215, 988, 1387, 1216, 989, 738, 
            990, 1217, 991, 1218, 992, 1388, 1219, 993, 1389, 1220, 994, 741, 
            995, 1221, 996}], 
           Line3DBox[{106, 107, 502, 108, 503, 109, 504, 110, 111, 112, 505, 
            113, 506, 114, 507, 115, 116, 117, 508, 118, 509, 119, 510, 120, 
            121, 122, 511, 123, 512, 124, 513, 125, 126}], 
           Line3DBox[{998, 1222, 997, 766, 999, 1342, 1438, 1000, 1343, 1439, 
            1001, 1223, 1002, 1224, 1003, 769, 1004, 1344, 1440, 1005, 1345, 
            1441, 1006, 1225, 1007, 1226, 1008, 772, 1009, 1346, 1442, 1010, 
            1347, 1443, 1011, 1227, 1012, 1228, 1013, 775, 1014, 1348, 1444, 
            1015, 1349, 1445, 1016, 1229, 1017}], 
           Line3DBox[{1019, 1230, 1018, 1390, 1231, 1020, 779, 1021, 1350, 
            1446, 1022, 1232, 1023, 1233, 1024, 1391, 1234, 1025, 782, 1026, 
            1351, 1447, 1027, 1235, 1028, 1236, 1029, 1392, 1237, 1030, 785, 
            1031, 1352, 1448, 1032, 1238, 1033, 1239, 1034, 1393, 1240, 1035, 
            788, 1036, 1353, 1449, 1037, 1241, 1038}], 
           Line3DBox[{1040, 1242, 1039, 1394, 1243, 1041, 1395, 1244, 1042, 
            792, 1043, 1245, 1044, 1246, 1045, 1396, 1247, 1046, 1397, 1248, 
            1047, 795, 1048, 1249, 1049, 1250, 1050, 1398, 1251, 1051, 1399, 
            1252, 1052, 798, 1053, 1253, 1054, 1254, 1055, 1400, 1255, 1056, 
            1401, 1256, 1057, 801, 1058, 1257, 1059}], 
           Line3DBox[{211, 212, 562, 213, 563, 214, 564, 215, 216, 217, 565, 
            218, 566, 219, 567, 220, 221, 222, 568, 223, 569, 224, 570, 225, 
            226, 227, 571, 228, 572, 229, 573, 230, 231}], 
           Line3DBox[{1061, 1258, 1060, 826, 1062, 1354, 1450, 1063, 1355, 
            1451, 1064, 1259, 1065, 1260, 1066, 829, 1067, 1356, 1452, 1068, 
            1357, 1453, 1069, 1261, 1070, 1262, 1071, 832, 1072, 1358, 1454, 
            1073, 1359, 1455, 1074, 1263, 1075, 1264, 1076, 835, 1077, 1360, 
            1456, 1078, 1361, 1457, 1079, 1265, 1080}], 
           Line3DBox[{1082, 1266, 1081, 1402, 1267, 1083, 839, 1084, 1362, 
            1458, 1085, 1268, 1086, 1269, 1087, 1403, 1270, 1088, 842, 1089, 
            1363, 1459, 1090, 1271, 1091, 1272, 1092, 1404, 1273, 1093, 845, 
            1094, 1364, 1460, 1095, 1274, 1096, 1275, 1097, 1405, 1276, 1098, 
            848, 1099, 1365, 1461, 1100, 1277, 1101}], 
           Line3DBox[{1103, 1278, 1102, 1406, 1279, 1104, 1407, 1280, 1105, 
            852, 1106, 1281, 1107, 1282, 1108, 1408, 1283, 1109, 1409, 1284, 
            1110, 855, 1111, 1285, 1112, 1286, 1113, 1410, 1287, 1114, 1411, 
            1288, 1115, 858, 1116, 1289, 1117, 1290, 1118, 1412, 1291, 1119, 
            1413, 1292, 1120, 861, 1121, 1293, 1122}], 
           Line3DBox[{316, 317, 622, 318, 623, 319, 624, 320, 321, 322, 625, 
            323, 626, 324, 627, 325, 326, 327, 628, 328, 629, 329, 630, 330, 
            331, 332, 631, 333, 632, 334, 633, 335, 336}], 
           Line3DBox[{1124, 1294, 1123, 886, 1125, 1366, 1462, 1126, 1367, 
            1463, 1127, 1295, 1128, 1296, 1129, 889, 1130, 1368, 1464, 1131, 
            1369, 1465, 1132, 1297, 1133, 1298, 1134, 892, 1135, 1370, 1466, 
            1136, 1371, 1467, 1137, 1299, 1138, 1300, 1139, 895, 1140, 1372, 
            1468, 1141, 1373, 1469, 1142, 1301, 1143}], 
           Line3DBox[{1145, 1302, 1144, 1414, 1303, 1146, 899, 1147, 1374, 
            1470, 1148, 1304, 1149, 1305, 1150, 1415, 1306, 1151, 902, 1152, 
            1375, 1471, 1153, 1307, 1154, 1308, 1155, 1416, 1309, 1156, 905, 
            1157, 1376, 1472, 1158, 1310, 1159, 1311, 1160, 1417, 1312, 1161, 
            908, 1162, 1377, 1473, 1163, 1313, 1164}], 
           Line3DBox[{1166, 1314, 1165, 1418, 1315, 1167, 1419, 1316, 1168, 
            912, 1169, 1317, 1170, 1318, 1171, 1420, 1319, 1172, 1421, 1320, 
            1173, 915, 1174, 1321, 1175, 1322, 1176, 1422, 1323, 1177, 1423, 
            1324, 1178, 918, 1179, 1325, 1180, 1326, 1181, 1424, 1327, 1182, 
            1425, 1328, 1183, 921, 1184, 1329, 1185}]}, 
          {GrayLevel[0.2], 
           Line3DBox[{442, 694, 443, 706, 466, 718, 1378, 478, 730, 1382, 490,
             742, 502, 754, 514, 766, 526, 778, 1390, 538, 790, 1394, 550, 
            802, 562, 814, 574, 826, 586, 838, 1402, 598, 850, 1406, 610, 862,
             622, 874, 634, 886, 646, 898, 1414, 658, 910, 1418, 670, 922, 
            682}], Line3DBox[{444, 695, 445, 1426, 707, 467, 719, 479, 731, 
            1383, 491, 743, 503, 755, 515, 1438, 767, 527, 779, 539, 791, 
            1395, 551, 803, 563, 815, 575, 1450, 827, 587, 839, 599, 851, 
            1407, 611, 863, 623, 875, 635, 1462, 887, 647, 899, 659, 911, 
            1419, 671, 923, 683}], 
           Line3DBox[{446, 696, 447, 1427, 708, 468, 1434, 720, 480, 732, 492,
             744, 504, 756, 516, 1439, 768, 528, 1446, 780, 540, 792, 552, 
            804, 564, 816, 576, 1451, 828, 588, 1458, 840, 600, 852, 612, 864,
             624, 876, 636, 1463, 888, 648, 1470, 900, 660, 912, 672, 924, 
            684}], Line3DBox[{6, 27, 939, 48, 960, 69, 981, 90, 111, 132, 
            1002, 153, 1023, 174, 1044, 195, 216, 237, 1065, 258, 1086, 279, 
            1107, 300, 321, 342, 1128, 363, 1149, 384, 1170, 405, 426}], 
           Line3DBox[{448, 697, 449, 709, 469, 721, 1379, 481, 733, 1384, 493,
             745, 505, 757, 517, 769, 529, 781, 1391, 541, 793, 1396, 553, 
            805, 565, 817, 577, 829, 589, 841, 1403, 601, 853, 1408, 613, 865,
             625, 877, 637, 889, 649, 901, 1415, 661, 913, 1420, 673, 925, 
            685}], Line3DBox[{450, 698, 451, 1428, 710, 470, 722, 482, 734, 
            1385, 494, 746, 506, 758, 518, 1440, 770, 530, 782, 542, 794, 
            1397, 554, 806, 566, 818, 578, 1452, 830, 590, 842, 602, 854, 
            1409, 614, 866, 626, 878, 638, 1464, 890, 650, 902, 662, 914, 
            1421, 674, 926, 686}], 
           Line3DBox[{452, 699, 453, 1429, 711, 471, 1435, 723, 483, 735, 495,
             747, 507, 759, 519, 1441, 771, 531, 1447, 783, 543, 795, 555, 
            807, 567, 819, 579, 1453, 831, 591, 1459, 843, 603, 855, 615, 867,
             627, 879, 639, 1465, 891, 651, 1471, 903, 663, 915, 675, 927, 
            687}], Line3DBox[{11, 32, 944, 53, 965, 74, 986, 95, 116, 137, 
            1007, 158, 1028, 179, 1049, 200, 221, 242, 1070, 263, 1091, 284, 
            1112, 305, 326, 347, 1133, 368, 1154, 389, 1175, 410, 431}], 
           Line3DBox[{454, 700, 455, 712, 472, 724, 1380, 484, 736, 1386, 496,
             748, 508, 760, 520, 772, 532, 784, 1392, 544, 796, 1398, 556, 
            808, 568, 820, 580, 832, 592, 844, 1404, 604, 856, 1410, 616, 868,
             628, 880, 640, 892, 652, 904, 1416, 664, 916, 1422, 676, 928, 
            688}], Line3DBox[{456, 701, 457, 1430, 713, 473, 725, 485, 737, 
            1387, 497, 749, 509, 761, 521, 1442, 773, 533, 785, 545, 797, 
            1399, 557, 809, 569, 821, 581, 1454, 833, 593, 845, 605, 857, 
            1411, 617, 869, 629, 881, 641, 1466, 893, 653, 905, 665, 917, 
            1423, 677, 929, 689}], 
           Line3DBox[{458, 702, 459, 1431, 714, 474, 1436, 726, 486, 738, 498,
             750, 510, 762, 522, 1443, 774, 534, 1448, 786, 546, 798, 558, 
            810, 570, 822, 582, 1455, 834, 594, 1460, 846, 606, 858, 618, 870,
             630, 882, 642, 1467, 894, 654, 1472, 906, 666, 918, 678, 930, 
            690}], Line3DBox[{16, 37, 949, 58, 970, 79, 991, 100, 121, 142, 
            1012, 163, 1033, 184, 1054, 205, 226, 247, 1075, 268, 1096, 289, 
            1117, 310, 331, 352, 1138, 373, 1159, 394, 1180, 415, 436}], 
           Line3DBox[{460, 703, 461, 715, 475, 727, 1381, 487, 739, 1388, 499,
             751, 511, 763, 523, 775, 535, 787, 1393, 547, 799, 1400, 559, 
            811, 571, 823, 583, 835, 595, 847, 1405, 607, 859, 1412, 619, 871,
             631, 883, 643, 895, 655, 907, 1417, 667, 919, 1424, 679, 931, 
            691}], Line3DBox[{462, 704, 463, 1432, 716, 476, 728, 488, 740, 
            1389, 500, 752, 512, 764, 524, 1444, 776, 536, 788, 548, 800, 
            1401, 560, 812, 572, 824, 584, 1456, 836, 596, 848, 608, 860, 
            1413, 620, 872, 632, 884, 644, 1468, 896, 656, 908, 668, 920, 
            1425, 680, 932, 692}], 
           Line3DBox[{464, 705, 465, 1433, 717, 477, 1437, 729, 489, 741, 501,
             753, 513, 765, 525, 1445, 777, 537, 1449, 789, 549, 801, 561, 
            813, 573, 825, 585, 1457, 837, 597, 1461, 849, 609, 861, 621, 873,
             633, 885, 645, 1469, 897, 657, 1473, 909, 669, 921, 681, 933, 
            693}]}, {}, {}}},
        VertexNormals->CompressedData["
1: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
hplBhinamgWU0eCaRdl2D1I9kqKoHGKdL6gZbkhjnS+ozo8lsc4XeKerJ6Zk
YhB9vN4wq5YI278P2HzOKEVEk8g/W1cw6A2mc+zRJML+LehCwplKFJZhrSw8
jOeB4tY6PlsiLFDnrFR3V6HObWk2K/h8hNb2tPfiPWnEdlOJX1It2mw6k9Rr
hEH9Pg4OlU4iWJnsUiVH16FarbzQQVM6/FKJOTucT4JLti/y3OybkfeUb/qt
DBqcd962N9eMDESqsseZg63IIYDfgsX57/fXPyDzlAg/VPpt7c3K0cVnd+yM
+BjQF7nl4YNVAiSqIB/jg9UoxvXoX9NiDOSCMyaS9+L5IQftmRJrQAJjkqdy
ZfC+cP6VST3ev9nf/9qhU9eOVpxb/QslGTDiKN0hjPdjkfJF3jmpSnSkd86o
G9/37WLjjjjj+36qjU5kRXclypu6ZMzieBUp5t9ZHO/l/L1+bBK1yEcjlrkH
9zGyxa13hbiPySPjtD0qdUggxX1dogITfBb9TvTJTEDW7oqdZKFmtPVNqknS
ISYoSshdu14zDmGq6rbFbi0oKhrPjD8ZsC2+sPzSwhgoWNlyPt/dhfZcdOwh
vGPAW9UpSYfn4/BRh+OhpX83euAlf/7aLQasOEvyCXsSAMveKrluugpta556
yeJmd0wruvm+mICTys3zlH/1iEdK0JX6gwmcWMrHjy4jUPcv6MKpkTYklXhA
ssmYCRZcS/fO2g3DlWV5vhy7XtS811d0cw8NllRngv8cxfu3ZVuBkGkuYkTf
3XsslAJ/H2/sUsHze9fgEYPq1Hy05+lBz84rJNhzY5k+oY3nYgPz9uZvRUjJ
No289IYIbpPAdRTPa5wvvTaH8pSjuMjzXLRCXA+10UkvZMkQdOPYWLJ4HrJq
SXpR9poOnuOm8Q/tyJBZs3GZMzYP9SGmYQXudx6qA/I2x6lw/s5a5mmBQuTH
yP9Qh+szP7kI7R6nQtoyU9VtrRAdGeRTcLLAfeb42AcdL9wPZ9du230sQYqK
MJCK95nd99au7aDRYcuw8Z3eF6VIxkQwTziYCBFN+oIZDRj4rL7vbW6qQG3y
a/17BImwR/muKhfuP0FLEennD1ait3/4PcMP4HrZXFf7PZQEuWWpt+6aFSBL
5T0fhPH5r0Jiiyp471hycH9lt6MUmWww5bm0TIPcn3RJ2QYyJCxvX1KuqEQz
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
         "]], {}, {}},
      Axes->True,
      AxesLabel->{
        FormBox["\"Cars at 1st location\"", TraditionalForm], 
        FormBox["\"Cars at 2nd location\"", TraditionalForm], None},
      BoxRatios->{1, 1, 0.4},
      DisplayFunction->Identity,
      FaceGridsStyle->Automatic,
      Method->{"DefaultBoundaryStyle" -> Directive[
          GrayLevel[0.3]], 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "RotationControl" -> "Globe"},
      PlotRange->{All, All, All},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}},
      Ticks->{Automatic, Automatic, Automatic}], {635.8499999999999, -190.05},
      ImageScaled[{0.5, 0.5}], {360, 362},
     ContentSelectable->True]}, {}},
  ImageSize->{
    UpTo[600], Automatic},
  PlotRange->{{0, 828.8}, {-380.1, 0}},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{
  3.7966231895476313`*^9, 3.796623307012617*^9, 3.796623779822403*^9, 
   3.796623849664062*^9, {3.79662399920828*^9, 3.796624014478279*^9}, 
   3.796624164024125*^9, 3.796624250462846*^9, 3.796624988634503*^9, 
   3.7966348575641117`*^9, 3.796636535142211*^9, 3.796643824140533*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"e3c2849b-2dc6-40be-a529-6acccec1c1bd"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Modified Jack\[CloseCurlyQuote]s car rental problem", "Section",
 CellChangeTimes->{{3.792730561175968*^9, 3.7927305725603247`*^9}, {
  3.7964081980536757`*^9, 3.7964082112297697`*^9}, {3.796408808827015*^9, 
  3.796408810306715*^9}, {3.796625427509861*^9, 
  3.7966254285256433`*^9}},ExpressionUUID->"2763d899-07bb-4d42-a9df-\
acd05f22e1af"],

Cell["\<\
Same problem with the following changes:
One car transfer from A to B is free per night.
Overnight storage of more than 10 cars costs $4.\
\>", "Text",
 CellChangeTimes->{{3.796625522686762*^9, 3.79662555647071*^9}, {
  3.796625600207737*^9, 
  3.796625691464081*^9}},ExpressionUUID->"6ce40455-b9b4-48bc-ab0e-\
4996960ccdd3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"EvaluatePolicy", "[", 
   RowBox[{"V0_", ",", "\[CapitalPi]_", ",", "\[Theta]_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"V", "=", "V0"}], ",", "v", ",", 
      RowBox[{"\[CapitalDelta]", "=", 
       RowBox[{"1.0", "+", "\[Theta]"}]}], ",", 
      RowBox[{"\[Gamma]", "=", "0.9"}], ",", "a", ",", "weights"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"\[CapitalDelta]", ">", "\[Theta]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[CapitalDelta]", "=", "0.0"}], ";", "\[IndentingNewLine]", 
        RowBox[{"weights", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"10", "r"}], "-", 
            RowBox[{"2", 
             RowBox[{"Abs", "[", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"a", ">", "0"}], ",", 
                RowBox[{"a", "-", "1"}], ",", "a"}], "]"}], "]"}]}], "-", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"ip", "-", "a"}], ">", "10"}], ",", "4", ",", "0"}], 
             "]"}], "-", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"jp", "+", "a"}], ">", "10"}], ",", "4", ",", "0"}], 
             "]"}], "+", 
            RowBox[{"\[Gamma]", " ", 
             RowBox[{"V", "\[LeftDoubleBracket]", 
              RowBox[{
               RowBox[{"ip", "+", "1"}], ",", 
               RowBox[{"jp", "+", "1"}]}], "\[RightDoubleBracket]"}]}]}], ",", 
           RowBox[{"{", 
            RowBox[{"a", ",", 
             RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"ip", ",", "0", ",", "20"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"jp", ",", "0", ",", "20"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"r", ",", "0", ",", "40"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"v", "=", 
            RowBox[{"V", "\[LeftDoubleBracket]", 
             RowBox[{
              RowBox[{"i", "+", "1"}], ",", 
              RowBox[{"j", "+", "1"}]}], "\[RightDoubleBracket]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"a", "=", 
            RowBox[{"\[CapitalPi]", "\[LeftDoubleBracket]", 
             RowBox[{
              RowBox[{"i", "+", "1"}], ",", 
              RowBox[{"j", "+", "1"}]}], "\[RightDoubleBracket]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"V", "\[LeftDoubleBracket]", 
             RowBox[{
              RowBox[{"i", "+", "1"}], ",", 
              RowBox[{"j", "+", "1"}]}], "\[RightDoubleBracket]"}], "=", 
            RowBox[{"Total", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Joint", "[", 
                RowBox[{"i", ",", "j", ",", "a"}], "]"}], 
               RowBox[{"weights", "\[LeftDoubleBracket]", 
                RowBox[{"a", "+", "6"}], "\[RightDoubleBracket]"}]}], ",", 
              "3"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"weights", "\[LeftDoubleBracket]", 
             RowBox[{
              RowBox[{"a", "+", "6"}], ",", 
              RowBox[{"i", "+", "1"}], ",", 
              RowBox[{"j", "+", "1"}]}], "\[RightDoubleBracket]"}], "+=", 
            RowBox[{"\[Gamma]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"V", "\[LeftDoubleBracket]", 
                RowBox[{
                 RowBox[{"i", "+", "1"}], ",", 
                 RowBox[{"j", "+", "1"}]}], "\[RightDoubleBracket]"}], "-", 
               "v"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"\[CapitalDelta]", "=", 
            RowBox[{"Max", "[", 
             RowBox[{"\[CapitalDelta]", ",", 
              RowBox[{"Abs", "[", 
               RowBox[{"v", "-", 
                RowBox[{"V", "\[LeftDoubleBracket]", 
                 RowBox[{
                  RowBox[{"i", "+", "1"}], ",", 
                  RowBox[{"j", "+", "1"}]}], "\[RightDoubleBracket]"}]}], 
               "]"}]}], "]"}]}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "20"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "0", ",", "20"}], "}"}]}], "\[IndentingNewLine]",
          "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]",
      "V"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.796550314841609*^9, 3.796550553049486*^9}, {
   3.796550589668076*^9, 3.796550597412046*^9}, {3.796550654644329*^9, 
   3.79655077724086*^9}, {3.796550889618314*^9, 3.796550930892747*^9}, {
   3.796551034548215*^9, 3.796551035623632*^9}, {3.796551088091647*^9, 
   3.796551110142379*^9}, {3.796551195781826*^9, 3.796551267064527*^9}, {
   3.796551378223322*^9, 3.796551414907325*^9}, {3.79655145789526*^9, 
   3.7965514848837643`*^9}, {3.79655181619845*^9, 3.796551844158956*^9}, {
   3.7965518952631283`*^9, 3.796552159730587*^9}, {3.796552301100987*^9, 
   3.796552517139677*^9}, {3.796552844145993*^9, 3.796552886061144*^9}, {
   3.796553006544663*^9, 3.796553006647587*^9}, {3.796553082089387*^9, 
   3.796553127977417*^9}, {3.796553390539603*^9, 3.796553390931314*^9}, {
   3.796553465424679*^9, 3.7965534692502403`*^9}, {3.7965535429038773`*^9, 
   3.796553675837072*^9}, {3.796553853042069*^9, 3.796553874861964*^9}, {
   3.796553914535933*^9, 3.796553957480921*^9}, {3.7965541604561462`*^9, 
   3.7965542277448683`*^9}, {3.7965542590268173`*^9, 
   3.7965542634951572`*^9}, {3.79655430829021*^9, 3.796554309566215*^9}, {
   3.7965543686777678`*^9, 3.796554472307501*^9}, 3.796554606914845*^9, {
   3.796557088918418*^9, 3.7965570916665993`*^9}, {3.796557920845022*^9, 
   3.7965579245395947`*^9}, {3.796558235476179*^9, 3.7965582451014214`*^9}, {
   3.79655827682953*^9, 3.7965583621967297`*^9}, {3.796558395033017*^9, 
   3.796558396358165*^9}, 3.796558537866926*^9, {3.796558577459218*^9, 
   3.7965585933689537`*^9}, {3.796558625739359*^9, 3.7965586276395073`*^9}, {
   3.796558730348814*^9, 3.796558731210566*^9}, {3.7965593861968517`*^9, 
   3.796559391403982*^9}, 3.796559519194927*^9, {3.7965603314579687`*^9, 
   3.7965603588666973`*^9}, {3.79656084231812*^9, 3.796560878491631*^9}, {
   3.796560986391603*^9, 3.796560992101762*^9}, 3.7965610955282373`*^9, {
   3.7965611417311087`*^9, 3.796561153198398*^9}, {3.796561188406272*^9, 
   3.7965611915477533`*^9}, {3.796564719325663*^9, 3.796564722619308*^9}, {
   3.79656929289152*^9, 3.796569308192479*^9}, {3.796618334529592*^9, 
   3.796618401242745*^9}, {3.796618433678203*^9, 3.7966184407299137`*^9}, {
   3.796618785534285*^9, 3.796618789653857*^9}, {3.796622484881819*^9, 
   3.796622598796071*^9}, {3.796622679204959*^9, 3.796622727591523*^9}, {
   3.7966229898320436`*^9, 3.796622998436878*^9}, 3.796626890058096*^9, {
   3.796626947832787*^9, 3.796627018182106*^9}, {3.7966288122596416`*^9, 
   3.796628813396223*^9}, {3.79662884602917*^9, 3.796628868065464*^9}, {
   3.796629672266568*^9, 3.796629780420731*^9}, {3.796643195244135*^9, 
   3.796643256963348*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"d25f5225-244c-42e6-9b90-8ea0382b70f6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EvaluatePolicy", "[", 
    RowBox[{
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0.0", ",", 
       RowBox[{"{", 
        RowBox[{"21", ",", "21"}], "}"}]}], "]"}], ",", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"21", ",", "21"}], "}"}]}], "]"}], ",", "0.01"}], "]"}], "//",
    "MatrixPlot"}], "//", "AbsoluteTiming"}]], "Input",
 CellLabel->"In[16]:=",ExpressionUUID->"702652b8-3216-4ed7-924b-4cd35964ae57"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4.360456`", ",", 
   GraphicsBox[RasterBox[CompressedData["
1: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
Zd+suhmM/wcgct3B
     "], {{0, 0}, {21, 21}}, {0, 1}],
    Frame->True,
    FrameLabel->{None, None},
    FrameTicks->{{{{20.5, 
         FormBox["1", TraditionalForm]}, {16.5, 
         FormBox["5", TraditionalForm]}, {11.5, 
         FormBox["10", TraditionalForm]}, {6.5, 
         FormBox["15", TraditionalForm]}, {0.5, 
         FormBox["21", TraditionalForm]}}, {{20.5, 
         FormBox["1", TraditionalForm]}, {16.5, 
         FormBox["5", TraditionalForm]}, {11.5, 
         FormBox["10", TraditionalForm]}, {6.5, 
         FormBox["15", TraditionalForm]}, {0.5, 
         FormBox["21", TraditionalForm]}}}, {{{0.5, 
         FormBox["1", TraditionalForm]}, {4.5, 
         FormBox["5", TraditionalForm]}, {9.5, 
         FormBox["10", TraditionalForm]}, {14.5, 
         FormBox["15", TraditionalForm]}, {20.5, 
         FormBox["21", TraditionalForm]}}, {{0.5, 
         FormBox["1", TraditionalForm]}, {4.5, 
         FormBox["5", TraditionalForm]}, {9.5, 
         FormBox["10", TraditionalForm]}, {14.5, 
         FormBox["15", TraditionalForm]}, {20.5, 
         FormBox["21", TraditionalForm]}}}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
      "RangePadding" -> Scaled[0.05]}]}], "}"}]], "Output",
 CellChangeTimes->{3.796643358094775*^9, 3.796643874721925*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"5511f154-66bf-439c-a7a2-2d33eb888290"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ImprovePolicy", "[", 
   RowBox[{"V_", ",", "\[CapitalPi]0_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[CapitalPi]", "=", "\[CapitalPi]0"}], ",", 
      RowBox[{"\[Gamma]", "=", "0.9"}], ",", "stable", ",", "\[Pi]old", ",", 
      "A", ",", "weights"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"stable", "=", "True"}], ";", "\[IndentingNewLine]", 
     RowBox[{"weights", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"10", "r"}], "-", 
         RowBox[{"2", 
          RowBox[{"Abs", "[", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"a", ">", "0"}], ",", 
             RowBox[{"a", "-", "1"}], ",", "a"}], "]"}], "]"}]}], "-", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"ip", "-", "a"}], ">", "10"}], ",", "4", ",", "0"}], 
          "]"}], "-", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"jp", "+", "a"}], ">", "10"}], ",", "4", ",", "0"}], 
          "]"}], "+", 
         RowBox[{"\[Gamma]", " ", 
          RowBox[{"V", "\[LeftDoubleBracket]", 
           RowBox[{
            RowBox[{"ip", "+", "1"}], ",", 
            RowBox[{"jp", "+", "1"}]}], "\[RightDoubleBracket]"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"a", ",", 
          RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"ip", ",", "0", ",", "20"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"jp", ",", "0", ",", "20"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", "0", ",", "40"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Pi]old", "=", 
         RowBox[{"\[CapitalPi]", "\[LeftDoubleBracket]", 
          RowBox[{
           RowBox[{"i", "+", "1"}], ",", 
           RowBox[{"j", "+", "1"}]}], "\[RightDoubleBracket]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"A", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"a", ",", 
             RowBox[{"Total", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Joint", "[", 
                 RowBox[{"i", ",", "j", ",", "a"}], "]"}], 
                RowBox[{"weights", "\[LeftDoubleBracket]", 
                 RowBox[{"6", "+", "a"}], "\[RightDoubleBracket]"}]}], ",", 
               "3"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"a", ",", 
             RowBox[{"-", 
              RowBox[{"Min", "[", 
               RowBox[{"j", ",", "5"}], "]"}]}], ",", 
             RowBox[{"Min", "[", 
              RowBox[{"i", ",", "5"}], "]"}]}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\[CapitalPi]", "\[LeftDoubleBracket]", 
          RowBox[{
           RowBox[{"i", "+", "1"}], ",", 
           RowBox[{"j", "+", "1"}]}], "\[RightDoubleBracket]"}], "=", 
         RowBox[{"First", "@", 
          RowBox[{"First", "@", 
           RowBox[{
            RowBox[{"MaximalBy", "[", "Last", "]"}], "@", "A"}]}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"\[CapitalPi]", "\[LeftDoubleBracket]", 
            RowBox[{
             RowBox[{"i", "+", "1"}], ",", 
             RowBox[{"j", "+", "1"}]}], "\[RightDoubleBracket]"}], 
           "\[NotEqual]", "\[Pi]old"}], ",", 
          RowBox[{"stable", "=", "False"}]}], "]"}]}], "\[IndentingNewLine]", 
       ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "20"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "20"}], "}"}]}], "\[IndentingNewLine]", 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"stable", ",", "\[CapitalPi]"}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.796564597819805*^9, 3.796564603238359*^9}, {
   3.7965647341760406`*^9, 3.796564776738172*^9}, {3.7965648233936653`*^9, 
   3.796564857969907*^9}, {3.796565068170816*^9, 3.7965650687787857`*^9}, {
   3.796565112723021*^9, 3.796565128460554*^9}, {3.796565263693656*^9, 
   3.796565345063962*^9}, {3.796565415924*^9, 3.796565582601273*^9}, 
   3.796565619337111*^9, {3.796583955300211*^9, 3.796583963091762*^9}, 
   3.796584127326687*^9, 3.7966227565795527`*^9, {3.796626843015325*^9, 
   3.796626851492066*^9}, 3.796627140199255*^9, {3.796627226686652*^9, 
   3.796627245798835*^9}, {3.7966298413697968`*^9, 3.796629844987946*^9}, {
   3.796629925141061*^9, 3.796629929012426*^9}, 3.79663024334199*^9, {
   3.796636723463275*^9, 3.796636804480178*^9}, {3.79663684370444*^9, 
   3.796636851986617*^9}, {3.796639761736504*^9, 3.796639762661384*^9}, {
   3.7966428761462507`*^9, 3.796643020748665*^9}, {3.7966431515863943`*^9, 
   3.796643151834087*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"729f3629-ebfa-4e40-a516-447a0e292fc9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ImprovePolicy", "[", 
     RowBox[{
      RowBox[{"ConstantArray", "[", 
       RowBox[{"0.0", ",", 
        RowBox[{"{", 
         RowBox[{"21", ",", "21"}], "}"}]}], "]"}], ",", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"21", ",", "21"}], "}"}]}], "]"}]}], "]"}], "//", "Last"}], "//",
    "MatrixPlot"}], "//", "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.796554570047151*^9, 3.796554571467176*^9}, {
   3.796565364014597*^9, 3.7965653869984503`*^9}, 3.796584512080585*^9, {
   3.796585918665122*^9, 3.796585923756042*^9}, {3.796635958674807*^9, 
   3.796635967630765*^9}, {3.796639782586954*^9, 3.79663978268083*^9}, {
   3.796643069735791*^9, 3.7966430698371067`*^9}, {3.796643127935934*^9, 
   3.796643129221911*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"4056c0f8-1e81-4f1d-9ba6-1b8cb025e355"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.396739`", ",", 
   GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGAQhWIQGwI+2D+sElnn/vCWPQMKwBSfk2waKRj41l6I7XMA
q/QDe77DOheXSxbaVz29evzr3df2ho/jLPfHPrZPqfvv6CK/037hW9tzTY/e
2PcvDdfSvvjc/nvxxUK/k9ftHY33r7lz8q196JTXqxjzX9u/E3J+ez36Ccni
MHeO0uTRo/E+PGlC4TYa70ObJjfcRuN9aNDUDjdi43c03odW/A7XeB8q6YHW
/h0q8T5c08Ngi19qxTuu+B1p8T7Y4nGoxPtgDYfhFr+j8T4a77SI98FWno+W
8/jFh2v7bbC184dKvA/18nyg4neopIehnq8HOt6GKj1U8vVAh9Nwo0nNv6Pj
rsODHmn51zZV4E/Qo8f2C441rr1j8dI+57i38Zffr4eMOLXCYajE40CFs5hW
meYMzuv2s4PuP00TeGI//VvN//03Xg4ZcVz+Gqj4HWnxEuGcHSB4/oK91sTD
JXeZH9oLBxe3l1x8NWDigy1+h2s4U0t8x5e90kos5+0LKhX3PPe/Y789497j
xk2vSRYfqPJ5sMUvtcJzqIgDAECgV7w=
     "], {{0, 0}, {21, 21}}, {0, 1}],
    Frame->True,
    FrameLabel->{None, None},
    FrameTicks->{{{{20.5, 
         FormBox["1", TraditionalForm]}, {16.5, 
         FormBox["5", TraditionalForm]}, {11.5, 
         FormBox["10", TraditionalForm]}, {6.5, 
         FormBox["15", TraditionalForm]}, {0.5, 
         FormBox["21", TraditionalForm]}}, {{20.5, 
         FormBox["1", TraditionalForm]}, {16.5, 
         FormBox["5", TraditionalForm]}, {11.5, 
         FormBox["10", TraditionalForm]}, {6.5, 
         FormBox["15", TraditionalForm]}, {0.5, 
         FormBox["21", TraditionalForm]}}}, {{{0.5, 
         FormBox["1", TraditionalForm]}, {4.5, 
         FormBox["5", TraditionalForm]}, {9.5, 
         FormBox["10", TraditionalForm]}, {14.5, 
         FormBox["15", TraditionalForm]}, {20.5, 
         FormBox["21", TraditionalForm]}}, {{0.5, 
         FormBox["1", TraditionalForm]}, {4.5, 
         FormBox["5", TraditionalForm]}, {9.5, 
         FormBox["10", TraditionalForm]}, {14.5, 
         FormBox["15", TraditionalForm]}, {20.5, 
         FormBox["21", TraditionalForm]}}}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
      "RangePadding" -> Scaled[0.05]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.796643071559639*^9, {3.796643116616267*^9, 3.796643158657343*^9}, 
   3.796643404560747*^9, 3.796643883916196*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"3d02a3e4-5c09-4585-90ac-df11ab8f2b35"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"V", ",", "\[CapitalPi]"}], "}"}], "=", 
   RowBox[{"EstimatePolicy", "[", "0.001", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"GraphicsRow", "[", 
  RowBox[{"{", 
   RowBox[{"policyPlot", ",", "valuePlot"}], "}"}], "]"}]}], "Input",
 CellLabel->"In[19]:=",ExpressionUUID->"a78e54da-82e4-42eb-ace6-0734ab147019"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Policy evaluation \"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\" took \"\>", "\[InvisibleSpace]", "3.775376`", 
   "\[InvisibleSpace]", "\<\" sec.\"\>"}],
  SequenceForm["Policy evaluation ", 1, " took ", 3.775376, " sec."],
  Editable->False]], "Print",
 CellChangeTimes->{3.7966273824045258`*^9, 3.796643419177334*^9, 
  3.796643459585021*^9, 3.7966435762020483`*^9, 3.796643891726774*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"3d849fda-4c21-476b-93ef-58bfa1b5e32b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Policy improvement \"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\" took \"\>", "\[InvisibleSpace]", "0.405469`", 
   "\[InvisibleSpace]", "\<\" sec.\"\>"}],
  SequenceForm["Policy improvement ", 1, " took ", 0.405469, " sec."],
  Editable->False]], "Print",
 CellChangeTimes->{3.7966273824045258`*^9, 3.796643419177334*^9, 
  3.796643459585021*^9, 3.7966435762020483`*^9, 3.7966438921334753`*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"e5ae7ca0-f408-41b8-8867-df5201477b13"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Policy evaluation \"\>", "\[InvisibleSpace]", "2", 
   "\[InvisibleSpace]", "\<\" took \"\>", "\[InvisibleSpace]", "5.169797`", 
   "\[InvisibleSpace]", "\<\" sec.\"\>"}],
  SequenceForm["Policy evaluation ", 2, " took ", 5.169797, " sec."],
  Editable->False]], "Print",
 CellChangeTimes->{3.7966273824045258`*^9, 3.796643419177334*^9, 
  3.796643459585021*^9, 3.7966435762020483`*^9, 3.796643897305008*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"6e1a0601-51c9-4051-87a8-6764dede6587"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Policy improvement \"\>", "\[InvisibleSpace]", "2", 
   "\[InvisibleSpace]", "\<\" took \"\>", "\[InvisibleSpace]", "0.47758`", 
   "\[InvisibleSpace]", "\<\" sec.\"\>"}],
  SequenceForm["Policy improvement ", 2, " took ", 0.47758, " sec."],
  Editable->False]], "Print",
 CellChangeTimes->{3.7966273824045258`*^9, 3.796643419177334*^9, 
  3.796643459585021*^9, 3.7966435762020483`*^9, 3.796643897793301*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"67ecf0cb-6c02-4024-ad8f-82fb1890a776"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Policy evaluation \"\>", "\[InvisibleSpace]", "3", 
   "\[InvisibleSpace]", "\<\" took \"\>", "\[InvisibleSpace]", "4.507975`", 
   "\[InvisibleSpace]", "\<\" sec.\"\>"}],
  SequenceForm["Policy evaluation ", 3, " took ", 4.507975, " sec."],
  Editable->False]], "Print",
 CellChangeTimes->{3.7966273824045258`*^9, 3.796643419177334*^9, 
  3.796643459585021*^9, 3.7966435762020483`*^9, 3.796643902311964*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"6e658b99-3892-4282-b3f3-c5a028a0c1e9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Policy improvement \"\>", "\[InvisibleSpace]", "3", 
   "\[InvisibleSpace]", "\<\" took \"\>", "\[InvisibleSpace]", "0.490217`", 
   "\[InvisibleSpace]", "\<\" sec.\"\>"}],
  SequenceForm["Policy improvement ", 3, " took ", 0.490217, " sec."],
  Editable->False]], "Print",
 CellChangeTimes->{3.7966273824045258`*^9, 3.796643419177334*^9, 
  3.796643459585021*^9, 3.7966435762020483`*^9, 3.796643902802215*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"2c845b0d-cee3-48c9-92dd-bf7702ccaad5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Policy evaluation \"\>", "\[InvisibleSpace]", "4", 
   "\[InvisibleSpace]", "\<\" took \"\>", "\[InvisibleSpace]", "1.875282`", 
   "\[InvisibleSpace]", "\<\" sec.\"\>"}],
  SequenceForm["Policy evaluation ", 4, " took ", 1.875282, " sec."],
  Editable->False]], "Print",
 CellChangeTimes->{3.7966273824045258`*^9, 3.796643419177334*^9, 
  3.796643459585021*^9, 3.7966435762020483`*^9, 3.796643904678481*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"80a15bd1-d6ea-4765-95c7-777b32a7a22e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Policy improvement \"\>", "\[InvisibleSpace]", "4", 
   "\[InvisibleSpace]", "\<\" took \"\>", "\[InvisibleSpace]", "0.39718`", 
   "\[InvisibleSpace]", "\<\" sec.\"\>"}],
  SequenceForm["Policy improvement ", 4, " took ", 0.39718, " sec."],
  Editable->False]], "Print",
 CellChangeTimes->{3.7966273824045258`*^9, 3.796643419177334*^9, 
  3.796643459585021*^9, 3.7966435762020483`*^9, 3.796643905076624*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"a1d9b1aa-1494-4f23-bf67-ec0545bd8df2"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Policy evaluation \"\>", "\[InvisibleSpace]", "5", 
   "\[InvisibleSpace]", "\<\" took \"\>", "\[InvisibleSpace]", "0.585091`", 
   "\[InvisibleSpace]", "\<\" sec.\"\>"}],
  SequenceForm["Policy evaluation ", 5, " took ", 0.585091, " sec."],
  Editable->False]], "Print",
 CellChangeTimes->{3.7966273824045258`*^9, 3.796643419177334*^9, 
  3.796643459585021*^9, 3.7966435762020483`*^9, 3.796643905662712*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"beb6620f-53c9-4d10-8ea3-5e745c42303b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Policy improvement \"\>", "\[InvisibleSpace]", "5", 
   "\[InvisibleSpace]", "\<\" took \"\>", "\[InvisibleSpace]", "0.439552`", 
   "\[InvisibleSpace]", "\<\" sec.\"\>"}],
  SequenceForm["Policy improvement ", 5, " took ", 0.439552, " sec."],
  Editable->False]], "Print",
 CellChangeTimes->{3.7966273824045258`*^9, 3.796643419177334*^9, 
  3.796643459585021*^9, 3.7966435762020483`*^9, 3.796643906104792*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"5de1bc28-88f9-4d27-91f5-3986ccde4a27"]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     TemplateBox[{
       GraphicsBox[
        GraphicsComplexBox[CompressedData["
1:eJyNnD2K7FYYBZsXmA4nmGCCDvqJRjRCCP3GfmvwEgyOvXUvwTzMCXzs4pxJ
RE1XXNx79V19//3P3/74drvdfvxyu/18/vP316//ft5+/D/T/8nz5918YvfF
H+YTuy/+NJ/YffGX+cTuix/mE7svfppP7L54MJ/YffHLfGL3xaP5xO6L3+YT
uy+ezCd2XzybT+y+eDGf2H3xaj6x++LNfGL3xbv5xO6LD/OJ3Ref5hO7L77M
v+z3tktt55xT39zzZ+rbB/ji1LdP8MWpb1/gi1PfHuCLU9+e4IsH84ndF6e+
vcAXp76N4ItT397gi1PfJvDFqW8z+OLUtwV8cerbCr449W0DX5z6toMvTn07
wBenvp3gi713l/3erqvadRp1qe2cc+qbe/5MffsEX5z69gW+OPXtAb449e0J
vngwn9h9cerbC3xx6tsIvjj17Q2+OPVtAl+c+jaDL059W8AXp76t4ItT3zbw
xalvO/ji1LcDfHHq2wm+2Ht32e/tvrDdZ9K6ql2nUZfazjmnvrnnz9S3L/DF
qW8P8MWpb0/wxYP5xO6LU99e4ItT30bwxalvb/DFqW8T+OLUtxl8cerbAr44
9W0FX5z6toEvTn3bwRenvh3gi1PfTvDF3rvLfm/PtdpzMtoXtvtMWle16zTq
Uts559Q39/yZ+vYAX5z69gRfPJhP7L449e0Fvjj1bQRfnPr2Bl+c+jaBL059
m8EXp74t4ItT31bwxalvG/ji1LcdfHHq2wG+OPXtBF/svbvs9/Zcvj3np3Ot
9pyM9oXtPpPWVe06jbrUds459c09f6a+PcEXD+YTuy9OfXuBL059G8EXp769
wRenvk3gi1PfZvDFqW8L+OLUtxV8cerbBr449W0HX5z6doAvTn07wRd77y77
vX2v2L6npHP59pyfzrXaczLaF7b7TFpXtes06lLbOefUN/f8OZhP7L449e0F
vjj1bQRfnPr2Bl+c+jaBL059m8EXp74t4ItT31bwxalvG/ji1LcdfHHq2wG+
OPXtBF/svbvs93YuIr2HdF+c+taey7fn/HSu1Z6T0b6w3WfSuqpdp1GX2s45
0//J82fq2wt8cerbCL449e0Nvjj1bQJfnPo2gy9OfVvAF6e+reCLU9828MWp
bzv44tS3A3xx6tsJvth7d9nv7VzXEDjNRQyB03vFIXA6lx8Cp3OtIXDaFw6B
07pqCJy6lJ7UsdQ39/yZ+jaCL059e4MvTn2bwBenvs3gi1PfFvDFqW8r+OLU
tw18cerbDr449e0AX5z6doIv9t5d9ns7l9rOuTqnvrVzEe2cBb1XbN9T0rl8
e85P51rtORntC9t9Jq2r2nWac+obdWsM/yfPn6lvb/DFqW8T+OLUtxl8cerb
Ar449W0FX5z6toEvTn3bwRenvh3gi1PfTvDF3rvLfm/n6ts5fefUt3auq50T
o7mIds6C3iu27ynpXL4956dzrfacjPaF7T7TOXWr7VLbOefUN/f8mfo2gS9O
fZvBF6e+LeCLU99W8MWpbxv44tS3HXxx6tsBvjj17QRf7L277Pf2XhD1TZzm
6qlv7VxqmgNLc13tnBjNRbRzFvResX1PSefy7Tk/nWu152TOqW/tuqpdp1GX
2s45p76558/Utxl8cerbAr449W0FX5z6toEvTn3bwRenvh3gi1PfTvDF3rvL
fm/vNbb3JJ1T3+7g+5xpO6dPc6ntnCvNdbVzYjQX0c5Z0HvF9j0lncu35/zO
qW/tvrDdZ9K6ql2nUZfazjmnvrnnz9S3BXxx6tsKvjj1bQNfnPq2gy9OfTvA
F6e+neCLvXeX/d7ey27veTunvt3B9zn59p4RzdW3c/o0l9rOudJcVzsnRnMR
7ZwFvVds31M6p76151rtORntC9t9Jq2r2nUadantnHPqm3v+TH1bwRenvm3g
i1PfdvDFqW8H+OLUtxN8sffust/b70q036lwTn27g+/3fNp7knQvqL1nRHP1
7Zw+zaW2c64019XOidFcRDtn4Zz61p7Lt+f8dK7VnpPRvrDdZ9K6ql2nUZfa
zjmnvrnnz9S3DXxx6tsOvjj17QBfnPp2gi/23l32e/tdHOqbOH1Xgvp2B9/v
KVLfPsD3ez7Ut/ZeEPWtnatPc6xpLrWdc6W5rnZOzDn1rX2v2L6npHP59pyf
zrXaczLaF7b7TFpXtes06lLbOefUN/f8mfq2gy9OfTvAF6e+neCLvXeX/d5+
16v9Tphz6tsdfL9n3X6nwjn1rb3X2N6TpHtB7T0jmqtv5/RpLrWdc3VOfWvn
Ito5C3qv2L6npHP59pyfzrXaczLaF7b7TFpXtes06lLbOefUN/f8mfp2gC9O
fTvBF3vvLvu9/S5h+51D59S3O/j+nYj2OzvOqW/tvez2njfda2zvSdK9oPae
Ec3Vt3P6zqlv7VxXOydGcxHtnAW9V2zfU9K5fHvOT+da7TkZ7QvbfSatq9p1
GnWp7Zxz6pt7/kx9O8EXe+8u+739rmr7nVbn1Lc7+OLUtw/w/TsR7Xd26LsS
7Xcq6F52e8+b7jW29yTpXlB7z8g59a2dS23nXGmuq50To7mIds6C3iu27ynp
XL4956dzrfacjPaF7T6T1lXtOo261HbOOfXNPX967y773b8LTd+Jpr6J03dW
qW938P27XdS3D/D9uzfUt0/w/bsR1Df/rgR9Z4L65vey6Z429c3vNdI9R+qb
ON0Tor75XD3N2VPffC6V5lTTHFia82rnxGhOop2zoPeM7XtKOqdvz/npnKs9
J6N9YrvPpHVWu06jTrWdc/7v//8GKBQYvw==
         "], {{{}, {}, {
            EdgeForm[], 
            RGBColor[
            0.21800000000000003`, 0.36888888888888893`, 0.6055555555555556], 
            GraphicsGroupBox[{
              
              PolygonBox[{{1281, 1282, 1283, 1284}, {1441, 1442, 1443, 
               1444}, {1521, 1522, 1523, 1524}, {1445, 1446, 1447, 1448}, {
               1361, 1362, 1363, 1364}, {1525, 1526, 1527, 1528}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.3783333333333333, 0.43666666666666665`, 0.5966666666666667], 
            GraphicsGroupBox[{
              
              PolygonBox[{{1529, 1530, 1531, 1532}, {1205, 1206, 1207, 
               1208}, {961, 962, 963, 964}, {1041, 1042, 1043, 1044}, {1365, 
               1366, 1367, 1368}, {1449, 1450, 1451, 1452}, {1121, 1122, 1123,
                1124}, {1289, 1290, 1291, 1292}, {1125, 1126, 1127, 1128}, {
               1285, 1286, 1287, 1288}, {1369, 1370, 1371, 1372}, {1201, 1202,
                1203, 1204}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.5522222222222222, 0.49777777777777776`, 0.49444444444444446`], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwNz8s2gmEYBeB3ETOiyHESoesxL1azHPodim4KTSWUHCITcjvhGTzfYK+9
17u+fCXZrU1ERJYUi54cSyxT5YBDjpiZipglzRxjfvkjpiMakxEXXNLk3uaB
R7rc0uaODi86r7wx4FhWI+GEU9kZ59SZdydDlgVWdFZZY528zgabFHjngyGf
XNlcc0OLL5//ZsQPJVmZPfbZstlmhyI9N57o88w//kYmDw==
               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.7261111111111112, 0.5588888888888889, 0.39222222222222225`], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwNzlk2AgAUBuDbZAVeSabMUlZiB+JZxzyUscJ20BbCiyFEYjF9D999+M9/
7vlz5craVjIihkmz7xxwyBF3mYh7Hmhxmoo445wL1mVlNtjkWHZClRqzzDHP
AomhiCQp0nRkH3zyxa8xff74J2fDOBNMMsIoWcbYZodd9mjzyBPPXPpxRZ0G
Xb75oUeTa264ZdGGJZYpMOXHNHlmWNEpUmKVF51X3nhnACSzJxU=
               "]]}]}, {
            EdgeForm[], 
            RGBColor[0.9, 0.62, 0.29], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwt1GdUUGUYB/CbCO7VUrNSyy9lNhxAboZAO3HbPJ1TjnJVXyq1HLknIOCe
uffemvalvZzlBAQEXIAjLe13z/HD78N9zv993nHfexu/Nyh1YIUgCPpQkS0R
QbCVbWznH7Wb3OJf+kUGQX8+5CPe5wP60JcBDGQQg2nMYzxOE+LuCYJ4Ekik
E0kkk8ILvMhLvMwrvMprvM4VayiljHIe0fNRGtKIb2xiKctYzlljcsglj5k2
O4vZzGE6aaSTQTdjutODnrRyBtHEEMvztKYNbXlC5kma8hQz9Mgki2zmMo/5
LKCZzNM8w7NYUhCef8Td85/sYQpTmcYQe/qYT/g03J/MUpaxnLkazGM+C1ih
yUpWsZqrMte4zg0WyixiMUv4XuYHfuQnZqrNYjZzmE4a6WTwu8wf/MkhfuYX
fuU3HrDGB6lLPVaYcyWrWM0OtZ3sYjdb2Mo2tlMnKgju5T7upwY1qUVtqlCV
alQnkigqUZnO5kilC13pRnd60JP65niIBjzMQrVFLGYJ36od4CDfsYe97GM/
a+xxLetYH94PookhljgvMp4EErnizEopozw8T7U00slgBplkkc15mSKKKeEC
F7nEZUbIjGQUoxlmzuF8yVd8rTaGsYxjMlOYyjQ+k/mcLxjKeLUJTGQSF9y5
i1ziMq2IJoZY1sisZR3r2cNe9rGfHexkF7t5yxxv8w7vskFtI5vYHH5Peram
DW1pR3s60JFexvTmDd6kk1oSyaQQRzwJJPKcTHNa0JIRjGQUo8PzYQxjGcd/
1nCbO3c/wJN6nOI0ZzhLDrnkcVLuFKc5w3H+4m9OcJgjHOUY7WhPBzoyXo8J
TGRSuF615rSgJefU8imgkKve+TWuc4PzakUUU8I5Y/IpoDC8b2qllFFOZ3tK
pQtdw/OTSSKZlHA+PfMpoJBImSgqUZkqVKUa1cP/FRWIoCI1qEktaof/Wz1z
yCUvvM8UUUxJeN/NkUkW2fwP2dbdKw==
               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.9277777777777778, 0.6894444444444444, 0.37611111111111106`], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwV1nO41mccB+C3OvFkL7ctG8tadi27zslYNWTOy7ZtG6uGzClr2TZ3/67r
3H+8n/f5Pn7e62SM7Fana9RQKLSQMHZHD4X2sJd9xIsSCsUnAQmJTRzCicsK
NStZxWqiy2IQk1h0lHWiM12oYrCqVKM6a2RrWcd6YhOHcOISRR9RiUYYb2Xv
eB8KvvQXzfdEI4z6+mxAQxrxi2Y72MkuSsYIhUpRmjJskW1lG9vZwEY2sZka
+qhJLWpjS0LKQjGJRSISk4SkxCM+CUgY7IeaGMQkFvGITwISEps4hBOXxtbU
hKY0I5ssOznISSYyk4Ws5CI3ecjLWzXveE/I5yhEJRph1Jc3oCGNSKZZclKQ
kra0oz0diCCS1rShOS1oSSsa04SmNAvW6wxiEJNYfGaMOtSlHolITBKSBvdJ
mziEEzdob451qEs9XvKK17xhCUtZxnIWsJBFLOYLvuQrvg72g3e8Dy65/mtQ
k1rUDsajDnWpxwbtNrKJzcH9ZC3rWM/nBA+mG92Zw1zmMZ+2tKM9HehIJzrT
hQEMZBCDg/OmCU1pRnNa0JJWVDGnqlSjOn1kfelHf3rQk170DvbLnr7iNW9o
rKYJTWkWvA8a0JBG7FdzgIMc4ld+43f+YDd72Mu+4P6qiU8CEnJYdoSjHOMp
z3jOi+D9sYOd7CKRmsQkISnJSE4KUvIBqUhNGprTgpa0Yos+trKN7cF5yLrS
je5MYSrTmE5HOtGZLhT1eItRnBK0lbWjPR2IIJLWtAnGs4db2cZ2NrCRTWwm
gkha04abfiBucZs7XOUa17nBFD+yU5nGdP6TXeIyV1hizKUsY3mwP+aYnBSk
5Jw257nARf7lOCc4yV3ucZ8HzDDGTGYxm0yyzGQhK+dk57nAxWA+XOIyV7jK
Na5zg6fm9IznvAjOy5xSkZo03JXd4z4PeMkrXvOGbMbMTg5ykktNbvKQl3zk
pwAFOazNEY5yLFgPM5nF7GD95nScE5xkimwq05jOS9krXvOG/bIDHOQQE2QT
mcRkRjCSUYxmDGMZx3iGMJRhDCebOWYnBzlJSzrSk4FMZCYLWcnIh3zEx0ww
h4lMYjKfyApRmCL8KfuLv/mHU5zmDGdZ4Q2sZBWruWlOt7jNHR7yiMc8YQ5z
mcd8auijJrWoTRWqUo3qVKAilajMp5SlHOUpSSlKU4Ye9KQXvVngzBeyiMWk
JR3pycAMZjKL2cF794Za0JJWrGEt61hPW9rRng7MUTOXecxngWwhi1jMKWs8
zRnOskK2klWsZglLWcZy7mpzj/s8oI819KUf/RnBSEYxOtgPbcpSjvJUoSrV
qE5JSlGaMuRSk5s85OWp7BnPeUFRilGcEsH5UJNa1KYCFalEZfLpIz8FKBjc
HwpRmCK81eYd74N/7nwew1jGMZ4hDGUYwxnAQAYxmB/4kZ/4mYf2+BGPeRL8
nsqKUZwSfMO3fMf3RLiTkbSmDf8Dp2BEeg==
               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.9555555555555556, 0.758888888888889, 0.4622222222222222], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwVzklWwkAUBdDS4wZsIKQhCeqKWIIzFRK67dnRo25ABXEp3gzu5J336lfv
ru5XpyGEiDNaJyG0iegwZsKUGT3la264ZSirqBnxxDMvvHKuc8ElV6xkazZs
Wbm5ZsOWN9mcBUu6NjkFJV2dnIKSe50HHhkQ6ySkZIx1JkyZNe8zZ8GSnc07
H3zSsmkT0SGWJaRkfPHND3sO/HLkr/kvOQUlQzcqakbEJKRk/ANZnyhe
               
               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.9833333333333333, 0.8283333333333333, 0.5483333333333332], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwVz0dWAlEQBdCvxz0wBroBA+paWAIL0BE0mcaI2W0ZmtQILMfL4E7q1Duv
qti8blwdhhAKHNGlR58B9wchPPDIlCeeeeGVISPGpNQ554JLJtxwyx1/bNiy
o0WbhA5devQZcMwJp5yxdNOKnDVLsxU5azJmzFlQtFOiTERMhSo1howYk/LF
Nz/80qJNQoeMGXMWvOl454PPfR8lykTEVKhS2/8vs2HLjn+/GTCe
               "]]}]}, {
            EdgeForm[], 
            RGBColor[1., 0.9055555555555554, 0.6666666666666666], 
            GraphicsGroupBox[{
              
              PolygonBox[{{41, 42, 43, 44}, {129, 130, 131, 132}, {229, 230, 
               231, 232}, {145, 146, 147, 148}, {137, 138, 139, 140}, {141, 
               142, 143, 144}, {53, 54, 55, 56}, {225, 226, 227, 228}, {221, 
               222, 223, 224}, {217, 218, 219, 220}, {49, 50, 51, 52}, {305, 
               306, 307, 308}, {133, 134, 135, 136}, {45, 46, 47, 48}, {313, 
               314, 315, 316}, {317, 318, 319, 320}, {309, 310, 311, 312}, {
               233, 234, 235, 236}}]}]}, {
            EdgeForm[], 
            RGBColor[1., 0.95, 0.75], 
            GraphicsGroupBox[{
              
              PolygonBox[{{237, 238, 239, 240}, {157, 158, 159, 160}, {73, 74,
                75, 76}, {149, 150, 151, 152}, {69, 70, 71, 72}, {153, 154, 
               155, 156}, {77, 78, 79, 80}, {61, 62, 63, 64}, {65, 66, 67, 
               68}, {57, 58, 59, 60}}]}]}}}], {
        DisplayFunction -> Identity, AspectRatio -> 1, 
         AxesOrigin -> {Automatic, Automatic}, DisplayFunction :> Identity, 
         Frame -> True, FrameLabel -> {{
            FormBox["\"Cars at 1st location\"", TraditionalForm], None}, {
            FormBox["\"Cars at 2nd location\"", TraditionalForm], None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "GridLinesInFront" -> True}, PlotRange -> {{1., 21.}, {1., 21.}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
           FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               GraphicsBox[{
                 
                 RasterBox[{{{0.21800000000000003`, 0.36888888888888893`, 
                  0.6055555555555556}}, {{0.3783333333333333, 
                  0.43666666666666665`, 0.5966666666666667}}, {{
                  0.5522222222222222, 0.49777777777777776`, 
                  0.49444444444444446`}}, {{0.7261111111111112, 
                  0.5588888888888889, 0.39222222222222225`}}, {{0.9, 0.62, 
                  0.29}}, {{0.9277777777777778, 0.6894444444444444, 
                  0.37611111111111106`}}, {{0.9555555555555556, 
                  0.758888888888889, 0.4622222222222222}}, {{
                  0.9833333333333333, 0.8283333333333333, 
                  0.5483333333333332}}, {{1., 0.9055555555555554, 
                  0.6666666666666666}}}, {{
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}}], {Antialiasing -> False, 
                  AbsoluteThickness[0.1], 
                  Directive[
                   Opacity[0.3], 
                   GrayLevel[0]], 
                  LineBox[
                   NCache[{{
                    Rational[15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[-225, 2]}}, {{
                    7.5, -112.5}, {-7.5, -112.5}, {-7.5, 112.5}, {7.5, 
                    112.5}, {7.5, -112.5}}]]}, {
                  CapForm[None], {{
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], -112.5}, {
                    Rational[15, 2], -112.5}}, {{-7.5, -112.5}, {
                    7.5, -112.5}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], -87.5}, {
                    Rational[15, 2], -87.5}}, {{-7.5, -87.5}, {
                    7.5, -87.5}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], -62.5}, {
                    Rational[15, 2], -62.5}}, {{-7.5, -62.5}, {
                    7.5, -62.5}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], -37.5}, {
                    Rational[15, 2], -37.5}}, {{-7.5, -37.5}, {
                    7.5, -37.5}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], -12.5}, {
                    Rational[15, 2], -12.5}}, {{-7.5, -12.5}, {
                    7.5, -12.5}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], 12.5}, {
                    Rational[15, 2], 12.5}}, {{-7.5, 12.5}, {7.5, 12.5}}]]}, {
                   
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], 37.5}, {
                    Rational[15, 2], 37.5}}, {{-7.5, 37.5}, {7.5, 37.5}}]]}, {
                   
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], 62.5}, {
                    Rational[15, 2], 62.5}}, {{-7.5, 62.5}, {7.5, 62.5}}]]}, {
                   
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], 87.5}, {
                    Rational[15, 2], 87.5}}, {{-7.5, 87.5}, {7.5, 87.5}}]]}, {
                   
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], 112.5}, {
                    Rational[15, 2], 112.5}}, {{-7.5, 112.5}, {7.5, 
                    112.5}}]]}}}, 
                 StyleBox[{Antialiasing -> False, 
                   StyleBox[
                    LineBox[{{7.5, -112.5}, {7.5, 112.5}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]]}, StripOnInput -> False], 
                   StyleBox[
                    StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -87.5}, 
                    Offset[{4., 0}, {7.5, -87.5}]}, {{7.5, -62.5}, 
                    Offset[{4., 0}, {7.5, -62.5}]}, {{7.5, -37.5}, 
                    Offset[{4., 0}, {7.5, -37.5}]}, {{7.5, -12.5}, 
                    Offset[{4., 0}, {7.5, -12.5}]}, {{7.5, 12.5}, 
                    Offset[{4., 0}, {7.5, 12.5}]}, {{7.5, 37.5}, 
                    Offset[{4., 0}, {7.5, 37.5}]}, {{7.5, 62.5}, 
                    Offset[{4., 0}, {7.5, 62.5}]}, {{7.5, 87.5}, 
                    Offset[{4., 0}, {7.5, 87.5}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]]}, StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "3"}], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -87.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "2"}], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -62.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "1"}], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -37.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -12.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 12.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 37.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 62.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 87.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False]}, {}}, {{
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False], {"GraphicsLabel"}, 
                    StripOnInput -> False]}, {"GraphicsTicks"}, StripOnInput -> 
                    False], {{
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]]}}, StripOnInput -> False]}, {
                  "GraphicsAxes"}, StripOnInput -> False]}, PlotRangePadding -> 
                Scaled[0.02], PlotRange -> All, Frame -> True, 
                FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
                Opacity[0], FrameTicksStyle -> Opacity[0], 
                ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
               Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]}, "BarLegend", DisplayFunction -> (#& ),
           InterpretationFunction :> (RowBox[{"BarLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{
                    RowBox[{"Blend", "[", 
                    RowBox[{"\"M10DefaultDensityGradient\"", ",", "#1"}], 
                    "]"}], "&"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "4.`"}], ",", "5.`"}], "}"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "5"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "4"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "3"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"2", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"3", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"4", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"5", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}]}], "}"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkerSize", "\[Rule]", "225"}], ",", 
               RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
               RowBox[{"ScalingFunctions", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
               RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
               RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], 
             "]"}]& )], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {221.45, -190.05}, {
     Center, Center}, {417., 362.}], InsetBox[
     Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJxlnXlczN/3x9NCkkSLopJpmmqaplkqH8Sc7PsSkp2UQiV7Qkb2tSR7WSt7
KPuShCRbZN+KLImIQir6zffxc848Hsf7n3m8n8bt/X695t73veeee9+tA6b4
Bunq6OhcMtDR0dP597jUprdx3JMo+P+zchXy1gkPo03mzP3LdfBT5/z3b43D
LOf9PTckfiHxh3v7I8hNiQ+ZqfgEPvP/npsTjxuy0KDzDeRWxJduP3+3tk/0
33Mb4rl1vfVlN5DbE28ZUZdY12XB33MB8QkZAbtnn0cuJN73VIOIts3Vf89F
xB0SDavj+yB3Jr7+97cI74XIxcRbjbz2bGk6cgnxF59tUu2KkEuJe9Vcv3Wm
4cK/5zLimXrLdrdUIJcTH7HjoKP1UOQK4l+ig5ffnI1cSXxzVPdklwTkHsTN
tq9O6n54IZ3//1Guspm1fEpT8hd9L1dtnp17aHxz9FGH/r3917PeWce57+Wq
sL5fXizviz6aEs+v/0Z3cSH3vVxldcjr0cyJ6KMVcbeiuTotPnLfy1VK9cG6
xED00Z54lZlg+bbn3PdyVcCnSdaOTqi/kHhU+tu5OqO47+Wq7NAe40+v476X
q3qFPKqfks19L1c9eFn9bcEX7nu5akph3RGDlqizlPhutadj187c93LV3FQv
tUUw971c1WKec8+Apdz3clX/ss2jr+/hvperXNpkWvllct/LVRu3jGrS6gH3
XQeqys43DSZ/qb7D3ujn7S8f577rQF0jXasM8pfqO/z37F5V4Dvuuw5k/Oo9
yCMSfaT6DnvWjkt/XQ/9ovoOnWff+ShZhJzqO1z2T2vZqZb7rgPGYRcTtnqh
/gLigcNqBjUL477rQN8rJTNCd/1T32HdBVW7xLv/1He4ffjYzoi6f+o7yOp1
PdvYFfWk+g7VeyQN7X257zqw+fvIGytm/FPfYXbYsTrXjf/Ud6gre+e2J+Of
+g7fC2a/s7j1T32HuTd+dosv/qe+w395SW7KKu67IXj91OkcdJT7bggnogos
zpC/6LshjGqV8ifkHffdEBpPs1srI39Nia+IfGKe2AD9Mifex7bw8fE47rsh
zDpTsXSbIepsQ3zOj7yvB7sgtycuiBBM2zSP+24IUcXuBzyOct8N4eKq7XnH
CrnvhrBlT/yQbBPUx5l4dc3gHoq2yMXEV74Pqn0xmvtuCJM6lm42Wcx9N4TK
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
v2jDeblq9uPUtgbnkFvT9x/OGrt9RWg04+UqaW73rKiGOI9gR9//diolv7kh
5+Uqy7x3nRN3/uXq1vT99a8b7tqynfNyVe508y5frP6Oa9TafMsFHpeHXhjG
ebkq2VWyuoLiHi70/SeSUamvtnBeropz+DCv2RMsx5W+L125LOP0fc7LVT12
ZILQ9G89Am0eZop4gN6I9pyXq4pbTk8vCf/L1dr8TMfYho+mBXNerjp+vKjA
YsNfnqXN20yb239UszWcl6vS33iUpp/Cek2/H/j96q2i7uk/vxNInD7J0Hjr
P78HME8/PC9rEPdXB/a4X2szbdc//sKpPr3vjmqB+pCP0G+0JHDGmH/8gp1t
nw9q+uIfX2DB0LluKgvUgfSHHuemzRzR4x+dYcutjjdWJP2jJ1SPdV85Musf
3WDrrUfSihdcH0MoLG5g+nY66oD6GMKJ3HE5fdxRBxPipSfFykvFXB9DOLV8
/64dlA9sR7xfxo9ju8ZyfQwhealkZN89XB9DONa2s+9oa7xOF+LZU0cJDPtw
fQwh3fn61Oworo8hbCuYaDz4GtfHEKBH7/Bzb7k+hvDfm9OPEyk/AfUxhbF/
FhW81MP7RX1M4WR59KDyTK6PKRy0dg4ICMffiTXxBpme9Vf4c31M4dLPwJzF
O7k+ptC056382ldcH1NovSrUYU1/ro8pjDq4x3XBAq6PKVwpeN7Vbj/XxxSC
tjUzCyvj+pjCgOjYXbE4j5+lzadK9ts9q6+I62MOelcjr3VewfUxh+Tj+h+v
d0YdTIgvVx45+N83ro85mM95okxYz/UxB6smurNkT7k+5vC74OykJjh/qtbm
KfXcM9z0RwzXxxyqnnXr3OQw10dz/T9zrF0LuD7m8H16V7ux2B9Qa/OOPLqt
mbVcxvUxh6Fe6+bd7MX1sYJbQSP7++nj/aI+VvD1aOIN20yujxXMMb68fKMn
6mBNvJfu23Vtb3J9rCD7wNNfbTAPk/Sxghf+lXOd+nB9rCDL6vWH7Ue5PlZQ
+aJb8bdHXB8rqD5w/sqGaq6P5nqGmd+ObsP1sYLdP3zNDuN4J0ubn7Nj3oej
HalfVEl5NQPmPX+2KYrrYwN9xj1fO5faExPiz9zrlTiHcX1soMD8dlyFDt6X
HfHQwM4hdR25PjYQFna11dlIro8N7H/nmuX3mOtjA2OjA5q2/M31sQGPr0HP
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
CTI=
        "], {{
          {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
            GrayLevel[1], 3], 
           StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFmgf41tP7x5/nc86JSBRpIEW2SFSoSGWVEEKiNJCRbAlJCWWv7JmEMpKS
XfbIlj1+9t57/19v79v1v67Odb+e0+d5vp/n85xzj/d92g4bvcuhVa1W+1+q
1fhXa86oMzR3EROn8eJSXlwInwpfAk+FT4cvg8+BT4QvgE+HD4fPhCfDR8Bn
wWfDJ8DnwxfAE+GL4XPhcfCF8PnwBHgq/DSjG3//TV4/B/eC34Wfh3vrXuFT
uX4UdgpzDZhbmbES4wzmj2H+HObPg0+GL4LnM1rx/w/yehHcHX5L98o1x2LP
Ze4S+Ez4Cvga+HL4evh2fde6X09n/jrsTczfpmcT/3cp82dhr2T+Mvg8+Cr4
Bn123a/r8XxXZMzj/1pg72XyLrglfD88l3E14xrGnfqMeH0dn3kl9gaunZb8
/zPga+ErdF9wiWeg73k3c9N0/xpccy32Rq65HD5fnwk/w9iCa9/m9Uvw9vAH
8CPwhvDL8MPwBvBL8CTeewh2MnMPMdoz/yKvH4c3gV+Fn4C7wK/Bj8Id4cXw
nrx3FezezA2EW8P7wHvAreBB8FbY9RjrM4Ywvw52OPN7wavCg+Hd4Gb6PHhX
eAV4D/gxxsb8rVd4vTvzLbF7MTcAbgEPhF9kbMc17/N6Bey6jHUYSzHaMFbV
c+OaVbALueYpeDP4DXg57JqMNfQ3mN8R+zHzr8G7wJ/Cr+ue4M/gxXA/+CN4
2XhfO60/5tfCPsP8k/Cm8OvwvZX//qPwPXBr+GF4aWzbuL/7mF8N+zjz98Or
w0/CCyt/jxfgBfDa8HPwA5X/5tNwz3iu7bW+eSYXaI3x/1fDl2itVH5vU65/
tu77bAIvis9fHn6+7memZ9es5jXQPNawvp++53/PSVbvfy32svba7/Cx8N/w
N/B+8A/wV/BQ+Dv4a3gY/D18HHY4Y4T+j/kDsD8x/xk8CP4qvmNj+Cl4bFyr
z/2W+f2xPzL/Jbyv5uK5LQM/EftOPu++utdGx1g/L8Abxbp9Fe4avuhluHOs
7edi/WtfPAuvH3thcax//aZtYm3pN9Tv2xD7SN2/p+YahR+Qr72n7r2rPfyf
P5NdItak7IJYG0vq2dft0zL8QOy1lWPdap3osx+Db5Z/lQ9kfMH8Psx/Ax+N
HVLzc/lE+xD7BfMfw7vDn8OfwnvCX8LvwTvEen5DexV+B34T7hn++X9wX/hD
+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
6ybbzZlfR3mc1iTcLvl9m8AbJ9cCveDV4MW6F3h1+BWtAbhDcn3Ro/J9qY7Q
e7pHDFXM1d9RHfFz/P1f43Xn5LltuKYL/FvN8fpj7J81+9ZNmf8dux3zXVPt
X9FO8V3P5of4e5sw/2PNdWgn+Cd4a3jL5Nx+p8q1asOI71vBS0VM75lcj+wC
L2BNT+H1vtgtsCVygM0jr1BO0i25Ztmh8nP6tw6K5/11vN6Qa77Abhm5hPQ0
aV99k+s7aWvbJddu0s2kuXWIXGj9iI3/aW9bRd4wNOKOYpnyHGlu0tmUn0iL
k3a3Y3KOKl1O9e/Jco2V69wJWrKKjVzzAryR9j72ZcZLNecw7SKPGhaxUjFO
+p7uQ7Vq/+RcV/mYatgekdsol9s6YutGEc8Vo3tFXqQcqX3y79pd3xH+CO4G
rwd/CHetfF+f1Hxdb+aXjZxK9/dZzbXrM4wPYh09k6wbd+f32jq55h1QWZ/s
FPmnctE+kRvsF3mCcowRkW8of+gQ96vvIJ1zy8jflH8qD1curdxTOajyadXs
yvGU904qzkEbYR9K1qykXT2crH92LY4RineKU4q/4+N3+SviVz380tTwe6rz
5oYvbRH+Sn5J/kfxUTFOcVsxULFQ9Zzq2cbhuxS/FJs6x77WHtceeSf8T6fw
RdrvulYxTzG4dfhwxSnVoDPDT8pXK/YpjqvuVF3TpvI6Xxx+QPWrcstW4Z9n
hz9Xf0GavPTMs5LzWGny0uelh0u3l+YvrV46v3oQ0sekhUobvxGeWVnDnwHf
XFm/l44/ve7ehzR56fCKbcpLpI+pJlYeu0rlWDw9/H/j8OGKC6pZLwt/rlpZ
9bvikera2yMuqP6+PmJBk4hZil+6R2l5N9Xty96LNfl9+Gz5J/nqx2qOU/Lz
j8rvVl6/WsfP1uzDH8GuU7lulqaxeuxT5Q/Ko1Rz31NzLqG98xzcIfbU87GX
tW+0f16s2Z8/hW0fcedJeP3Kv79izJPh/5+uObb+F2+eCH8gvyA9RXtT97hh
5e+2KO77h/h++jzFBV27ZuU9+lJ8xq/xPPRdFe8UmzqFn/8g9vvX4Tf1fx0j
lnWOuKOYqBgnf/pqXLdp+Ar5DcUXvV8xdLPwJ/It/8U/xUPFqQX6HSKuLaw5
f1BM1D12jPilWKZ493q8T7/Hn+GH9Fzl//XdFEO1ZtXLmV9370l2buWezl3w
nfCNyb2kjuz9KjsP2ba4Rlb9qxq/nr0OtR4bZK8rra9G2bnK9lz/V3IutE1x
ja++mPpo4+ExdffIxiXrHmfDpyVrVurlqR+nvp76dycn6yHnyQ8la1BnwGPh
Q+vu2S2dvUe0V05kHFl3r1D1vvqG6iFKc1B/UL3FJbJzue24t1+Sc+Ct4abZ
/kp+q3m2H5A/+D459+4l7Srbz8jfqM5Vz0K9i8eTtXpp9m2z17/2wXfJdUTP
4rpVPkt+7ufkPLw3858mx7gt4U+SY98WxVrf+Jr97hfhP+VHv0yuF3rIP4fv
lQ/+NnydfN5XyXXEVlxzSrIGpd6odAD1OtV3U76gWl69V/X+7oBnV+4PzoHv
qOyf1DvUa/Vh1atVD1dxSfWttCfVsLITKuebQ+P/1BuSj5lVue84Nz5L/dDZ
2Nsr9x/n6fMr6/a3wLdW1upnwbdU1u9nhs9Sj+lW7G2VdaFhdWtH6puqt/pf
H1VW16k2H4w9ubJONRw+pbIuJX1KOqa0DmllJ1TOC6R36LXqbmllJzE/Jlm7
O71yHT0QHldZM9kNPr5yzb5n3RqLcp894rOeSO7NdSvWnXatW1NSfJY2pns5
lvkD69bEpDtJH5NWJt1J9zipsm6wT936lWK+NAjpCtLN9BnSphTjpVn1j5xA
/6/vMKG4b7oEdmFxPBuKPb5YY/o5tE1pnk1C85Su8g62RXaN8540hOy+fNPQ
DFUvSVeUTq78Sfr/wGxdrkFo+8oLpfNLq5H+LH1mYvYZAOmrE0I7Wim0U2lK
0kKXya6/pD8fyxhbt+a8HHxTzZr58tm1j7TZI0J3lRZ6ZHbvXhrp6dm9Iemx
47L7+C1Dg5VmKz12t+weh3oQg7M1Q2mhKbsuk/45MjRbaaovJ8drxe1Xk/ss
92bXueqL3Qe/mNwLuyu7hlX/a352Xaz+ozTtO5P7qjNC+1LvU5rYB8l6gWrn
15M1EdXOfyfXbtK73kvuSz4Mv5OsO6imVh9hWs39hQOz++zShKXlStuXrrtk
du2pXsOwbL1WOvDwbJ1WOvNbyb3UB7Nr9mE16/P6W+pZq9+helz9sjvhu5N7
x9Kg1BORnqY+yGfJtaT6Dptka4/qy+yc3Zf/B9s3O4dXLr9Ndl2g+qB/dr9J
zczts7VT9WvUb1Luq/pDvSTl+cr3d8/WZqX/bwo3qbv31Cdba/0Tu1e2hqy9
sG+25two9HDtSeXOzbJjqdb/kGx9WL0G9U3Uq1LfZ8vs8wDqoWyWrQOr5zUo
W0NeMrR35fPK6wdka7aJ+X7wmnX3udSHkvauvpL6OOo3qaezbrb2q17Vhtka
r/pc6nmp16M+V7tszVl9MfW21NP5ItaPzg+oZ6S+j2p89YB2zNah1YP7OFnv
US/p62RNSX2fMdlnbNR3WD07L1Ov7Q+uubBmDVZ9IulJ6hn9kKxBqbfVO/ts
hvpQ6sGpv6a+m/pf0qWk2aq/plxMvbaW2bmbfEur7Pzuff3+2fmbenC/JmtZ
6jvcB69Xs+YpfbhNzbrxbclnHqbH8181nrn8lfykcoH9s331Hnyv/bL98O7w
wdn+fGDxfpHfVpwcX3zmQ7+X1lWrWG8HZfv5PWO/yN/KZ+8ba3ifiO/TI9Yr
X1JOrh7TSdnxVzmOYrfqFPWzlGvNjpxKudOsiOnyY4qnyqFGZ/v/vfi7h2XH
tUHFOcY1EfcnZ+daZ8beaRb7QutHua+0hPWzNZl+vLdHttahWn+rbN1gV9Wk
2ZqD9mDXbA1BtXu3XPtXx9iFay7LzgdUx1ydXQepNjo3O9dSPTQlO99TrNEe
bBx7/JTs3Gxy7HdpGrtxTadsLWVneKNsPWSnYv+gmnoA3CFbM9kRXi9bj9qh
eL8or1Z+vVa2jtG32Ocop1dNr/3yWeTFa2brS324pnO2VtMfnpSdQ0pLGZ+d
Zw4pzrsujxxMOqd0SOmf0h57wjOzNcleNeuQ6kFIh1e/QzH08cgnlVuqtlL/
Ufmkahn1RpWXzotceqXsOkh9UtXm6u/fCq+YXYupZ6qcU+coZmfX7NJXVb9L
/1QtL21TOoM0WOmlM5LPi6kvo5ykX+SryvnbRx57c/KZL/VHHkw+u6U+gnRa
5bfSZtVD0fkS9U0UB3vX3GfRmtFZrN+y4/JDkUs3ya5l1CN+MvkclPosynWn
Rn6rnoX6MupTqBejHtCc8A9zwieMzc6LlMsflZ377a0cJjt3GgwfnZ3j7VNc
m0iLUB9Zuf3CmnvT6neor6QeyiPJ583U+9AZgEWR26uWUQ6vmkL1hWpY9bLb
ZNew6hErz1cNq56yev3qoahf/2zyWTj1jF6Ae9TcS1Ic17k4nQfQGQbVvG1j
37WKPXhRdu0j7eGm4p6E6qkpxWcfV8feWqwDav1rr+n8VTt4erFmrVrm9mId
aufwdSPDR80rzjXl967MPvun/t0NxTqy6rXbirVF7bv5xbWWfN2I4nNLWm93
FefE8qWzQ8PS3jkn+0yg7vPu4ppNflV98AvDJ5xZfJ5yreLvqzNjaxf/vjr/
2VzzxWcBpf/PLNYutZfVc1Qtof7j3GJdTz7hlmLNVD7t0uxzjOsVn4W4NJ7n
rGJtdIdYM+NiLe1ffA5JeZr6+Ko31K8/q/gsqe7t7OJzq/rMU4v72bpP+Uad
G9QZg07h3+Rn9is+76W8aFqx1q/68fTis62rYK/NPlOp3mi38NXysRcUn5tU
n2J48Rky7f3zis+VdtB9FZ+nVJ0+rPjcmPzPhcXnF9X7mFx8hrVN+LGJEXcO
KD5rpVz0quzznBvqtys+p7t+cd92Wvhz9XyvCj9/Vvb5U515OLf43JXee31x
r6J3+GTFlO4RF3TGVfd8R7F2rNgxsvjslHLmDhFrFJsUU3Q2VfdwVMQyxb4z
is8Ha50fVHw+THmp+s6q/XTW5ZLsc7XqQSsO6vytvvulxedT1bdaM2KZ/P+B
xWenlKufWNwXV354ZfH5S2mzNxb3wKQVKO6PitxAcVPnQlU3nVDcg5ffO634
bGsr7Jxi3VzxdErER8Xle4u1D8XuccVnCJQD31+sd8h33VOsZSjWX1J8zlg9
NeUPOtuszz+k+Iya8v+rYfV1pCFcUXyuVPXmjOIelTScm4v7EIp31xX3tKRL
nFR8/lU59gPFeoF86cXF51bV17uquL8lXeLBYr1GMfHy4vO+0oovyD5fpzMw
U4vPpKqvd2H2eTzt9/uKNSD57UmRP0yOfEDnw7Uv7izuBygfuKz4rLZ6fGdy
zTl1n40ZHfmD8rpri/tn0jquKe6fSRv5Pxtzp5Y=
               "]], 
              Polygon3DBox[CompressedData["
1:eJw1mgn8V8P3xu+dO5OlsiSVlDYikUqRLJEtoSwVQhtl+ZE9JJIk2ZWULNkT
lWSJUMm+7yFbqez7li3+z7tn/r1e59U5d+be7/3MnXPOc54zzQadcsjQUOhf
VRRR/70v48uyKA6W/oqutZX9hvSVkm1kb5SK4iyNnyk5TTe8q/GV0g/Q+PMa
Hya7u+z+ktNln6M5x0m/SPoluvdN6Vtp7kaSpzR3veTxIZJjNfczXftZ+iCN
f6x72st+V/rXkjay62r+sNLvcLrmj5CMlH6xxuZr7GTN7yy7p+QEXXuW+6W3
0/0zZA/WnC9kHyT7ZdkbyD5J9v8kx+tZjWRfIn0M7yz7cslV0q/U3Kc01kBy
Yem/yd8+XvZ30o/U8xZrzqf6ez/IPpq1lD1V9gTZ90hulF1P80dIP09yru5f
P/lvnyg5TvYQ2V9L76P739D842R/I/sw2W/Jbix7rOzJeu6l0jeRjCr9Tufr
/oayL5I+UeNjpdeXnC97fPD6b5r82y6WjNL8Y2WvkL6/nv+cnn+b5k2SPUNy
s+zbZU+WPlNyi+wTNP976Udp/nuyb9H4eNnTJFNkH6PxZdL34fvKfkvjn8ne
V/Yi2XU0fprsUyUn6+9vLHs4ayEZJvsSyTjpl2nuwuR35F3Hyl4g+yM971vZ
h+t5b+vahsnPOkVykuaeKPtH6QM0/qHGb9X862RPl9wk+w7ZN0ifJZkq+yzZ
+0nvx36WPUb2MdJ7sMdkb6bnXVb6nXi3NyST9ewbJP9V/mZ8u3Okz+VdZJ/B
t5A9T/YDet4D/G3Jbbo2U/Z90q/P6ztH9hx0ye2yH5L9CHMld8p+W8+7WX/r
FkmU/k60PlWSpL8nuUP6nZJ1pT9R2o83kcwNXlPWdpSe9WSyz+K7F8h+XPY2
yX/7Ls29Wnrr5He9U/ZV0reVTOXbs3917/3Be2FyXr/HdK2v/tYRkndkzwre
O5Pyfumm+2/TWD1dv0f6Ys2/vfA7ryP90ehvyR5nr58l+xz2s+59QvbWkhvZ
WzxTY/vyfsQPPW8avqNrQzU2XPMfJb5Ef5spxDTpE6L941qNX6Hxe3Xf3dh5
v+6ja5M0dQOuS3+B/SZ7DO+k8edljy587WvZuxMfpNfQ/FulXxftb+M1dqXs
q6P97WrZl8u+L9g3xmf//1rj/+r+1ZItpH8smSl9lqSu9E+i9fslG0fvafb2
eay1nref5G6+r547Xfq8ck3oLhpIHtG1DzR/mvR7JOtJf1jX5rK3+Maa+KDs
h6XfKrlD9ozg2DQh+8dnuudB3fuQpKH0ZZI5ha9tIn2JZLr0eyXrSz9b9x9I
vJacofvbJD+bPXOTxmdrfHbpb3irxi8K9rX9cn4YLXsg+SPff4rsLtJ7EZNl
/6hn1JZeS7K99G8kQXpJHpH+rP7fjL0keVz3viq7pfQNJQtkvyy7BWshmS/7
RdnNpdeWPCn74uB35zecyffW/800VkvyhMa+199YW9fWkrRhr+nabtIPJWaT
34JjxTH5/gui88mYyvH3delb6ll1JAs190xJN/IDMZDfHx0PL60cz8/Q+N6y
+xLTdO1bjVelf3Mr5mp8T+If8VPjp8veS/oRkqGyv4t+1xqSbaW3Tf7292je
tdKflt5Y77K2ZJ6uPS67vvSQ98+o4HfrluPhucG59NgcD5vqGVfwPXV9nPSt
kmMBeYL9P0R/8wTZZ2vuI7JbJfsuMfd6jbWTfSd7j/0g+8rofHiV5l+mse2S
Y980Pe8a6c3wqdI5mFz8lP5vpHddS/KY5jRP9uVrmKPxzZP3MnkX/7s0Gi9c
Xvl9F5SOjcTIRzXnydK+U+V4+UP0XqspaS+9ie65vHQOGCt7C9kTS+eUa2Vv
mRzryJvEl1P1/+6ye0tO0kNbJsd67hmv+S2SYwF5k9/7P/3fKe+/4zS/s+yl
YBPJ1rJrac5OPEvXx0j/Wc/YSHYdSWfpn+IDmtuKvaXx5bJfAqsR+5P9+UXZ
L2T/XSp5jmdr/Kxk/2bseWKI9F8l9fXsepJdwXfEEI011fxTk30O39tF73Yf
WEr26xrfTuPnJOcrYgUxo5L+ueQ16a9KNpO+Ivq3bav5Zyfnr8f4FjkfvC+Z
J72Fxk/T+J+yN9PfO0r2CNlr6e/WD853v1XOJ9w7lz3N9+DDav7OGrs3OZ4+
o0tP5/hKvEVfRA6R/oukrub30TOHa/7K6Hd9RdJY+g66/qH0HyXt9cyVsn/j
W8n+TPZL0bmYnPxDZXxA/Cam/ys7kEM1fxtihsbeIibybD3nFI3V1JxNwQS6
9o/016P1hro2VOOvRsdyYvof+LuutdTYghx/z5C9peyFxDzWOjo2E6P/rpwP
78/5Bbxysub/qncZInuZ7D803hifkuzJt8l4ghz9i8ZfzHgDDPK97N9kNyi9
R3Yj1ul5v0gfrPGlGv8XTC+ZKHul7BKMFpyPyaf8Jn4b7/hX5Xw7JeMp8uvv
sjchnmnOecn5lzEw11cafyX62/OOv8ruqHlLWHtJO9kfESMKrwlrA156KOcv
8NMB+LCef7DmPoxvZX/7TdJR177iG0l/U9JceieNf8rfknTQ+D/4sO7vr+vn
6/7non/rdZLPqRFkHyv9GMknYNjoWuYn8pnm/y27OTmGGAuekTSV3gPsp/FF
0WvJMz7N8WCZ9N8lO4A3ZbctnSOOkb2z7BUa+1Oyo+xBsluVzlH9ZO8SXLv9
JekEPpe9dekc21/2sbJbl45ZA2QPkb1d6ZwySPbxsrfP+eBY2bvK/py9JdmJ
ekB2h5zPB1NfyW5TOkcNBLPr9wwsjMnB5vOjsXl/yRIwabTeT/KB7A66/z3p
30rasn+SfYd3PERzo67VDfa5Hwnayb+H3zVS+pfR9Sp167my/5W9FTlY0lP6
h9G+gg/hS+ClJ8n1YIKMb/Ct+ZINpP8XvZ6s6wWa/yz5TWPHS5ZXzlPkKzA7
eAocDZ4G04P3H4+ulagRqRXnRdeKYOZ3Nd5V9qYa2x9spvEnomtHaixqrT/B
CYXv+UrP3lHyEftJsr3ueSY6FuHT+Pb2Gl+MrxGTNb5a4y1L73n2/l/Re489
x957OjoW4MP4cpH9sXbl+PQHzy2M0b/Usxvo+lbBPlYn+n2Ij+SULSvHS/yR
nNRSdg09o72e0Q7Mkv3pk8I5aSuNdwmu7d/N75uS57LHD9P8PcBg7I3s3+to
fAeNdSQngM2S9x/7cDT1bc5XjSvnl67BsWFJjt8NczxoVDk/rpW8v9nnFyXz
De8U3gPNK68n78aeaUE+BpdIP494HbxfWW/WY/PKmJ14u0nlfEx84t3JQVvo
WpOc75pUzpdNc75rWnm/3h1caz1Yuh4kZhA78KGPZK8LzpB+Nj4NFgzOTR/m
/bCu5u9Yeo2O1rOnB2OtR0vjf2Iu8WrdHItf0Pj7zNe1ByrjRPAiNQP1Z81k
fAJOuTg55xC76+VclHL+26AyPlikeW+R73Tt7so1KfF6o8r5fBA5WeN76Nrj
1FPBe3Vx9vfXibca7yr7Sdkvs7/I57IfyfGHeIaPb1s5fhOfwTytZO8m+6vC
37BNjo/LC2OQ1jkeEi/BLPBZ9XI+blgZD8Xk+EccHCW9NrhZ4yMkq6XX1rWd
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
6g==
               "]], Polygon3DBox[CompressedData["
1:eJwt1XlMl3UcB/CfgLd5oGDiAaZlm1ameRTeJ4EgoCAKCrbVOpa2jul0mpmG
F+KFeHX9UatZLrt02bV0WU07QAUVVNSCtvqj2mxtNno96/vHl8/zfn0/3+fh
9/y+z/Mb+NDS/CVxsViszGhrZPszMT4Wmw3btonFhiXEYg1Gb9aXvaMnUc7R
N5nlsY76hrPZbArLZ53YvawzK2albBArZblsGpvLurJRbCjbxfawcraXDWNV
bC/bwPaxWWwCy2EJbCi7k+1gu9mLrIoNYdtZFVvLdrE8Np0VsG5sNJvPVrLN
bAl7gg1mlWwnW822sSK2gm1iT7LHWRnbxPaF/289m8G6sH7hXv3ruAObry5k
qfqK9Q1ne9gBVsFeZQmskC1gKayQtWdFrIQNYAtYF1bCythgVsYeZEnsdnbM
dbuwRWwd2xU+x0p2D6tm+9kW9gqbybqxVHbY2jhWyJaxcvaovodZMVvNtrJn
2FOshK1h29gy9iwrZeWsOnwfa9hC9gLbzpaz59g8tpxtYI+xR9hiVsFeDvdl
E1vAVrEK9jRbyuJZAZvP+rAC1mrks0LWi+XK/fVtYFvC2nXsoPG9XCPf5fN+
Zv5GdA/V7LCvJsnTre3I+rA39f3t+DA/I9frGcNOsiPsArvEprAadpRdZJfZ
VFbLJjtfvNqTH2C/O57AWqP9aOxmzazF2jR1cPguB8p/RXuLZbJWli5/aNTJ
F11jHDtlfpLzxamJfD/7zfEgtlXdwVbprbRuHDsn/yJn6/vG/BWeog4I+6C3
3GykRudgn7A0eby15+Vfrc1np81PYx3UW/kb7Ibjf6LnVc0N74jpcrq+Wvma
nKHvuPkprK2axF9jfzi+Gb1P1DnhHZEpXzb6sP7sPX3J8iHjJ/msnhHsK/PX
WD81jX/E+spTXaMdS2avsz8dX4/2hzqQfcz6yceMRrnJ+WayOvP3Wfs1Oxeu
8S6r0XeL2iPc5zbyHH1ZrDg8v5PZXJbDFoVnfwa7n52WG+Xx1h41n8LWqxvD
++V5fWPZKbkhfL9Honcry1CLeFLk0V5hm1lleAY3skyWzrLCfrmDfWFcka/r
mcUaonehvjx1cXiXZOkZzb6Vz4c9/r75Mew7doGNZR+wL/U2sZ/DHmpkI/Qd
Z7Xh2XqLndB3nbWE/XKV9da3Vn0pvF9W6HmA/ShfCc/M5+Z/4J3UruH5uBn/
/w/VHHVeuAd5eiZGP16sO6t22BJ9djZOnRX9wOkbEj2TRnJ0v9lB3EOuN3pG
/1PYu53l48Y1uTk6P2syP8r5TrI6NpIdYp/qu8Suhv1cz86y7mqvsJ/bySOt
PSGf0Xc3e9t8BktUbwv7r72+/wApwdm4
               "]]}],
            Lighting->{{"Ambient", 
               RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
              "Directional", 
               RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
               ImageScaled[{0, 2, 2}]}, {"Directional", 
               RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
               ImageScaled[{2, 2, 2}]}, {"Directional", 
               RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
               ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
          {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0ckqhWEAx+HPPM/DXkJxA0JxAzLEDQjFgqVQZC8UN6BwjuGY55AkSTLe
gnALQnneLH495/8uvvMNFT3DnUNJURRNKVnhd7liKVFUxzO28JndHNSk3u0F
fnOVhalRdMFXfarK/mUDi120jTVsUod67X6OcpwznOOyVrTmZmJcZ5wbXA3n
4UwJe4ObTHCLm0Fth+wd7nCXu9zjvg60Zx+GzaNwxmOeaEmL7meW0xzjCPvY
rkb12NVsZRHr+eN5P/SiSvuc+Yzzy3ua54QG9GZ38ZHNPGUty1SqJ9cs4QOL
ec+i8J5VoDs7n7fM4w1zmaNsXdtZvGImL5nBdKXpwk4N35cp4f+T/r//H6DV
Qbw=
            "]]}, 
          {GrayLevel[0.2], 
           Line3DBox[{935, 1186, 934, 706, 936, 1330, 1426, 937, 1331, 1427, 
            938, 1187, 939, 1188, 940, 709, 941, 1332, 1428, 942, 1333, 1429, 
            943, 1189, 944, 1190, 945, 712, 946, 1334, 1430, 947, 1335, 1431, 
            948, 1191, 949, 1192, 950, 715, 951, 1336, 1432, 952, 1337, 1433, 
            953, 1193, 954}], 
           Line3DBox[{956, 1194, 955, 1378, 1195, 957, 719, 958, 1338, 1434, 
            959, 1196, 960, 1197, 961, 1379, 1198, 962, 722, 963, 1339, 1435, 
            964, 1199, 965, 1200, 966, 1380, 1201, 967, 725, 968, 1340, 1436, 
            969, 1202, 970, 1203, 971, 1381, 1204, 972, 728, 973, 1341, 1437, 
            974, 1205, 975}], 
           Line3DBox[{977, 1206, 976, 1382, 1207, 978, 1383, 1208, 979, 732, 
            980, 1209, 981, 1210, 982, 1384, 1211, 983, 1385, 1212, 984, 735, 
            985, 1213, 986, 1214, 987, 1386, 1215, 988, 1387, 1216, 989, 738, 
            990, 1217, 991, 1218, 992, 1388, 1219, 993, 1389, 1220, 994, 741, 
            995, 1221, 996}], 
           Line3DBox[{106, 107, 502, 108, 503, 109, 504, 110, 111, 112, 505, 
            113, 506, 114, 507, 115, 116, 117, 508, 118, 509, 119, 510, 120, 
            121, 122, 511, 123, 512, 124, 513, 125, 126}], 
           Line3DBox[{998, 1222, 997, 766, 999, 1342, 1438, 1000, 1343, 1439, 
            1001, 1223, 1002, 1224, 1003, 769, 1004, 1344, 1440, 1005, 1345, 
            1441, 1006, 1225, 1007, 1226, 1008, 772, 1009, 1346, 1442, 1010, 
            1347, 1443, 1011, 1227, 1012, 1228, 1013, 775, 1014, 1348, 1444, 
            1015, 1349, 1445, 1016, 1229, 1017}], 
           Line3DBox[{1019, 1230, 1018, 1390, 1231, 1020, 779, 1021, 1350, 
            1446, 1022, 1232, 1023, 1233, 1024, 1391, 1234, 1025, 782, 1026, 
            1351, 1447, 1027, 1235, 1028, 1236, 1029, 1392, 1237, 1030, 785, 
            1031, 1352, 1448, 1032, 1238, 1033, 1239, 1034, 1393, 1240, 1035, 
            788, 1036, 1353, 1449, 1037, 1241, 1038}], 
           Line3DBox[{1040, 1242, 1039, 1394, 1243, 1041, 1395, 1244, 1042, 
            792, 1043, 1245, 1044, 1246, 1045, 1396, 1247, 1046, 1397, 1248, 
            1047, 795, 1048, 1249, 1049, 1250, 1050, 1398, 1251, 1051, 1399, 
            1252, 1052, 798, 1053, 1253, 1054, 1254, 1055, 1400, 1255, 1056, 
            1401, 1256, 1057, 801, 1058, 1257, 1059}], 
           Line3DBox[{211, 212, 562, 213, 563, 214, 564, 215, 216, 217, 565, 
            218, 566, 219, 567, 220, 221, 222, 568, 223, 569, 224, 570, 225, 
            226, 227, 571, 228, 572, 229, 573, 230, 231}], 
           Line3DBox[{1061, 1258, 1060, 826, 1062, 1354, 1450, 1063, 1355, 
            1451, 1064, 1259, 1065, 1260, 1066, 829, 1067, 1356, 1452, 1068, 
            1357, 1453, 1069, 1261, 1070, 1262, 1071, 832, 1072, 1358, 1454, 
            1073, 1359, 1455, 1074, 1263, 1075, 1264, 1076, 835, 1077, 1360, 
            1456, 1078, 1361, 1457, 1079, 1265, 1080}], 
           Line3DBox[{1082, 1266, 1081, 1402, 1267, 1083, 839, 1084, 1362, 
            1458, 1085, 1268, 1086, 1269, 1087, 1403, 1270, 1088, 842, 1089, 
            1363, 1459, 1090, 1271, 1091, 1272, 1092, 1404, 1273, 1093, 845, 
            1094, 1364, 1460, 1095, 1274, 1096, 1275, 1097, 1405, 1276, 1098, 
            848, 1099, 1365, 1461, 1100, 1277, 1101}], 
           Line3DBox[{1103, 1278, 1102, 1406, 1279, 1104, 1407, 1280, 1105, 
            852, 1106, 1281, 1107, 1282, 1108, 1408, 1283, 1109, 1409, 1284, 
            1110, 855, 1111, 1285, 1112, 1286, 1113, 1410, 1287, 1114, 1411, 
            1288, 1115, 858, 1116, 1289, 1117, 1290, 1118, 1412, 1291, 1119, 
            1413, 1292, 1120, 861, 1121, 1293, 1122}], 
           Line3DBox[{316, 317, 622, 318, 623, 319, 624, 320, 321, 322, 625, 
            323, 626, 324, 627, 325, 326, 327, 628, 328, 629, 329, 630, 330, 
            331, 332, 631, 333, 632, 334, 633, 335, 336}], 
           Line3DBox[{1124, 1294, 1123, 886, 1125, 1366, 1462, 1126, 1367, 
            1463, 1127, 1295, 1128, 1296, 1129, 889, 1130, 1368, 1464, 1131, 
            1369, 1465, 1132, 1297, 1133, 1298, 1134, 892, 1135, 1370, 1466, 
            1136, 1371, 1467, 1137, 1299, 1138, 1300, 1139, 895, 1140, 1372, 
            1468, 1141, 1373, 1469, 1142, 1301, 1143}], 
           Line3DBox[{1145, 1302, 1144, 1414, 1303, 1146, 899, 1147, 1374, 
            1470, 1148, 1304, 1149, 1305, 1150, 1415, 1306, 1151, 902, 1152, 
            1375, 1471, 1153, 1307, 1154, 1308, 1155, 1416, 1309, 1156, 905, 
            1157, 1376, 1472, 1158, 1310, 1159, 1311, 1160, 1417, 1312, 1161, 
            908, 1162, 1377, 1473, 1163, 1313, 1164}], 
           Line3DBox[{1166, 1314, 1165, 1418, 1315, 1167, 1419, 1316, 1168, 
            912, 1169, 1317, 1170, 1318, 1171, 1420, 1319, 1172, 1421, 1320, 
            1173, 915, 1174, 1321, 1175, 1322, 1176, 1422, 1323, 1177, 1423, 
            1324, 1178, 918, 1179, 1325, 1180, 1326, 1181, 1424, 1327, 1182, 
            1425, 1328, 1183, 921, 1184, 1329, 1185}]}, 
          {GrayLevel[0.2], 
           Line3DBox[{442, 694, 443, 706, 466, 718, 1378, 478, 730, 1382, 490,
             742, 502, 754, 514, 766, 526, 778, 1390, 538, 790, 1394, 550, 
            802, 562, 814, 574, 826, 586, 838, 1402, 598, 850, 1406, 610, 862,
             622, 874, 634, 886, 646, 898, 1414, 658, 910, 1418, 670, 922, 
            682}], Line3DBox[{444, 695, 445, 1426, 707, 467, 719, 479, 731, 
            1383, 491, 743, 503, 755, 515, 1438, 767, 527, 779, 539, 791, 
            1395, 551, 803, 563, 815, 575, 1450, 827, 587, 839, 599, 851, 
            1407, 611, 863, 623, 875, 635, 1462, 887, 647, 899, 659, 911, 
            1419, 671, 923, 683}], 
           Line3DBox[{446, 696, 447, 1427, 708, 468, 1434, 720, 480, 732, 492,
             744, 504, 756, 516, 1439, 768, 528, 1446, 780, 540, 792, 552, 
            804, 564, 816, 576, 1451, 828, 588, 1458, 840, 600, 852, 612, 864,
             624, 876, 636, 1463, 888, 648, 1470, 900, 660, 912, 672, 924, 
            684}], Line3DBox[{6, 27, 939, 48, 960, 69, 981, 90, 111, 132, 
            1002, 153, 1023, 174, 1044, 195, 216, 237, 1065, 258, 1086, 279, 
            1107, 300, 321, 342, 1128, 363, 1149, 384, 1170, 405, 426}], 
           Line3DBox[{448, 697, 449, 709, 469, 721, 1379, 481, 733, 1384, 493,
             745, 505, 757, 517, 769, 529, 781, 1391, 541, 793, 1396, 553, 
            805, 565, 817, 577, 829, 589, 841, 1403, 601, 853, 1408, 613, 865,
             625, 877, 637, 889, 649, 901, 1415, 661, 913, 1420, 673, 925, 
            685}], Line3DBox[{450, 698, 451, 1428, 710, 470, 722, 482, 734, 
            1385, 494, 746, 506, 758, 518, 1440, 770, 530, 782, 542, 794, 
            1397, 554, 806, 566, 818, 578, 1452, 830, 590, 842, 602, 854, 
            1409, 614, 866, 626, 878, 638, 1464, 890, 650, 902, 662, 914, 
            1421, 674, 926, 686}], 
           Line3DBox[{452, 699, 453, 1429, 711, 471, 1435, 723, 483, 735, 495,
             747, 507, 759, 519, 1441, 771, 531, 1447, 783, 543, 795, 555, 
            807, 567, 819, 579, 1453, 831, 591, 1459, 843, 603, 855, 615, 867,
             627, 879, 639, 1465, 891, 651, 1471, 903, 663, 915, 675, 927, 
            687}], Line3DBox[{11, 32, 944, 53, 965, 74, 986, 95, 116, 137, 
            1007, 158, 1028, 179, 1049, 200, 221, 242, 1070, 263, 1091, 284, 
            1112, 305, 326, 347, 1133, 368, 1154, 389, 1175, 410, 431}], 
           Line3DBox[{454, 700, 455, 712, 472, 724, 1380, 484, 736, 1386, 496,
             748, 508, 760, 520, 772, 532, 784, 1392, 544, 796, 1398, 556, 
            808, 568, 820, 580, 832, 592, 844, 1404, 604, 856, 1410, 616, 868,
             628, 880, 640, 892, 652, 904, 1416, 664, 916, 1422, 676, 928, 
            688}], Line3DBox[{456, 701, 457, 1430, 713, 473, 725, 485, 737, 
            1387, 497, 749, 509, 761, 521, 1442, 773, 533, 785, 545, 797, 
            1399, 557, 809, 569, 821, 581, 1454, 833, 593, 845, 605, 857, 
            1411, 617, 869, 629, 881, 641, 1466, 893, 653, 905, 665, 917, 
            1423, 677, 929, 689}], 
           Line3DBox[{458, 702, 459, 1431, 714, 474, 1436, 726, 486, 738, 498,
             750, 510, 762, 522, 1443, 774, 534, 1448, 786, 546, 798, 558, 
            810, 570, 822, 582, 1455, 834, 594, 1460, 846, 606, 858, 618, 870,
             630, 882, 642, 1467, 894, 654, 1472, 906, 666, 918, 678, 930, 
            690}], Line3DBox[{16, 37, 949, 58, 970, 79, 991, 100, 121, 142, 
            1012, 163, 1033, 184, 1054, 205, 226, 247, 1075, 268, 1096, 289, 
            1117, 310, 331, 352, 1138, 373, 1159, 394, 1180, 415, 436}], 
           Line3DBox[{460, 703, 461, 715, 475, 727, 1381, 487, 739, 1388, 499,
             751, 511, 763, 523, 775, 535, 787, 1393, 547, 799, 1400, 559, 
            811, 571, 823, 583, 835, 595, 847, 1405, 607, 859, 1412, 619, 871,
             631, 883, 643, 895, 655, 907, 1417, 667, 919, 1424, 679, 931, 
            691}], Line3DBox[{462, 704, 463, 1432, 716, 476, 728, 488, 740, 
            1389, 500, 752, 512, 764, 524, 1444, 776, 536, 788, 548, 800, 
            1401, 560, 812, 572, 824, 584, 1456, 836, 596, 848, 608, 860, 
            1413, 620, 872, 632, 884, 644, 1468, 896, 656, 908, 668, 920, 
            1425, 680, 932, 692}], 
           Line3DBox[{464, 705, 465, 1433, 717, 477, 1437, 729, 489, 741, 501,
             753, 513, 765, 525, 1445, 777, 537, 1449, 789, 549, 801, 561, 
            813, 573, 825, 585, 1457, 837, 597, 1461, 849, 609, 861, 621, 873,
             633, 885, 645, 1469, 897, 657, 1473, 909, 669, 921, 681, 933, 
            693}]}, {}, {}}},
        VertexNormals->CompressedData["
1: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
5zRy4KQQu69ifqj4JwO3hAfjuhMWPf9wKFyxtojvJBH2xgXfTCfi4IT9Ku2Q
KhEZp4fv/G1KgY7mU3rBAuOAP5uRO91LRCmt59ENjBsOLDj/G3UcBj7S4SuL
n8jI82aVzg53jD/mGI8brQeghmG1q5yfhni3vDT4wr8ADnVybUsKOJC65b1/
Z04rilf5kXAwZgHE/Bf3vhWaA/+094+0BzvQvc32hpfzC3AlrML4j+kMHLFL
ijuDutHbY3F7uogL4HPpau+z+GlIc5n7WPazF5Vm5VESxRZAovURv0bxDHAs
X5al6A0hxqpXUHMkHTi5HTqGR+YgtfFxTKT0OIrS6g2MF6dCQQCnX9nGPDx3
4bZnTZ5D8z3lUjPXSTDINhr+//f13l361iNbQ0C9h/r02zEvEOPzX9vbMws/
Zh2bXfAkNE7UqDeyJYNCnFzQ7uYx6ApRsBlgkNCSf0TjDi8S4P48XPdjGYbz
qur+t4spaKVASnz+Lja3JTaHWOf6YXvUBfw6lYYqoqPai7MXgHGwZ5yLbw5y
snS5M8XbkVUYX55b+gKcdC+hMt+bhfPKj4x8fLtQmKNvlyfzIhTWcartTZ4G
6ND6GLStBx01/fWg32YRgq+9OUoSm4QsVcf1XJN+dEpZo+XFiwVQNWY5/cJ+
Crp5/AYbyUOIN3vQ8OkGHeQ9cSo90zPwvWz8h1TBONKNU70q6UEF82FJjqcu
M6B/yX2LeggOuWWVfclIIMEtgVdvO3NmoMbBtTMeT0SKmX7GGgsEyCg1/kCb
mgLHxzESV7gpKNiLz5/5IwmkBB7LlgeMAle5kcqWr2R042OG/PMxIhwqMmC1
1R2CzPOLVoYOVOS4NaOtggtbn5uO9M8K/YDT3tMXfIqO9hV+UDWPo4CZ2c/h
Mezxd6dK+OE7xSglMUj58msKqDDXPlCOpICrxr2jNONidPLkGb1LGN/i9II/
MiVRgCy5Vf/Qp2L0EoGuxlEKKH+S2fuQRgFxQZ++iW0lKEdcnas5iwyR9ivb
U7E8OPoi1iM/sgQ5B580T/tFAo67FfnErTTgvbDs+lSkFOmmRbm5HiNBatZS
cH8eDU5RTE9WZ5WiAZV7WUcHiXBtX+DmFox3tBvLxVO0ytCY495J4VIiuFdE
crzeTofqHX1jZitlSKa1SJ4tkgj3Dmipv5Onw4R6ZwS1rxw1mJTCibtE+HpN
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
/AcBvO96
         "]], {}, {}},
      Axes->True,
      AxesLabel->{
        FormBox["\"Cars at 1st location\"", TraditionalForm], 
        FormBox["\"Cars at 2nd location\"", TraditionalForm], None},
      BoxRatios->{1, 1, 0.4},
      DisplayFunction->Identity,
      FaceGridsStyle->Automatic,
      Method->{"DefaultBoundaryStyle" -> Directive[
          GrayLevel[0.3]], 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "RotationControl" -> "Globe"},
      PlotRange->{All, All, All},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}},
      Ticks->{Automatic, Automatic, Automatic}], {635.8499999999999, -190.05},
      ImageScaled[{0.5, 0.5}], {360, 362},
     ContentSelectable->True]}, {}},
  ImageSize->{
    UpTo[600], Automatic},
  PlotRange->{{0, 828.8}, {-380.1, 0}},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.796627593446756*^9, 3.7966434215253477`*^9, 
  3.79664346048595*^9, 3.796643589976849*^9, 3.796643906395239*^9},
 CellLabel->"Out[20]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsvXmcFdWZPl6pukt3QwO90NB0g82OmEQTNYmJmjYmCgpGURQEodmaTXYE
VAT3fd/RRLKvGiNZJqvEJJpoyL5qFoyGmcyMk20yM5nJcn7v877vOXVO3bq3
G1z4/fHtz+fcvrfuVrfqPPW87/MuZ/qCjcuWrFqwcfmiBV0nr1+wdtnyRRu6
TlqznjYlr4qi+HdR9Kq5XVGB7psoyr/5QxT9vw3/b8NLuWE5P046Fy9ebHp7
ezGihG/LG5csWYInB65YseLDtOW/aPwLjZV49qL8DyrEl1566QfpBY/RGNLT
0xPX0U1Ul8ycORPP30ubv7x06dLmRYsWHU2f/wd63L1s2bILsx+3Qj4O7/sY
veYz9NoS3Y9ld7H5T/rWSLfdQy95D3YNf1uyn7eSH9cVaPc+Qd+PgfvYOFp/
O/ZJP2sZPf2tqp91Pj8uY3++RC+6V1/4Gj1+/Ln6QbPpg35W9YNW8eNSG/2K
v9CL8AH7vTOr+XHxJ/SCc2nYI/M2+hy7E9jB6kdGTtyg+nXr1t1F34Szgh1a
TG/4XxoTly/nV+Dw4qQOXbBgwVvo+T9VO3PyeSUchTvoNb+k8d80fkDjDPoM
2aciJtWH6CEm1T9XnVQHMKFlfwpdtGvb6TN303fg/obs6zbLbtrX7KX/uL9X
H1e8fqPst/1cCxbcl+Mc72Xs9Chq+G9t9lPW8eM6+yl7deA+tnXTWcNjOUgF
7EiP7hyeXpf9uDWVO7WTziHvQ4GfK2/XbXiAz8NX2B8dVXzg+eEH+vsXldN9
t0fVfpndhvsVv/kYfpxc6R21KObbumv1YGHyYXL9QSfLd2mcRZ89Lv/38ZsH
ygl0v5f+8Dp7rNbk78YgzEtckzCf76fX4r69EmA35tLnjVi4cGHLypUrF9B9
YODN+Ik1jozizB4BftTAc2K7O5mJfyIUtbJjO/luI8DxTf39L9D4LA0ADU9e
R/dxGfkcvf96+v89GlPwWfLZDb+lx6/W1+LvKHruO7QNIP13Gg/RwA8q8rMD
qn4c/Z1O95/TU7EcP65Y9fQ12tNX7etqfF7ds3T/KP3O8fT/i/qap2ngHCT8
soHt9PDj9DU4Iv/hXceq/QQ5IKXst9pv06tP3hfqsSxlj+VWeg5X0ElyHO70
rvgKiQQ7eLU9tSPTiYLT7cNbMZl0eR9fOVEsmIDUYKI8IDN4EX0qjnSvztTB
dHcG3b+PxuE08AMwk/HiqfQ5Jjg0FXPlUPoazDOAAJT2fnr+VtCjvLzWJ+Lx
N/XwyaEYUgte1b6p8mOG2fMFOvsR3b+cBt5yDG37I91/g/4Aspajb9A2fF0j
HQu85jj6mpp7LQeiyX6lPRD+jOzre91B1HNmJwk/mlh9pjxCj6+wl4gR6Uyx
Vzd3SWl1s0KAkFhq4EervFlxOB/3I/hFQyLvb468sbxq1ar/sOCTkwong80e
/KTDU9Q8451X/1fqJQCQ/iTtPMwEO5X9T9GDUfQ/5ld0/02YyPU5B0U+txR8
rvceOWZFe15eR3uCryqml9zSvd4Ugvn0nzTwg5Oqe1fxI+236dP+LPC/UX+b
/4X7PQlkr0qYjEfSN06i7Rf0ipl1BG1rl6ezJgnu4/9Q+QwwjOMR/Z0Bt5zv
TY7XyvML8bht/PEY0SC+TXbkzJU3edZnVJLdmUPf9xRte14vo9jbk50hl+Ag
vMb+QD1I8+nxk/QSHDsYecMwAeRk11f7ODz5bK3JIj+1LvezvffKpCnY03gq
/f+pQ1Fxi9IJHpxibfNif35ovds5/fMniv2WKOdrDnCWFIGI53V3HqVxIr5r
mDyXe8nI0AeTTKtsw8Vjt73sJOnr8F6mmZw5Mw2P3zjvfgyaM7hNLsuZM/jt
f7H73iCH8hf0+EjvWOEYnORAVDiMdgV2wjvoJ+HqOkB+lf+umlOhysfoDwtO
lEzi/b6GgLbq8n+L/fgDu168FWdBz9RV9PjGvmdCgpmw2G5rk6+t5kF05Jzw
QrrNMcjKAz/heReJWfRdw8mlA2/CasZpaXBHgW0OuPC4NIN7cD2GedamdIo9
H0lv12tEtU/r58Sor/bxwfszlgaEix/SfZwUTCbr49pzay2NHbRtEP0Ma2ng
uar7q5ZGrUtHX9+LQ/cQfxbP2QTXvnPt7x0v5/dM2jadXv8BvbTICecrCMQD
nsw0cPSjZnku68ey3zIqZ/LwKYlBLi9iyuCbYcGv8BzTV+lLtuvlFrCDFc/K
RZLOm83qXPxUf/Q2+ox/7hXbHVwO00z9mtyPoj/oEH/rFfUKzy/EbpRz5o9+
bd5X5H1Gjiszlu5/gZ76fa/4J7OdKzMArsxHaPwrjd/ReK8e4ty9lplTzvtW
93V6icn7St+ZwQEEr/28V9wnmN8TZOKsobfB1/6rHgRv4tiJgfFnHJ/B8mOr
XXisx6JzyLJLOocyjLPiAGbTXDkocIBwsGDRQriEzmgdIJUFEutz8J+YxXnE
UAGdhqovTfzTrJfh8HUz5Mf60Npufy7PgbjaAdJvCK7Qyw/gAJ0nnwbvF9cq
SAm4Flkp4ZDqxyE7E/bvOJSyV7h59DyUwmnhIQlUE2U8Y3+w+wq+2hzIz39f
zg6OyNk2Nd0r66JjsAV9aLW9yjjmyw5g//jFwlv1uSZcJFzlvkQ1B6tp8SO9
blldkB+pM3Mp374YJaneVweqyjpyPPZPRlIjJCfQULSBBvxlrOV631qeTPef
oPuP67480Kv2k+xPn5KSXi9zJSV5rnW/flIUMnl1FauqpvSG/Zk46g5b/69P
YWlizuQRmzaxLiU/0nm+nW9fpLoUzJ+qeo/wQb+lJb1E5YeWija0VGv24K2w
H87WmTZm+fLl/xnOnhH9kZyqyU34gP7+GpkS9f1SuPqQJPdr+ii35153XpdO
i257Fa9Lp5QjbZ0q2+Spl0BZ0nkbKEBqLfRbWVKPPxsqlI+uq3bsXk8Dz6mP
BSnB+WKyB7WcRufX+aLTfmtiSZ/fEzin/oHLExOO3p/poD50lpWZe1+fMx3U
3QpoZ0kwHfZfPKoPxCP6yxV35KP6JxzJpC1kw7xJ7bkwjT7mB+lcuKXX88tl
LlTRkwpW6LFa0v7sa1Lrk0u+hPRSnfh/yC/KXgJ6PE3Cwp235V0WGtJtjkEW
B/MgRxAaUE0Qwv2sjKMmfE05KIi9J+lkeqt3xKy8AqTDN/Lj8o9UnuL9gjtT
T32N/TxAaL81FVYDdai/Z/iv4RkO7G3PinU2wRGyzQ+i2jMcXPjDM7z/ClC9
rwBB686VZxQ9/ZJ/dC/93Ak9sI1WMinqsJIJrADkSWzVq8Lbafv/9AZWwOD+
yEFVpaB4P/Y/YwbUlIE8MyDvd/XXDHhSXlcrEI+/vHyfseG8ClSjt+ApDlWp
7x1wxKJg5hygEFSfFYLyFBrrluyXCiQYbrLpM/YYVNNN8BzCNjDmcHrgWu3o
re6G5GkznhtSIQepG7JfPyEK3ZDqClRVNWj/JlCpWozXu67l5XiJ+pArIOEJ
O2vS6dQouxVQzUKdKzJ1XhIlSC7/5ZoJULor11ZaiaGyMDTn86f28+h+S16X
I2j3ne/WKXvU76SDY7IHOWAFPchy2PZLTSqmMyQv+WvQiziM+rOtssSP3v7i
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
5Dt7EvEsZdN+7H9p7zMgewb2urPQHJueN5bN1WcMMbPfOsrs2dqJg3w3DvI9
uLHnoWD23diO6W323dTuAMGnosAYKDgM4HpDlJbCICoyo+FM3HjBDLNzCdsw
FgnB9WbqwTgVYk1WiOtqn/eVVOJQzPVqMQ511FDzYG+f2mB2zh1odq8eTAfw
zlYc8btacezNtLcenj3+ieJgRy9N8nMn1cIBrvI4+j4OiEtx8F+4r8tcuGou
3R9GJlWpxx5/VkdejqPOceJjT5qPQUedbjngqlGBnOhwMYgO44SweQEpPpPC
J2JEfpaMFJUGpqV/2YlxEuhIzX8DzfnThpgJEyaYB5e201G8nYwyc0crn5AY
54NetX3WRLNj8Ticj/xzAiwAE3su7cyek8RjX0KDPSelnHOyY8V4c+HZY/aW
y+Ux6bxyl6cpL9fZWdEzD4PODm7DKL5mUgSq/eZ05ywgbM+z7f53SMJvfd45
2F1XV+ew8NaxRToh206uj+rNoysGmX/c0iLjVoxWY2jsWt1lek85zJjbWkEL
lWeJTsJ1w4Ebs+/6dlyFMqeI4ML0AWaucoqUuO0pKvApqjf7bh9hdiwfx2fw
zJPfYOjCzKdqz1WjyDWr99k8uIad7J0v9kP4PNSZ//hkz/E4VU04VWNxqsbh
VDX15/JFL8agU4Xb3Ph0EAkQU6chj5WtqGOvXfg/V1+uZ6xHz9jOKHMFO6Qp
NsePKcZm6zvq6ar+xeWDzKxjR5lPrjzE/O2mFvP3m1roN/z95hb6tX+3J9M7
ofuuGs4nc8+FnZlzmei5BNq2z5qEs4jTfc/QgjuXbIYBUNPJHtjYhVOJUcic
zia2BHDecFr3XDXSncNpJxzO93esGGcevORNZufWKWz4AIa4LO69qXWvHgDv
2uifzTz0vXznVQWXIDFdAlX5npWkmiT+SYxilrDK9kQaO0bRiRw/rN60tLTQ
cb7o7fVRg/nc0kbz0y1DzH9f12z+5/pm8xeMG1rM/9L4Pxq/vmyYmXY8mcN0
quk8/B0n/GYdt5A1R2ea5oQPXjrPltFuB1wzJ5sAy8Dds61TTnYK3ERPtr3A
VpxsXELV3rDWH3nLYq7TSabTQiA2L+zoMruuOJ5PM660uA9jnO7DPhxGO2Gt
Efx5xqHzH086aOdfk9BqxlS0/aOPcZc0N6PqfKirADacyVFDYvOW0QUz+3Wl
2Gx+Wz3t9t1nDjCfXtxo/nh1M52hP13TTCf451vbzKnHH25+cUmb+a9rm81/
XYfnaNLEmDV0PP5yvcwZnjc3tphtZ00022ZOtFcIuUAk6QXiVkxBmjKYJre1
8gVix8KxcrWvnDTg4l3ruqyn5U+agtilZCRFLTJjUkfN7Lt1hNl1wWieLb3T
X82zClcFPAY/W9spZ8qIIhPjgsF36VJxcyusKBxWZYAgMveOgzxnqoaNZLrU
davP50yMKE1nw+Q/0U2cqGinjmVxpr2YITNor506+D+Sps+buwrmnCNKZmN3
nbnghDpz+xkDzCcXNJpPLmw0L1zRZG6dM8ZceMaE2PzuSroA/f6qZvqZf7iq
2fzh6uZgjv3nNc3m48tGmUVTDqs2x5qDOfacXJvMU5s63BxL+IpUdlekf9wm
DMS2wtXDMb0iZqDYza8Y08v6nDTJQEPZi1IdT619N7cLE2FKLZUplV6Alo2D
/UDXJitfYbxwb5fZccHbgpnFui5PL7qgWXvw6dvJ3nnfMLP7wiYcYUnnCuNO
bz9oM0xCowU73+0Vh7+VM3uOdJMnxtyJeyK97MQ73cwpuAsPRmNjY2w6h8RR
o3nTIQUz8/CSWffWOh43v7PBfHzeQPPg/IHmyTWDTc9Jk81Ns8eYf7m0yfwW
47Immhj/Srd15t8ubzL/jkETDZPtxxcONQtOnmx2r21P51uDP9/MnzBormG+
/ZyuZ5hvX98wAvOt+nTTKQejZ8nUw3BZ86ZbKZ1uIEGacnQtM9vPmZheziqn
GxMhWC6YbphCRH/kW7Dvh9mmM4z/Y9btuXxkVPAkqBfuoYvX5cfTIaF5RNvo
vvnB9eNg+shUK7mpNpqnGv5jqtHFDKcoz/042FOt7LcYdg64Xo3ol9rppDML
HgYmmh0FvIz93YZue4+3JXg2yZmOvL8dg+PYvGFUgQ7vjNeUYCeZ1ceWadTF
5vppDfSrPzRnoPkQefFfO3+Q2XvxEPPs1iFm54KRZt47Jptfb6WL4XOXDKF3
P3/JEPP8tiHmNzJis2/7ELrCfe+CoWbqcYeb720aGk7kGPOYzhBm8gs6kz/c
O8ospJlcZRb/0ZvF/0lXS8xgMHQ4iwdUGHT2wolZrBdOtub+wfz8D7bpbpUp
HV4991zUGZJznM7melbxYMOzHX8vXSpvaGcplQWM2Wyn0U8Ff5d5257LOpWt
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
DKys0l3yJSi/GtbL27TJzZVPh7Wyus3GSvioiY9c7InCxGePhYtORkK6s8pH
Ih0JuovsoMKaJvK1KWWizcbAN33ON1e5Vi8qHk0K0N2XgPSjHAHp4TRzxiFc
gpeDAwXpWU9BsgivVI6GuPwxrTGQ2EjB5cf8gojuYxe8JQagaVLSXXPvwkms
GXnhkYoKHxeuLHOjCNS++gH/tO7VkbUoRXBREadkpkZStCBc3FOHbbqAcsx/
0VhOH0POpkshm5ZmzUjcciz7rLCsNY4ZFRy4EwW3C2BaigYnD00cqFkpKmWl
IY3zR9KqpZgGMc+bZJNlojilaLGpP799EvOwZ1M7tTbE8bO0GT0c8OApug+O
BgP+LIPjihzLg4Lj7OrDimNfzvJrhBTHfolQ5dN5FUQu2mKriDyWtuFPYWli
p0d7BwbdOGFYg49hUHsBFx/QoGzY1e85ry0NtjCgY+A5RvgzGqGqU6OoTjlk
ndcixifrjPJUjaylkLbglCe0OXv+Em1vlvhAph39LRcO/cCrcniG0PvRjW8x
1646gxkZ8P32VnRfIgKHN5xwsdDtZIL/6Wpb5NBYwdI2dyesnxW2zoFy0Ym+
rtGEZWokRKdoZqMbPA0kS9a1ZH8GOW+XdHq+ctGu4uYqaZGFnUE01xEVQhxn
DWwnOXm9Ab3lXJxVoPovKBrNp5mu0Xhzw9xj2FDMs69f7+O4gAQEu+Da81bK
jZLPWTMTfyNeUcjKOxqqSV940i+tVaz6lbWVT+cW3gap3MNSoJrhfljUJ1xU
9oF0v1JJuAXG581nd1iTOgNNOp3IEZr1tkPNB+a3+aa0BENHOq71W8WEwZrQ
mv5amiuUw7WhNQ2eveC0CVmuVUu6znHt00RGi86eYtYummk2L5/D8PzCltdJ
/kEDe8Q29vlHGk9rejbin5yDINCMgUth2AaGJtcfbZT6oww00/xsgLPJgdOv
o9131TCza/Uh+cmnaM+5SJJPQbNoRRg75zjJwBIDHjIs60qirbCiKwGaSd4m
gA6QPhRIC/LWWnJ9KMQZdlIWc7NFKlEwwsLbPcYNLOfX+Ugtf482L1BYPqsv
AUiux/3OgwDRfL1MwZVTcnsAfJq3onXRj61m7OKBLpUI6pSftfC15WFBPFh0
6zu7xOVNnMsLpMbII6cJALcXWpVglWCM1IVCYBfTcM15M6bxj7k5L4GVLsw2
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
J8yZlC3fA/FJtRifzPLr1jsMEdwnEsG1b3+8aURwe3U12TTr90Xz2p/Zc7Q4
uuheTpAHWfoA9Kz8UIuscZ+kPGGV89i6kPkMGR96+BcqeIh/riUjjfTnwycP
IA4aVcmFrsJ4DoSOhI8EqyBxsMk3UPDDBjnpzV75ZB5vg1hsAPlTZJtvOkJq
YFbRoTUw8bxQErrvnzSRW2lkGgSlHGpXGG+0Cc+lIofdj3zENHAjaadbQy7y
1QeNEHHbqmoYjPf9klGi5p3D4L/1MraWzYXfoFtch6ZHIl8jIV8cvlx/UA/L
17O+2t2V75qAvcipdUhXK5IuHNephP305AHe2l4+e5RsbZXuUlYNRb2oRaTD
omxrZqQNjSpaH8LZda0LuZnkDfXxfpN79syQiKHPJxNMH+0MsDqCNXYEmaY7
h2m62p4+yN2IaKtb+bcUj8zOZSyJ4wsrCh0yt/dxWbe16ua7af243VzfCTwe
/LiyHkIiXzJGCvJ17yd6Tb4UtWlGVXmwnmj4w6ZS5CqA0gLeaI5ExOtlgDlO
soyrJMNbL8YUA/qXXmyTCxxRQ9LUkLABFjgI393HTrSK8jYIsd2ejg6ixgO/
Q0Y75FGaeR5FgER2+JycSd8T2r3OoN3rwBGRZBXoQckYWZZOYSsbyYNlqboN
Td3wMWkHtkUdTj8q6IBqw3ZbUKA9cXxVaKB/Cqo4OpKfZyE/hb2pUNUZ9iS4
Wg+fRJbuzsUTyDFBCADZwbH0IzM5LJ0v5TSBfG/1NFqOJqBKNbuBNi2KT7Of
kYg5w3iDlk0/tnQzyxm/8smQM3bJD2TiVmiw0AoCVEwaP0COmUIrslslI10u
rj+777iBbPvtt89OmE2e1QdJWLYs34YGRFi6elRzZdHY2jVQcc82rQD/Tg5p
hVxYJkFY/nzt4F8VkQ4kBSBv19FDQN5eMOSt0PDFshHimAta8dYpfdmJH56J
jCtHh1IVkrdDUtVP4XZL07AGIkPeSyAHkAeEhavpoJAwYX+oogmHi3U6ikaG
HCTy2htCHNaeFtY7RaXpL87J/oFzssWdxITgfhWCp5aOyr51xMg0W757kz7Z
rTUCuDKgf8wwln2hW/akcgpp2s300K5cd7cdvbC7Z9NdHtZl87hfnhdNWdP3
w3KHDmFyjvXlkyZNygYGBrg+9esUkCEIu23RhJS7KTayB8lbKatN/RXnOckv
oStK5iN75JQBy2/WJL8pqw5TgpXHFJxa2ar/ThqUqsZbBPZEnH8PlsPaq161
X092+t80s9Pf38zetdVYbvSV5AyKsuhILmAXt/XIaEUfcLiQFS5u9MXUQhig
kV+n16Nf2x8HBT09jo5vxXIa3IVEeuuwnA6oPCSyrQGRTIBCgvlf3PpfOD1P
Zj/kF1uj65fFDcVi03vQUrPDUC1Zalbwqi71JcWlJqWFglvbw8s/2pMt3a2Z
zdupl5+3y/RqtgXZflxkDnartinbxjwxX8ti8kTW8uhoLZ9446xlY8QhhxyC
bXvGokWLEGagoAkkMqZHSL/liMa4xjaczfKFZCxvvx1sIZu0kH0xK8Et5C/O
LCSHo3UMSTveq2tuKRk75gfYTmMqaSP76vze7DJarlPf1+Rjp20nZ+/ccmz2
3unVxC1Y3VwuHHN10fDNrQ6lxK/3iYPk2Gj94Bvfr1htUj19yCT+hltErXSG
U3+Nca1k0dqaSI8trNfxuzR0vXqHWi/bYW3BUg7+Gn69sgeP78t+vKQv+8q8
3mzVPj10Pqe8D+Ztq/FNEKr4d1iPGr6BVyLUQCUpVkVqPrrbuhOi1QD4gjLv
lbwaVwwOReZZ69XYH5ft+hX74KDVwG3l4pLVuHQwZ/wmd+USttpavYzTFXJL
gYVA5ITGQbYS3zt6JB/Hzd6Cge9bDh2RXbJ3KztpFlbuZLptZge8o569Z1oV
lQfZtGnTvNHB9eUcL1/XgkuxzTAu8yny1O5hx1pfTW4+c/Mlc3HQ1aRbbj6j
fHH0y51KbuP+pFwX0d2oR07u5sdKR9zjC6tpWU0RLWO6fJHdrs3snf7+/uji
JJW5Sb4fJO8YxnVZtkGvC+v8fz+8EgddF9zGOi8VJTUkhn5JBypFYFDG46vd
w4+1jUDXK8N794477sj/ifZ08T+Wu9NcD+FDt1PSHiib0UsA9R6D73Cv3Ofj
g8SdR3Acd8qf1wma4WecM8Sq9cd0q+1wJlvinLZb1wUTkK7+XnotAL1+srR/
SX8/PyizPO6LT5S/8JiSE5Vl65rkxv3nbuLzrF1Mr/03Ol7TVUMFavI9fqy9
ZQC+cV/Jyb5T3rGrHl6wyc70ETkbOxO7/H0lb7n9ME7kok12IrIsZbSZptFm
OnVIUqwwGo9XdgHeGl8Av8/gb8aDLtnEF6CvG9+iW0+bwkVg3R1Z8nVkbGaX
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\
\>", "ImageResolution" -> \
72.],ExpressionUUID->"6bee5555-31ac-4412-8cc6-bc6ffa42cef1"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1356, 1333},
WindowMargins->{{Automatic, 18}, {18, Automatic}},
FrontEndVersion->"12.1 for Linux x86 (64-bit) (March 14, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"dc7c4f34-7583-4ac6-9ab0-267035d02a1c"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 297, 4, 67, "Section",ExpressionUUID->"d9d67a5d-b378-461f-bbd7-e6da45faba8a"],
Cell[880, 28, 1253, 36, 127, "Text",ExpressionUUID->"0f70538c-a276-4c48-ac91-91804d1067ca"],
Cell[2136, 66, 3008, 93, 127, "Text",ExpressionUUID->"9dde203c-5605-4284-95a6-bd86327301aa"],
Cell[CellGroupData[{
Cell[5169, 163, 434, 13, 54, "Subsection",ExpressionUUID->"03886362-3040-4731-81f4-cf2c76b21de0"],
Cell[5606, 178, 190, 3, 35, "Text",ExpressionUUID->"1e0528a1-9917-4bd6-bc8b-e555c1aacba4"],
Cell[5799, 183, 5654, 145, 319, "Input",ExpressionUUID->"2df464f6-d63f-4e48-acfd-a39d3834c489"],
Cell[11456, 330, 196, 3, 35, "Text",ExpressionUUID->"6686ccb5-b0f5-4f27-9777-167fd359ff98"],
Cell[CellGroupData[{
Cell[11677, 337, 1225, 31, 97, "Input",ExpressionUUID->"898a44f6-291c-46b5-a6a2-8b62c1a2c1d9"],
Cell[12905, 370, 324, 6, 34, "Output",ExpressionUUID->"1db4cbcb-1028-4b7e-b2a0-b39baa35fb4b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[13278, 382, 214, 4, 54, "Subsection",ExpressionUUID->"10d09eab-51f5-43ee-b171-1f6e0c7b2b4b"],
Cell[13495, 388, 6426, 129, 339, "Input",ExpressionUUID->"d0ae15af-fb0a-4bc9-a7b6-f227bc10464a"],
Cell[CellGroupData[{
Cell[19946, 521, 584, 15, 30, "Input",ExpressionUUID->"c3b287d5-ff20-4005-808f-eb4a37f84de1"],
Cell[20533, 538, 15734, 269, 199, "Output",ExpressionUUID->"731e3b59-2241-4008-b9b0-7f3281c0e5a4"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[36316, 813, 261, 4, 53, "Subsection",ExpressionUUID->"f93e7dc0-d3e8-4cab-b7a0-7068d7dc627a"],
Cell[36580, 819, 4000, 97, 268, "Input",ExpressionUUID->"cb886de6-1d9f-4814-ace3-b48a027195ca"],
Cell[CellGroupData[{
Cell[40605, 920, 733, 18, 29, "Input",ExpressionUUID->"98020535-5a89-46d6-a33f-41d5a124505c"],
Cell[41341, 940, 2741, 56, 198, "Output",ExpressionUUID->"ad89829c-04e1-4354-91e8-a52dfd25396b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[44131, 1002, 309, 5, 53, "Subsection",ExpressionUUID->"1c62f864-4497-483e-a004-1adecafc10e0"],
Cell[44443, 1009, 4641, 107, 354, "Input",ExpressionUUID->"912fa32e-56b2-4d96-8d04-4cfea672a8b7"],
Cell[CellGroupData[{
Cell[49109, 1120, 693, 15, 52, "Input",ExpressionUUID->"f19d6adc-0c12-461e-8c9d-06d0cf14c15f"],
Cell[CellGroupData[{
Cell[49827, 1139, 734, 14, 24, "Print",ExpressionUUID->"99296f15-29c7-467f-a0f5-540e0d52ada6"],
Cell[50564, 1155, 734, 14, 24, "Print",ExpressionUUID->"95198ae1-6e44-48c5-9c6b-f1cc1fafbb60"],
Cell[51301, 1171, 732, 14, 24, "Print",ExpressionUUID->"30303c0f-c2e7-4e98-be69-00a8052f961a"],
Cell[52036, 1187, 734, 14, 24, "Print",ExpressionUUID->"84cc526a-9a4d-413e-ac0f-60681993d10e"],
Cell[52773, 1203, 732, 14, 24, "Print",ExpressionUUID->"7b2f6ab8-4118-4ef2-ae9b-4d07b584ed78"],
Cell[53508, 1219, 730, 14, 24, "Print",ExpressionUUID->"159e9aa6-8929-4c31-b429-d1f7a9974067"],
Cell[54241, 1235, 734, 14, 24, "Print",ExpressionUUID->"658ea885-0095-442d-b192-f67df45b41eb"],
Cell[54978, 1251, 734, 14, 24, "Print",ExpressionUUID->"461d5d6a-503c-47dc-a09f-376d1f5cfea3"],
Cell[55715, 1267, 734, 14, 24, "Print",ExpressionUUID->"868a7856-30fa-42ce-8df6-fda1b48004ae"],
Cell[56452, 1283, 733, 14, 24, "Print",ExpressionUUID->"ed8e267c-8eb2-4962-9e94-8bd4d7499a15"]
}, Open  ]],
Cell[57200, 1300, 146245, 2559, 295, "Output",ExpressionUUID->"e3c2849b-2dc6-40be-a529-6acccec1c1bd"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[203506, 3866, 348, 5, 67, "Section",ExpressionUUID->"2763d899-07bb-4d42-a9df-acd05f22e1af"],
Cell[203857, 3873, 335, 8, 76, "Text",ExpressionUUID->"6ce40455-b9b4-48bc-ab0e-4996960ccdd3"],
Cell[204195, 3883, 7414, 151, 354, "Input",ExpressionUUID->"d25f5225-244c-42e6-9b90-8ea0382b70f6"],
Cell[CellGroupData[{
Cell[211634, 4038, 519, 14, 29, "Input",ExpressionUUID->"702652b8-3216-4ed7-924b-4cd35964ae57"],
Cell[212156, 4054, 15516, 265, 198, "Output",ExpressionUUID->"5511f154-66bf-439c-a7a2-2d33eb888290"]
}, Open  ]],
Cell[227687, 4322, 5090, 121, 289, "Input",ExpressionUUID->"729f3629-ebfa-4e40-a516-447a0e292fc9"],
Cell[CellGroupData[{
Cell[232802, 4447, 930, 21, 29, "Input",ExpressionUUID->"4056c0f8-1e81-4f1d-9ba6-1b8cb025e355"],
Cell[233735, 4470, 2614, 54, 198, "Output",ExpressionUUID->"3d02a3e4-5c09-4585-90ac-df11ab8f2b35"]
}, Open  ]],
Cell[CellGroupData[{
Cell[236386, 4529, 386, 10, 52, "Input",ExpressionUUID->"a78e54da-82e4-42eb-ace6-0734ab147019"],
Cell[CellGroupData[{
Cell[236797, 4543, 562, 11, 24, "Print",ExpressionUUID->"3d849fda-4c21-476b-93ef-58bfa1b5e32b"],
Cell[237362, 4556, 566, 11, 24, "Print",ExpressionUUID->"e5ae7ca0-f408-41b8-8867-df5201477b13"],
Cell[237931, 4569, 562, 11, 24, "Print",ExpressionUUID->"6e1a0601-51c9-4051-87a8-6764dede6587"],
Cell[238496, 4582, 562, 11, 24, "Print",ExpressionUUID->"67ecf0cb-6c02-4024-ad8f-82fb1890a776"],
Cell[239061, 4595, 562, 11, 24, "Print",ExpressionUUID->"6e658b99-3892-4282-b3f3-c5a028a0c1e9"],
Cell[239626, 4608, 564, 11, 24, "Print",ExpressionUUID->"2c845b0d-cee3-48c9-92dd-bf7702ccaad5"],
Cell[240193, 4621, 562, 11, 24, "Print",ExpressionUUID->"80a15bd1-d6ea-4765-95c7-777b32a7a22e"],
Cell[240758, 4634, 562, 11, 24, "Print",ExpressionUUID->"a1d9b1aa-1494-4f23-bf67-ec0545bd8df2"],
Cell[241323, 4647, 562, 11, 24, "Print",ExpressionUUID->"beb6620f-53c9-4d10-8ea3-5e745c42303b"],
Cell[241888, 4660, 564, 11, 24, "Print",ExpressionUUID->"5de1bc28-88f9-4d27-91f5-3986ccde4a27"]
}, Open  ]],
Cell[242467, 4674, 202551, 3486, 295, 146138, 2561, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"6bee5555-31ac-4412-8cc6-bc6ffa42cef1"]
}, Open  ]]
}, Open  ]]
}
]
*)

